%!PS-Adobe-2.0
%%Creator: dvips(k) 5.92b Copyright 2002 Radical Eye Software
%%Title: paper_TR.dvi
%%Pages: 10
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Times-Roman CMSY8 Courier Times-BoldItalic Times-Bold
%%+ CMMI9 Times-Italic CMSY6 CMMI10 CMR10 CMSY10 CMR7 CMMI7 CMEX10 CMSY7
%%+ CMMI5 CMR5 CMMI8 Helvetica CMR6 CMMI6 CMSY9 CMR9 TeX-cmex9 CMSY5
%%+ CMR8
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -Ppdf paper_TR.dvi
%DVIPSParameters: dpi=8000, compressed
%DVIPSSource:  TeX output 2007.01.12:1637
%%BeginProcSet: tex.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 3, 98/06/01
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
%% Version 97 patch 1, 99/12/16
%% Modified by Etienne Riga <etienne.riga@skynet.be> - Dec. 16, 1999
%% to add /Diamond, /SolidDiamond and /BoldDiamond
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
% DG/SR modification end
  /Metrics 13 dict def
  Metrics begin
    /Bullet        1000   def
    /Circle        1000   def
    /BoldCircle    1000   def
    /SolidTriangle 1344   def
    /Triangle      1344   def
    /BoldTriangle  1344   def
    /SolidSquare    886   def
    /Square         886   def
    /BoldSquare     886   def
    /SolidPentagon 1093.2 def
    /Pentagon      1093.2 def
    /BoldPentagon  1093.2 def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /SolidDiamond  1008   def
    /Diamond       1008   def
    /BoldDiamond   1008   def
% DG/SR modification end
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle        { -550 -550 550 550 } def
    /BoldCircle    /Circle load def
    /Bullet        /Circle load def
    /Triangle      { -571.5 -330 571.5 660 } def
    /BoldTriangle  /Triangle load def
    /SolidTriangle /Triangle load def
    /Square        { -450 -450 450 450 } def
    /BoldSquare    /Square load def
    /SolidSquare   /Square load def
    /Pentagon      { -546.6 -465 546.6 574.7 } def
    /BoldPentagon  /Pentagon load def
    /SolidPentagon /Pentagon load def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /Diamond       { -428.5 -742.5 428.5 742.5 } def
    /BoldDiamond   /Diamond load def
    /SolidDiamond  /Diamond load def
% DG/SR modification end
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath    { 0 0 500 0 360 arc closepath } def
    /Bullet        { 500 500 Adjust CirclePath fill } def
    /Circle        { 500 500 Adjust CirclePath .9 .9 scale CirclePath
                     eofill } def
    /BoldCircle    { 500 500 Adjust CirclePath .8 .8 scale CirclePath
                     eofill } def
    /BoldCircle    { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath  { 0  660 moveto -571.5 -330 lineto 571.5 -330 lineto
                     closepath } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle      { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle  { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath    { -450 450 moveto 450 450 lineto 450 -450 lineto
                     -450 -450 lineto closepath } def
    /SolidSquare   { SquarePath fill } def
    /Square        { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare    { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath  {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon      { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon  { PentagonPath .78 .78 scale PentagonPath eofill } def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /DiamondPath   { 0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto
                     428.5 0 lineto closepath } def
    /SolidDiamond  { DiamondPath fill } def
    /Diamond       { DiamondPath .85 .85 scale DiamondPath eofill } def
    /BoldDiamond   { DiamondPath .7 .7 scale DiamondPath eofill } def
% DG/SR modification end
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
%END pst-dots.pro

%%EndProcSet
%%BeginProcSet: 8r.enc
% File  8r.enc as of 2002-03-12 for PSNFSS 9
%
% This is the encoding vector for Type1 and TrueType fonts to be used
% with TeX.  This file is part of the PSNFSS bundle, version 9
% 
% Authors: S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry, W. Schmidt
%
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida + Euro.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (6) /Euro is assigned to 128, as in Windows ANSI
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /Euro /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: bbad153f.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmsy10 cmsy5 cmsy6 cmsy7 cmsy8 cmsy9
%
/TeXbbad153fEncoding [
/minus /periodcentered /multiply /asteriskmath /divide /diamondmath
/plusminus /minusplus /circleplus /circleminus /circlemultiply
/circledivide /circledot /circlecopyrt /openbullet /bullet
/equivasymptotic /equivalence /reflexsubset /reflexsuperset /lessequal
/greaterequal /precedesequal /followsequal /similar /approxequal
/propersubset /propersuperset /lessmuch /greatermuch /precedes /follows
/arrowleft /arrowright /arrowup /arrowdown /arrowboth /arrownortheast
/arrowsoutheast /similarequal /arrowdblleft /arrowdblright /arrowdblup
/arrowdbldown /arrowdblboth /arrownorthwest /arrowsouthwest /proportional
/prime /infinity /element /owner /triangle /triangleinv /negationslash
/mapsto /universal /existential /logicalnot /emptyset /Rfractur /Ifractur
/latticetop /perpendicular /aleph /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /union /intersection
/unionmulti /logicaland /logicalor /turnstileleft /turnstileright
/floorleft /floorright /ceilingleft /ceilingright /braceleft /braceright
/angbracketleft /angbracketright /bar /bardbl /arrowbothv /arrowdblbothv
/backslash /wreathproduct /radical /coproduct /nabla /integral
/unionsq /intersectionsq /subsetsqequal /supersetsqequal /section
/dagger /daggerdbl /paragraph /club /diamond /heart /spade /arrowleft
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/minus /periodcentered /multiply /asteriskmath /divide /diamondmath
/plusminus /minusplus /circleplus /circleminus /.notdef /.notdef
/circlemultiply /circledivide /circledot /circlecopyrt /openbullet
/bullet /equivasymptotic /equivalence /reflexsubset /reflexsuperset
/lessequal /greaterequal /precedesequal /followsequal /similar
/approxequal /propersubset /propersuperset /lessmuch /greatermuch
/precedes /follows /arrowleft /spade /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: aae443f0.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmmi10 cmmi12 cmmi5 cmmi6 cmmi7 cmmi8 cmmi9 cmmib10
%
/TeXaae443f0Encoding [
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /Omega
/alpha /beta /gamma /delta /epsilon1 /zeta /eta /theta /iota /kappa
/lambda /mu /nu /xi /pi /rho /sigma /tau /upsilon /phi /chi /psi
/omega /epsilon /theta1 /pi1 /rho1 /sigma1 /phi1 /arrowlefttophalf
/arrowleftbothalf /arrowrighttophalf /arrowrightbothalf /arrowhookleft
/arrowhookright /triangleright /triangleleft /zerooldstyle /oneoldstyle
/twooldstyle /threeoldstyle /fouroldstyle /fiveoldstyle /sixoldstyle
/sevenoldstyle /eightoldstyle /nineoldstyle /period /comma /less /slash
/greater /star /partialdiff /A /B /C /D /E /F /G /H /I /J /K /L /M /N
/O /P /Q /R /S /T /U /V /W /X /Y /Z /flat /natural /sharp /slurbelow
/slurabove /lscript /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p
/q /r /s /t /u /v /w /x /y /z /dotlessi /dotlessj /weierstrass /vector
/tie /psi /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi
/.notdef /.notdef /Omega /alpha /beta /gamma /delta /epsilon1 /zeta /eta
/theta /iota /kappa /lambda /mu /nu /xi /pi /rho /sigma /tau /upsilon
/phi /chi /psi /tie /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: f7b6d320.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmb10 cmbx10 cmbx12 cmbx5 cmbx6 cmbx7 cmbx8 cmbx9 cmbxsl10
%     cmdunh10 cmr10 cmr12 cmr17cmr6 cmr7 cmr8 cmr9 cmsl10 cmsl12 cmsl8
%     cmsl9 cmss10cmss12 cmss17 cmss8 cmss9 cmssbx10 cmssdc10 cmssi10
%     cmssi12 cmssi17 cmssi8cmssi9 cmssq8 cmssqi8 cmvtt10
%
/TeXf7b6d320Encoding [
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /Omega
/ff /fi /fl /ffi /ffl /dotlessi /dotlessj /grave /acute /caron /breve
/macron /ring /cedilla /germandbls /ae /oe /oslash /AE /OE /Oslash
/suppress /exclam /quotedblright /numbersign /dollar /percent /ampersand
/quoteright /parenleft /parenright /asterisk /plus /comma /hyphen
/period /slash /zero /one /two /three /four /five /six /seven /eight
/nine /colon /semicolon /exclamdown /equal /questiondown /question /at
/A /B /C /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X
/Y /Z /bracketleft /quotedblleft /bracketright /circumflex /dotaccent
/quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s /t /u
/v /w /x /y /z /endash /emdash /hungarumlaut /tilde /dieresis /suppress
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /space
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /.notdef
/.notdef /Omega /ff /fi /fl /ffi /ffl /dotlessi /dotlessj /grave /acute
/caron /breve /macron /ring /cedilla /germandbls /ae /oe /oslash /AE
/OE /Oslash /suppress /dieresis /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: 0ef0afca.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmr5
%
/TeX0ef0afcaEncoding [
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /Omega
/arrowup /arrowdown /quotesingle /exclamdown /questiondown /dotlessi
/dotlessj /grave /acute /caron /breve /macron /ring /cedilla /germandbls
/ae /oe /oslash /AE /OE /Oslash /suppress /exclam /quotedblright
/numbersign /dollar /percent /ampersand /quoteright /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /quotedblleft
/bracketright /circumflex /dotaccent /quoteleft /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /endash /emdash
/hungarumlaut /tilde /dieresis /suppress /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /Gamma /Delta /Theta /Lambda
/Xi /Pi /Sigma /Upsilon /Phi /Psi /.notdef /.notdef /Omega /arrowup
/arrowdown /quotesingle /exclamdown /questiondown /dotlessi /dotlessj
/grave /acute /caron /breve /macron /ring /cedilla /germandbls /ae /oe
/oslash /AE /OE /Oslash /suppress /dieresis /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMR8
%!PS-AdobeFont-1.1: CMR8 1.0
%%CreationDate: 1991 Aug 20 16:39:40
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-36 -250 1070 750}readonly def
/UniqueID 5000791 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA1772CE422BB1D7283AD675B65
48A7EA0069A883EC1DAA3E1F9ECE7586D6CF0A128CD557C7E5D7AA3EA97EBAD3
9619D1BFCF4A6D64768741EDEA0A5B0EFBBF347CDCBE2E03D756967A16B613DB
0FC45FA2A3312E0C46A5FD0466AB097C58FFEEC40601B8395E52775D0AFCD7DB
8AB317333110531E5C44A4CB4B5ACD571A1A60960B15E450948A5EEA14DD330F
EA209265DB8E1A1FC80DCD3860323FD26C113B041A88C88A21655878680A4466
FA10403D24BB97152A49B842C180E4D258C9D48F21D057782D90623116830BA3
9902B3C5F2F2DD01433B0D7099C07DBDE268D0FFED5169BCD03D48B2F058AD62
D8678C626DC7A3F352152C99BA963EF95F8AD11DB8B0D351210A17E4C2C55AD8
9EB64172935D3C20A398F3EEEEC31551966A7438EF3FEE422C6D4E05337620D5
ACC7B52BED984BFAAD36EF9D20748B05D07BE4414A63975125D272FAD83F76E6
10FFF8363014BE526D580873C5A42B70FA911EC7B86905F13AFE55EB0273F582
83158793B8CC296B8DE1DCCF1250FD57CB0E035C7EDA3B0092ED940D37A05493
2EC54E09B984FCA4AB7D2EA182BCF1263AA244B07EC0EA901C077A059F709F30
4384CB5FA748F2054FAD9A7A43D4EA427918BD414F766531136B60C3477C6632
BEFE3897B58C19276A301926C2AEF2756B367319772C9B201C49B4D935A8267B
041D6F1783B6AEA4DAC4F5B3507D7032AA640AAB12E343A4E9BDCF419C04A721
3888B25AF4E293AACED9A6BDC78E61DA1C424C6503CC1885F762B86FECDA8944
AA3B20AD6019056E01677B9580FFFDE526AD4D7DC47818BBED5A01621BC56F96
5560E81E1017CA6DE465E07BD7327C7850BFF9B177A885E31A95A8BC40247E18
76E04A0110CCA35C0467C5B09BECDA68EF5CD395219356A08B20BD31D259EAFD
E2354076854153575993EEBA7429D43087F179485EF25EC4AA259D70DAF83265
93DAD0DD4E42CBB889F9CC3DA0FECAD555E162F0F2205271F0BF5FE21E5B7BCE
B3D37D3B5B77F9D7950A13EFF165EC848C4CBD97E5FC6A82ADCD7E23CB43889C
880097CE3F12BC05EC474D1344594EEEC3C1AC743DB8912D2EEB88F84097CA6A
BF3A9EC0E05D715DE75070A846AED0A7C7857AF63D96C24AF83713C870CDD273
BA29BB1C5A2363807A67D7DFC328D4A1B86DC6FD16D8A7A5FBE5F926432A0ECE
301B47F9834E6E66CA6CBE985F6C0AC00DDDF1DBBD2F22AF94A33B7139B9B9A6
D86EEB34B2E1B5A1F01D1596FDF77C92FE2A291205E5B210D8C9E7BA949FA456
858332FC44775309673A393C1329F970B792ED184D3B51A62C1448E9F25970D5
526E739D7422E5C8819ABBD836C2C4437493406BEAB2E5E9B8738EBDC6F6276C
5996C94C6A8323BF2DE216A3346826340379063992B4A9CA16D9C81F0C2747C9
3C6628A5CBCAB46D0A645484BF21AAF042BE5F5B8E7E8294597BC5AB29478F4B
931F7211
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY5
%!PS-AdobeFont-1.1: CMSY5 1.0
%%CreationDate: 1991 Aug 15 07:21:16
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY5 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{21 -944 1448 791}readonly def
/UniqueID 5000815 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D5FC1B2109839E5B52DFBAF552B11EFFB6A16C
F03FB920C15AE724EFDF0CCBF00A838D34440FF9FED532F44036AD22561184C5
283722DDFA7285E62754372D716D704AC0E00B2F6AB67154241C7449AA047833
94CEDB08E8C92907FE72A0B05AE36A7B9226ACD6E7890A0B528FDDE84A950FC6
801DE75CF2E739E9121149CCB8B1C87A106822648D84A3D3FBF295EE6C4BF403
BBE9A1C1F6DAEDD1E642ACC486E609703D7612BFFD10C324F5DC710811F7F614
3691B400E3773987424C0D2B0D8A736873C6371DDB2442F05E018A2B5CA9A4AA
17AABB95D09E5890CFFFED5AC01495D89A53D3CEB6E0F620D2A75CB26E31E1FD
557B4C4A08FAFA16D07D0880ADC1A4C17F227DCF6EF48D70FBA97C6215BC5CCA
595C934B200EFD814749D407013724C07EAC338D7373C176EC41EB79318E3357
A756656C6F73B5506D8C5CDC5E9E55D256EF3D88EFE1742746AB66818EEBA31A
8B130CA692D48A1A059C28051E62813247A5AE112D9866C2B302A827570BF2BA
43C6AA06C6095E23D6329D0047FB91404185A9CA5C66ADB337A7A3F698250D92
B4E3E90B773667EB62A670B1E9C832553CCC115250FA182864EB05C1E8244189
3FE6D542BC146EF58793A5D5161327B72E6CDB3E574C7E86014455280EBD588E
FA33FF191700D51CFB25A1ABFBFBAA19EEF13E8BA30EA97140C31403181B36B4
CB5168824FB2A72C7EED08918BB61BE441881E8B95617C5B9C1FCF99D0CA7B80
59FF4EEB4E9C2943AE0F5384108FA766C87B5B5634B6F9C338C4904C4903315B
2789662B368452E83440CD21E76FF45C503E1CF63ECB1E53A44F8A14DEFD89AF
05060B32FE4EC6A1FA2D999911EC36549A26FBACB9159C6055B953D5AFE00F51
21FFEB32AFF924870F5D8304CE5C3D438EC2E090062CAA20CBEA2E555098DF9E
558306FB6B2EB85415C486B55D5313D78042E64C2528388E2E46BBCAD150571A
65F00B4E598D4B1560C6C5B95DA9CB483E36E887451F6FB4FC4D80FDF75E9010
C11C786660C43AF96A404DD86AC3AFA6E417C589BD4CED298A8A39FFE382310A
0C0DBEA3856B7ED8C28505910B64A1B3A430E190F50D2852247C8D06922F8FA9
40B93421F256CE37F0441F8095E1A3481AD60771C65113C61D844E489725EA5B
34501709463897CB5FB01CAAA3BE5109B4A49E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: TeX-cmex9
%!PS-AdobeFont-1.0: TeX-cmex9 001.001
% Filtered by type1fix.pl 0.05
%%EndComments
13 dict dup begin
/FontInfo 16 dict dup begin
/Copyright (see\040copyright\040of\040original\040TeX\040font) def
/FamilyName (TeX\040cmex9) def
/FullName (TeX\040cmex9\040Regular) def
/ItalicAngle 0 def
/Notice (converted\040after\040April\0402001) def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Regular) def
/isFixedPitch false def
/version (001.001) def
end readonly def
/FontName /TeX-cmex9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 181 /quotedblbase put
dup 182 /guillemotleft put
readonly def
/FontBBox {-26 -2961 1503 773} readonly def
/UniqueID 4314405 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA06DA87FC7163A5A2A756A598FAB07633
89DE8BAE4F093966CD2192CE95EB0F323A6BABFDACCFCF27D91F7869A0E46CA5
9AAF6905783E8AC1F3F9875A76F97187738432F8D14E61574CB292FFB9740871
66839799D8CAF6E0DFE00012EE6D46A2B3655F29705BE37FD5EDA1C765AA2CF5
C5AD37207ED1EE9DB82FF31A33307FFA16911406557336AF92F50B603C7BD336
73EC060F68318378A6F599DDADA5A21504CADBA1E1F4B1A22962BA1BB39ADC7B
E8CC92F196549457877C9636A8A7EFAC1C3745644C0FD151C70B9FAD69B02C1F
FE5ED071CA1CF3D4A70909B6A3986687D8FB87391E0C665A4EBD2993161FA81B
2B8F7221294CCB11AE65A31E8903DCC3AC1A47765E880ACDDC88509418B04F0F
2D84FD3007D411EEE2DFF237D99A10430524F07480302DFD698B571A023B08A1
36F84F09BCECBE34ECC1CFD251EBBF338CFF7C197D9B33CBD9ACA7171370527C
CFA0F7FD5DE8B62790D7DF23F004AEDA717F35B5E2B260A8AAFDE31164AFA47C
686735EC47454F42AC5037D97B410DC373EB0CEFE3C41E243EDA86FF582AB53E
7B56D103AD816F2D7DA35DE239DE30CA5645A377E77A1980B984C195E605841B
36C82FF23D95B5FF770C3AB37C2D657FD1731E91FA0446C316C68F62626B91DB
F324B260F4A7E93EE5CC5A22D27E2613D739EE3312FF3C8FEA78555721D258DB
8C4D471BB5E706232F9B04C718E7A4A1A8BD0335353857BA91227C7F6073498D
596E212FE0A67A7FD6F703AFE66452794DBA46CB31CAC6AE422779F631FDEDCB
B33535F25C9EE10CD8F10DB8AEEEB35DAB087422A853303E5E134CEB95A26593
3E20D41C64F9539BA74E65C4F016F0D9102883EFFFF16F0AFC9051D55709EA42
3FB07D454DF8D279AEC9F7F73AC1E47D37E676CFD2EE7E75BA41AE3182CD2A4C
A2A7A02122A4FCDAEF9EFC3B83E5D196768796C0B342B9FDA945264A0590A1E4
4183F1156D2C236CF7B969D9D0B2BCDC6F037A9AF47DD74541A3C7A20905513F
E42B8179A2709510BB6BA3504CD02AD28AC8A38D4272C9FC38344DF1BEA3B0B7
C46CCE0637495FA80D6E1F61E5FFCF2C2819727556D3B42DDD1CEBA7592BD3CF
3A49B356144579867FE25F1D7FA7F77C51E259EE3856518D5D62FCD57A5E4C08
7CB2DFE70C2AE8A251ED3399A2310BE143E210760D87D7F549D783B28BA50330
0DCDF9259D545D99C4774484464DD959090E82AE493A7880860C8915AE08B8A5
EE7256B3C2CF9E6F2FA3B2A5ED45017A9F36EFA02D016E53FFDB6C4221757F6B
2DEAF475CA17A6D944D3A249C757AEC6C0012A91E43D4BAB30513F8491F967F3
C1F15A1286F6F4F9BD4785A0FEE0F460932D0D874694605B152BA422B0F95C1F
B64473A33A02990A62F4325898C0BA7ABAD821D7E09BF8381BB39D05251BF18C
328C677EB45DFDBFACDC453BC19DE3D537D8F64C42251F443FCD449476429D00
269AC698D2F5867308C2ADBBBEC79E76D0BC4DA2E1451EDDCBE7C0F05930A8B2
E1A991A65C74
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR9
%!PS-AdobeFont-1.1: CMR9 1.0
%%CreationDate: 1991 Aug 20 16:39:59
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-39 -250 1036 750}readonly def
/UniqueID 5000792 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FADB679CF58BAFDD3E51DFDD314B91A605515D729EE20C42505FD4E0835
3C9D365B14C003BC6DD352F0228A8C161F172D2551CD1C67CD0B1B21DED53203
046FAFF9B1129167921DD82C5964F9DDDFE0D2686875BD075FC81831A941F20E
C5CD90040A092E559F6D1D3B0E9BB71733595AE0EA6093F986377A96060BF12A
A1B525CD9FA741FE051DD54A32BECD55A868DD63119A4370F8322CCBEC889BC2
A723CB4015FC4AA90AE873EA14DE13382CA9CF0D8DFB65F0ABEDFD9A64BB3F4D
731E2E1C9A1789228FF44116230A70C339C9819676022AB31B5C9C589AE9094B
09882051AD4637C1710D93E8DD117B4E7B478493B91EA6306FDB3FA6D738AAB1
49FBB21A00AC2A999C21445DE3177F21D8B6AAB33869C882613EA6B5EC56476B
5634181ECBF03BFEDB57F079EACE3B334F6F384BDF9D70AEBD592C8ECF21378B
54A8B5DBF7CB9282E16AA517E14843909339B5E7C55B038BF3BB493F3B884A1C
C25F9E8FB912CBE23199AD9D2C3E573727701BA301526C66C3617B9514D6F11F
11930B1D97C17816C85B1BFD9B973A191B33CC3B391815AD14F1CBE935942AEC
D4004E6BEF379066FD72209DC88D2E634E79BCC2B98C766CBD92C561F2703F8A
109E6C6CEC7B866F2FC7ADF646BF492E520319F3B949AB5D84AE990B33344A40
3971F58DFDF8D8D67FA0B8F2A0D884F8C09A5A721319B911DBA0A35903877343
C37BC36C5EB32353272D1E6ED5FCA611BE319A7E1E842CB7576E7604ED0409F1
ADA7F448D7DD3FA92138714F3763BB183B084A80ED8F1CAE1EEFA70CE0CF60BC
8276BF85928220A5AA309D4741B2A79BFA61221EEF5E434E2DB4BC7AAB4E896B
670D98468BBB64F121F5AB5D3E34FD28F86B2EC1240090A4944B7623D2D6B159
C5C2FFB9B7EB5314DFB21B693635A4B7F530BA6CD224A587B033D15D9260DCFD
2CC531E7F28FC3A5388BC515AE02B4936A273376A2682A5AC125E5050028DF6E
5F2896D99D8510E056D2065ED9028E6551E1D1830F1161DA1AD682D9D38ABDCE
DE8D684F68F5B9531B6C02C3330EA005DDF15D501A69ED4418152D921E3CF0BF
4D237D989AEE28C7AAB28AD12B185FFEA8570676F0685E0938880B6436F896BF
1AA34DB2AB27C1EF025F656071FC93DDE7811BC63F87B8DC905C7B24ACD2816B
3615B52F009771806D2E60D31BBCDF44B783724AA9CA09D4CE0333D899A1892D
1658BFF18A894469C01BDC9A20A8F5A2D61C997F28B1C30565ED771A40B2240B
8DB8703E85E8BD7E49917F76871CDD134C2AA7B51A2C4A5FBFFC157672A6D1D6
2E84F3E460A1ED5BAE7107BDE77D6A1D40A76AE97CE10788E24DE66A8AC37D5A
26B224E001F1EE09DD376B73FEB337FED025AB9E07FDE18F50F22CF22C610F88
E035973E0573448EB2F76F184958133A4F58C387945B43C6AAB73333D8BE1161
4E1FD08B8E1E4A7D03462F4B6D3C09B5A4C2A297A679F11984F5F9768352ED91
68503B0786C19746DC2D7F5DE5EC0767292106FFBDAC6CEDA8DBF2168CA78930
82715E4B2D6B41BEFB3C2304208DBF9134C25AF7266BB8A7CDD217699B50F751
23924BBFA9FAC1A1B6D4526F1DAB34AB44AFFF38AF60D546C556DF61A325BE2A
B84DA6D1AE50145120E20F2941BE3543678D2CF53864631701806B9C005A38EE
F7F4704729265D0320BDB8B12B09D4176F9FFDDB4DA3B344386083129C45775F
E61775A0C893C98F45067BA9F592D398FA6E65BFE6886E9AAD8DBE93CEBC0241
B04EB89DF598F6D86F4481794463B667023B270B3B368E8AAB6C71FC3C110A08
3A49DD594AD549ABC564ECCB265644288D287AB12E0F924FE109141871540EFC
B758931BF61CB40A1BA2079D829FE3C4BD85ED0FA9766DA19F3F96D2FB4B9964
F13867DF17AEC93D67728C8E6E750191922BE97BEC2134DFE70CB0DA56C20399
9AF995E5EB3AF0433BEDE55CD86BEE84F098AFCD00925C23B6063708A33420F0
B1D1330AF3E82FAFB8104D430B714E496885C361D843DDE529D4027803614F65
A9A4395B8E276500301EA5D321E8C6D3D8E54449CBF08CE69802F4F177EBD216
18A0EE27CC0F9DFB81026C22EACFEF80443AF7DE17C07E290725453AAB46FC14
DFDD78787CD833C077D8F250ABED025B5CE00131521D54C274C8FA4A7F8153C5
CF30DE3333EAA11C02AECBEC4F76C6701840A52728D396217398267567B70377
2EEF725B35C891CDF71AB986CD967FA5330C2871428894F8E95132464696D4AF
F0935E2CB0621185E130091A30BC5538C26942C1562B98F44B27482361D0A8D5
355D341C67FE5AB72A7C06D599502B9BF93C8471E6C1B660C30986644AC8BF80
CE06895EC32D4AC6DA3400DF66B56C4B3C257C7B0EC051877408813C69AE02A6
568A17949658F0136972EB36C3451E839A64468CB8753C02B8BC8E30E3586C98
906D762D7F4F67A8CCF86E03F712C53688133367A243744A9F26D9CAE8F22FF8
2BC6BBF2875D603BB2DC75AC2B099A9C39FA0C4E9A68014EA8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY9
%!PS-AdobeFont-1.1: CMSY9 1.0
%%CreationDate: 1991 Aug 15 07:22:27
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-30 -958 1146 777}readonly def
/UniqueID 5000819 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D0037D33F24E2FAC2B0009AD3C8350CDF8CC
65BCA87979C36D14CB552E9A985E48BE4E88ECA16DF418749AF04FDD2B0E1380
D281BB2476BB45FF30946B247DFD7F57305FA87E50CA338121C71CDFDF927A9C
77FF14CB4A1D6D80356FB1171ED38C37702350497B44E42CE31DB2F493807DAA
15B887C671199A54C4C1294BC520F5538C15556BC43C9F62342B121C6DCD6C5F
491DA47FF360201EE21C08A781ED0589A6DF91B99FE118B9B29E4F068672E52F
1A06C514D91C4C937D4E642503392B1CD1BE8C2F499A1AD3753691F4D1DAB520
BDD769B46E96AA8F78ADA9231320B3522E91A6503C92CEAC9C13B1A17F701EF8
8F269895F2FCD14361D6CDA34EC45009400840BCB217677BEBD9EFCF22F0D97E
9E7D1E98A4B6803DB7FE3B6CBF080CD0F82B3921E4BE26E3D612AAE54B1CF910
DBB6D123F7377C3DA0B04B510B5A830BBF8C7964ED164FD1A2E9C80569C6C4D5
41427AD62FFA6CD19149ED3DB9BBCFF05080376E603A409A959937748F98BBD5
CA2AC70E2763B478ED531F06219B9EA40A217F6F7641A03ED7106CBC86D1A520
1B4D41
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI6
%!PS-AdobeFont-1.1: CMMI6 1.100
%%CreationDate: 1996 Jul 23 07:53:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{11 -250 1241 750}readonly def
/UniqueID 5087381 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DDF0342CA1080743A076089583
6AD6FB2DC4C13F077F17789476E48402796E685107AF60A63FB0DE0266D55CF1
8D0AD65B9342CB686E564758C96164FFA711B11C1CE8C726F3C7BB1044BBD283
9AA4675747DF61E130A55E297CA5F0182A3F12F9085AF2F503481071724077A9
387E27879A9649AD5F186F33500FAC8F7FA26634BDCE1221EC0ED0E359E5EA5E
6166526FEB90C30D30099FBDC1BC2F9B62EFEEC48345160804AA98F8D0AA54B7
A480E715426651865C8E444EDB798C7E11040AF6E5A7ED1888653C6DBF5E6169
70BCD9C063B63B561EF165BF3AF11F8E519F37C6FDA2827685739DE2C48B5ADE
EE84F067D704D4511DBFA49E166D543CFD9ECD7417055D8A827F51E087CD2927
BAFC7E6CFBD70B0FE969F890A11149D3D44D422C3370495DA9951AEE7253A49F
3A9444C8CD9158D84117299F7F2332FEB0F94E6ED8BC7AA789A3219BC2F227D3
3B5BC75FB53B55D72AF4A6A7BB613FA235B11BB37D059FD87127CEF73D5B3FBF
9F91ABAD78BD9240BD9525EBA78095EA0BDB25D1A19E876F292882EAD5619D46
D20317A345D931F4FF4EAE6216C27044CBA525E3B917CEA25A04C120466C4B93
FC720E6BA832A06CCA0A3916CEF0968D49085AEBD243C41A448289A6F05CE3F5
79148DC112A3CC7E8FF810B8C1A09E05F496C0F1EBA334E42E05C376C98F5F69
C06C71BFC0A2F3AC9951CFBB143C66FB84F9C4ED27DF70869352D61BD5E11508
0797B87C774354F518712BED10630585E99E1C29B15CE5645E436727B77AA544
E31EA2CB49EB539F8C14D08272CB2811D3422A3900BFEEBC39A6020F48739CD6
82F57CB3451D742EEDFDCDA1681CF2A4C0A6590900A59899A221790DB7045E51
733AE0DE471463F267DBB3920D6CDADBCA7643DB73FA52921C338672EF72A4EA
AEFE5433F0CA5519F0F770DFBB656CF13C7F6973F97ACD696FFD96976F12CBC0
DEBC170615CEB3440104DC9B166843C9EFDFB4C367607E3EBAEA1DFF36BEB408
2ED5BEEBADF93D8DEE856FCCA6D8F0081619B0FD607BA3E1E2E9783E421E7173
5AFA2D164328A4B965DFB1BA566337FE965B25B1652748930705F3C4A1A5A3E3
62A675F9324506EB1A8A8C64171A59A6833E2BF986A64357921925AF6C270091
B605B9CEBA78C660F33C8A272EBDA490B231F6269FFDE2EB4861C8A288A2D8E9
2720BF1A8B2C48F02AC8548D53692A59B5D46C1EE76C2EB05FD17A45BBC1C63F
BB5BD7374825421DA4A5DB9C91CD397E12F64166ADA84E93F91C1D211CA21679
7B7E9C4997CEEB50772D61BDC3CC8EED0180F3230FD7906B16D39ED86A202651
3937FF3039AC10452CA1346891913BC587383FA27840B63D93A52BE86197677A
46DC78FAD99E43DBFDF9133E9CBC8C899485AC28DE9EEFBE55316E42CDEE755A
BDD7BE8F02D54933F1C77B1DE68BDC333F08CF5895054E7C1C350394E02941D7
34635DE7EFD865D8F6A36BB50E78A464BD43AE173CB0A6B9837B3333A23253DC
7D0DA86131F750E91F0B991FC4E2A2EA6B6BA16DC5C9D5A823C25D53F90F15B6
1CB1544EF0F5ECCB143311FB7C87AF60E11E2577729D2E07386D0D2A030393D4
0DF4793D6A5ED59E5F5720EA7726CA385AF4B4A53D056E498CA22D4DD8D9A3EA
F3FD5C55B8B37812FBFF77AF7EFCB35CA3C0673BB5DEB37FB68437012E35948D
D5D8749D3CCB60AF9155C284253FF67EB5279DF64DCC63BA7BEB11FB707E537C
AEB47AFD9561BEE430FFD24240C7980FDA2DE9CCBF2048F744F048C573403184
895B205F04B991945F0F2D4EC608D23564342CA858B7792DB9B63CA6D79D4B4C
6767E992CA70503A61A6CB6555426036DB4D61C836CCE7B56E728F6477F427C6
B6F20266FEDBC210A761298030D92EE4AE1B6F666B9FA680DB025401E7239BBD
6DF1A302972005989E4950AA2416E29A3B46F6AB00C71CD76D355A39075553B3
5C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR6
%!PS-AdobeFont-1.1: CMR6 1.0
%%CreationDate: 1991 Aug 20 16:39:02
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-20 -250 1193 750}readonly def
/UniqueID 5000789 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA17D1AFFF95F4224CF7ECEE45C
BFB7C8C77C22A01C345078D28D3ECBF804CDC2FE5025FA0D05CCC5EFC0C4F87E
CBED13DDDF8F34E404F471C6DD2E43331D73E89BBC71E7BF889F6293793FEF5A
C9DD3792F032E37A364C70914843F7AA314413D022AE3238730B420A7E9D0CF5
D0E24F501451F9CDECE10AF7E14FF15C4F12F3FCA47DD9CD3C7AEA8D1551017D
23131C09ED104C052054520268A4FA3C6338BA6CF14C3DE3BAF2EA35296EE3D8
D6496277E11DFF6076FE64C8A8C3419FA774473D63223FFA41CBAE609C3D976B
93DFB4079ADC7C4EF07303F93808DDA9F651F61BCCF79555059A44CBAF84A711
6D98083CEF58230D54AD486C74C4A257FC703ACF918219D0A597A5F680B606E4
EF94ADF8BF91A5096A806DB64EC96636A98397D22A74932EB7346A9C4B5EE953
CB3C80AA634BFC28AA938C704BDA8DC4D13551CCFE2B2784BE8BF54502EBA9AF
D49B79237B9C56310550BC30E9108BB06EAC755D6AA4E688EFE2A0AAB17F20FE
00CD0BFF1B9CB6BDA0FA3A29A3117388B6686657A150CE6421FD5D420F4F7FB5
B0DAA1BA19D638676E9CF159AC7325EF17B9F74E082BEF75E10A31C7011C0FFA
99B797CE549B5C45238DD0FADD6B99D233AC69282DF0D91EA2DBD08CE0083904
A6D968D5AE3BD159D01BDFF42D16111BC0A517C66B43972080D9DD4F3B9AE7FB
11B035CE715C1218B2D779761D8D7E9DEBE277531BD58F313EBD27E33BEF9DC5
50C7821A8BBC3B9FDF899D7EAA0B94493B97AFEAC503EB5ED7A7AB612DB13294
19F96BE45455FDE8771DBF48728AF18867547BFAD6F0FAB8A047E66B817E5523
EF56313B3D2F205468C1A56453669E7859E7D0E71BE95B4F9E923CC89C4C012A
FBD4DBE12809FB4D49BC3FDB99C457CC30CD19A875932C2C97196E084441B096
0A8B7103F9A865986BC57F63C020327FFD35928018D23D13EB0A424B1AEEEF6F
1F1BAC2E6C85CAD2E792007458A6856E1DED4BE043FF8358F844FE0D54BEB726
B524A825B6733A67219775AE356F12BB1A57DDAD743ADC1A7D144DBFA046DE8E
C72386FB6CED5729711844582829E93F7A32A0E0BD0E29A9DDEAAB2386173AB9
F8D94912DC86538DD352DBEC546A6A0E0FBC2EC2DA7EFF75142AC75164B57584
95BF577B143971889ECBF9F3436FA85B8D3FD20478DD3939492DBF8CF90E6BAF
082F4C9DBE8FBFFD9A6EA75D6F002C376B31FD467BB23717AAD227163C399A46
E9CCFB843FC147E2754766689E2A4091E7830FD3CEFB9D6D4F86E17A72F41262
17AEDC0F2B035B7225265EB13FAD206DD556F689972494BE54B49605F3355ECC
295002FAD96DB29F34FB20CB94FA940DCBBA58973602BABB387CEA2BE63CF1CA
6FB8B4AAF7985CBDB4F63737DB02AADDBA64895560923B2D3F49B6210FD1E071
7E56F2591D56512CBDE33E203922B438034F4CA6C7662E487BAE4D4700CAE37E
EF50A2336C4EB8039E6D86A0784BBB670EB46313288AA74FA9A6AB5762B28D02
91B8CF5B6361D9B923FF83687A8B283AC8F3758779552EBF242FF456DFB8B0BF
D434CCC71B714B9FD9A26B394C99E3AB35CF8F8D9844BC45F3E064A4D56C38E7
AA4EACF2FFE326F592B21AD0A3E1DDCF01BF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.1: CMMI8 1.100
%%CreationDate: 1996 Jul 23 07:53:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-24 -250 1110 750}readonly def
/UniqueID 5087383 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DDF753642CD526A96ACEDA4120
788F22B1D09F149794E66DD1AC2C2B3BC6FEC59D626F427CD5AE9C54C7F78F62
C36F49B3C2E5E62AFB56DCEE87445A12A942C14AE618D1FE1B11A9CF9FAA1F32
617B598CE5058715EF3051E228F72F651040AD99A741F247C68007E68C84E9D1
D0BF99AA5D777D88A7D3CED2EA67F4AE61E8BC0495E7DA382E82DDB2B009DD63
532C74E3BE5EC555A014BCBB6AB31B8286D7712E0E926F8696830672B8214E9B
5D0740C16ADF0AFD47C4938F373575C6CA91E46D88DE24E682DEC44B57EA8AF8
4E57D45646073250D82C4B50CBBB0B369932618301F3D4186277103B53B3C9E6
DB42D6B30115F67B9D078220D5752644930643BDF9FACF684EBE13E39B65055E
B1BD054C324962025EC79E1D155936FE32D9F2224353F2A46C3558EF216F6BB2
A304BAF752BEEC36C4440B556AEFECF454BA7CBBA7537BCB10EBC21047333A89
8936419D857CD9F59EBA20B0A3D9BA4A0D3395336B4CDA4BA6451B6E4D1370FA
D9BDABB7F271BC1C6C48D9DF1E5A6FAE788F5609DE3C48D47A67097C547D9817
AD3A7CCE2B771843D69F860DA4059A71494281C0AD8D4BAB3F67BB6739723C04
AE05F9E35B2B2CB9C7874C114F57A185C8563C0DCCA93F8096384D71A2994748
A3C7C8B8AF54961A8838AD279441D9A5EB6C1FE26C98BD025F353124DA68A827
AE2AF8D25CA48031C242AA433EEEBB8ABA4B96821786C38BACB5F58C3D5DA011
85B385124B1D786840F2AEBAB2DA265F4C6B4C1728777AB469A7103FC8797189
B0231A9B572E1C041FCBAC7B3613BD1A8277BF47508DC985318B7613C6065F95
0BEC06CCFFC683F9E232E47BEB13AFDE426763BE8FD69040401E9FC64EB08924
7F89485B1C3B5102DD52A408D38EB2FEA483803DCC7CBFDA09A1DEF811851322
207BFACB71CB7532F7F744BE48E151AC6A103952EB2DE1238EDF9E25764CEED8
D85EA0CF52D49550F949A82E52AD2789CA129FA6067900F3376BF27D84BF4855
7DF315D56E1C8C46E7A634A254C345C5566F97DA46EBE5F165A860B489E19AEC
065EB6CA68727601CCECA70A11F7580A0403FDC5B6D66FA10529209A16482787
F7FB19888BBD62C74E5FD8C61B003E6345DA2DA0CDBA6F9CC105C275EF637F4C
1101C9AD5F89DCBB0073C448D094E10D0BDC27D5845DB22A95137A354F0E33B3
9EB32CA05D06B1977500AFE6449F357CE6223ED7D136E533A07471354C9E4EAA
909690E091DBC6E979A2B6EB87B7790503CA96582704DF75892FD8CDEEDCD4FD
DC6A1F245FDD8AB0B634C55E2CA64B980929B0F2853693F83E53E3F39F222B51
0D93E13AC05BAAB7BB0EA74ECB1888091B4F833CE5044008CF72E7795628DFB2
83FF3F30B6A662D299B384B708248426C635D3146585109439977B79B9152A60
043E97308F33AF58E0150B04150D637BB49BA0EDE3FC327C43D150AECA24B9A6
1F7A6E770D7ED324694EB9A8AB609BB91B7CBC95FEAF8489BAB9CD518632B80E
A428F69CC81F179C00864DA3BD3BD938F730DDD8938F64FEFAE88C59D958B545
D8FC118EF1BF66D34DD7DFFF41168B35579E458613CD7356EDAFB7F9B25F29CA
04670E85791847AB10CC8322711DF49E586E51B51DBA93F0079A7BC3C00DDA8A
0E9F39AA4774B14D7385E98045F01447D6DEBC032DA4DF5421BF7F2B44616966
B59C0C67F5F413F3A26403BC89D598EB9E6AC323BE69D61EC9BF3A165BAAD3D1
673653C72C8E7BCD359986D0E3D2DBDA1E5C9C731D56E43077BAE1C75FA0AAF0
83AA2F392F923E2525D4B5F2C2868578F075132544964435E91A4080B1555B97
446BE5C565DF0094869F913E5E082D85E6C46244C72AEE61AC63585DA5EF2159
3846415FAD95BFED49DC72D02817C1DD4EE4D3CB2BCDDF65A678C22335C15CE3
762FE0BF7EACDF0E33EA0C685A6587EB076ADA42CDB60EA4C4493810B530CF30
3E5CF98846C5E4835C8181478F674955DFB59750199B633184CB8A11158D367A
6D006D8A97524D144511F777FDD08EB4B5E1A41D1D68C2CC6C50C5764BA2DBE2
9112EF04645009E50E30C9675589AE23B9349ADD72949F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR5
%!PS-AdobeFont-1.1: CMR5 1.00B
%%CreationDate: 1992 Feb 19 19:55:02
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR5 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-341 -250 1304 965}readonly def
/UniqueID 5000788 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA1F9B0FF4CFF25B8E64D0747A3
7CAD14E0DBA3E3CA95F10F24B7D5D75451845F1FB7221D7794A860756CFBB3E7
704A52A22448C34812C3DBEDD41892577AABA7D555E9298C1A0F7DA638078167
F56E29672683C51CF1C003764A8E7AD9D8ADE77B4983F56FE2D12723AAD8BF36
682CFBB71B1D12210144D39DD841A971F71DB82AC6CD815987CDCF29ABC3CC96
5EEBD5D661F452C6E0C74F9ED8D0C5B3755551A172E0FE31EA02344176E32666
14B6853A1C303A5E818C2E455A6CF8FC9A66DC6E279101D61C523BD9DB8EB82F
EAF4D7FDF6372383C0794C4568D079648689A199D4B65BA646CF95B7647E4BEC
83856C27A8EF177B3A686EDA6354FE9573E123C12EC4BA56A7E8BFB8F9B75147
9DD79A743968F36F7D0D479FA610F0816E6267E5CE327686A5485AB72201525C
FB3B7CA10E1BF26E44C24E1696CB089CB0055BD692C89B237CF269F77A31DC81
0F4B75C8400ABCFDCEC6443CD0E81871CD71AA3064ABDE882C4C52322C27FA8B
41C689F827FB0F8AAF8022CF3C1F41C0B45601190C1328831857CBF9B1E7D1AA
246117E56D6B7938488055F4E63E2A1C8D57C17D213729C68349FEC2C3466F41
171E00413D39DF1F67BC15912F30775AFDF7FB3312587E20A68CF77AD3906040
842D63C45E19278622DD228C18ABDD024DD9613CDC0B109095DB0ADC3A3C0CB5
AB597D490189EA81239E39202CBC7A829EB9B313A8F962F7879D374ADF529BD0
5533EF977142F647AD2F5975BA7E340419116099B19ACCCC37C551215F95BB1E
F7F5CE777B793F81BBD695D78624F4D83CD0DF652B3347D06D8DF7D51C39F7AB
7ECFEFD82969F30E30FD9CCA8115701FBA93F7AC1FFA2B7E3539BA13A1653EBE
9FCF89B26A891C8E51C0C73B7C55304B37071147B61AE0BBAA3F6947F1E38E87
E1FA1F80B70A097E3D7CBE85FCCB0CAEA145ED937D7AF5C9C489687000B8ECC6
52D2D717FC9F056BE783E66A4B4C71933CB0D4BC649FF39FCFEA3069A4FFAAF4
8797FB8C780B35EC476D836C5C4C223C97081E048857C1986BB8DD4BEF3AE93B
4A6E6867E2D93064A325F8400268294F02F5AD2EFD6E111159480B8D034AE474
7BB5BF8CB157D42D48D3C3D2328256CE5223FE7786168B6CD69B0681FCFD4632
2A38B8CD20806C2195C00349AF4E1667F1E4FA7D883C890608924DE9FA28740B
DD7F370CE96ACE1F64A96C0E68ACA171BDD466C29822C7015E5ED22D7C284157
3D92601B0F866563B589D269E5D887EA8D4989EFD93D445C91FCAE1A92954605
73365E592FA4857631FA6500F22B939C8945E7A108FE690B00931B8F55F8B543
860700EDC568EB5E602FD46316E160F6DE8C8EB84D0B20689C5733FF25148A28
B5F1D5E986A5281D5AEF6902E98EAB65F60E2E158FFFBC104389DAA5F81BB61D
226FA6F9AE5724A610C6DCDA934328A1B79759DD767B789E717E137625B8F476
1B43D57CC1F31A910ADD9ABBA971EE6BCCC1658EF68E7AD9E965FC7966106F4B
E0FF06CD15EA9F6B2D33C4A02BA49967930A32FD814B197BAA89C1FA80A24541
5BC1ABB510DFA50A371437D2E93AA9BBB6524B41AC03C7967F4766CBC1365F41
82B0ED5AC9AC9D0DA10C7722AD2861F9F85DFF12EAABA998D58ACFA5780EEE1F
3FAADC55260A61489026728E45D192DE65209D78BE4F89E8613FF68E81BA187C
5C6C814AA9CC9C1E3CA558D284933BD27771FF2160C15B624C0CB1DC592E77FC
E85266B2220181598FED7DA82E6626D09B83324847FACB3D252EBE92EB0EE1B6
E2E19C754C15154BFC6210FACBE7E57487BD54041FC65D0ED93E5D20159547D6
FFFDCEC699322970199A2FF13400041DE7ECC2079269CC84C74BE4C6ACFA9319
2041B653E6FF5AC0E99565CB690ACA3C65DE6CD9FB5DBA86B132318D2EDE9EB6
AEE1F19E016156171416657F1094DEAC82BA10928BB2DD35BEFC53136667D35A
4C6F06296754BE763D88EEB8F5449D6459BC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI5
%!PS-AdobeFont-1.1: CMMI5 1.100
%%CreationDate: 1996 Aug 02 08:21:10
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI5 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{37 -250 1349 750}readonly def
/UniqueID 5087380 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA06DA87FC7163A5A2A756A598FAB07633
89DE8BB201D5DB4627484A80A431B6AFDBBBF23D4157D4AFE17E6B1C853DD417
25F84CD55402AB88AB7EEFDEDBF2C2C731BD25567C53B474CCF739188A930039
098A197F9C4BE7594D79442B2C8A67447DE44698321145D7689B91EF235EA80E
B600AA8E238064F154284096C4C2554EFE8DDF13AFF8D3CE30E0999375C0FEE6
F992DEA5FC3897E2CC8B7A90238E61E41622DE80F438DD994C73275CC52249D9
F6686F87F394FB7BB668138B210BEC9E46415A1B58C990B81E7D7DD301143517
4C2A259D2A0A1E200F8101469C10D7D537B0D4D39296A9AB3F132DA9A3B459B0
F850E2B3A03BDCB35AEF82285D19C38F474FB414F8EC971B994D1C7DD753B271
2B71549DF497C665DF0F266988209D9EB616E4D9BA229FF984E7A886DB01FD21
48ED2E4859FD6416C2CE52537464EA884C8C9C2D1083E2B83BE4B766474C23B6
6E8EC5003200AB10514BB44D14CA700416AB6B2683E80862E7D5B49A05526A32
554BB23AB8B0824BBA198E3825CE82380CC0FECF46651E3E5D77F09465E73164
20342822F29572BC7F73F2C3BF95ED3BB6FDEADC20C6AC866C4F2C679594D7E8
8D944704A3C5D771DC39503BECAB89F34D8CDB8FDB91AFE21F3F0260D05E90C5
73E2C13DFA022C4522E5918EE25038A0498FBB530DA33B0AE238B1C6ED03FC04
2BFED8236E07820C5BAB411EAE1B31D93A2FA7C374B1725FEC359ABCB88E2C89
214529A263D795AACB0B95A3AB2F4E08EF350C282CE521716DBB06E5B8291B3F
5D4ACA230FA192F64BC902A4C8842C0F916F92FBD002ADD408BF0401D0284FBB
F05D4C6DB631420747CC902C5E1617E6573612FB26C8378DF41FFB5048D3CF06
4893DBA48EF4B043D760F60C75712169D16C83EE020C45369E443E853E1809DD
F395B812067D6FDBD26111B34F42C21036AF952D0D767FD17F6959D9FDD46005
D64FFF54772B50BB9B173AE79702981F58F9F235C591F476A31852174DF0619C
A470359153DC32610E782B204E7945515464DACE9099B81EEECC7EBD4B5126AF
C3FD9DDFB329AF1C95C41FA4A5F6958869509A23BD7210386329771FA46FF926
0E54AC35106253EE140449425A8670E1F92B178A02A58EB57540F4BD8110E548
BB584EA6D625C5F5FE0124A98E49915F1A1B95D2125874360EED1C4379FEF3C6
90E5780C20309F11F2F23FAD635C44BA030B39EFF083A3ECCDD2641DC71F1E75
67FE99FF67F4C90E353D0CA615B60DD611183D23E5687DD8D07BA07B2226E32C
2C9026AF82E0FCC67501E1D96A18ED670A00914A7B5F9EC38043F4561D979188
503EB757CAE0F33056C3C768B35A6EB0AE88AE10437EA460FC83AB1C03A253BF
6EE56B67541CDA82FE7440510D70BB8FB46C45DAD8E3446DD5F4FF2D57A14536
CB9F23DA99D1D6B769F732583D16CA103AE2019DF94586EBAA1FEC02403F5315
B50F66BDF72A793533AF514818037819D1EB2E589626B657DAC3E55AE4A343F9
F897D6C6BBA2252838931C9E7CA436BC906D1BC295C5511EF782310DE633BF57
DEC04547CE90FC3B547F33D6D6EE5D16A2C8AD7B41B1F302685B29D32AD55D8F
08569EAA4F8A7183EED71FADD1425707218A9FC5C07C3E191A1FB18A8908F55F
C0DAE30E555AFD32A070B7E182B1234E94494B30F6AD30358F79B73D6783CB74
E2C5D3D31A8FEEAB8605A10ABED6B07C1BC7ECC1E58E007D2DEDD5600FAC80EE
B1E600A24FEBF9240C8756CE78E4D0882ED279DBF5953367DC6CA22889082812
9448865CDD015A1EE77D74B8816DB68BDFE856AC84C29686D90544D0A9FDBF57
7BD7EFF08435FF344338AFC846094EA3095359DFBC4356524848CD9151FC6E3F
7DD76C255FD49E8561C878272A90E7388568453E8BE4DA8CFFBAD2B4588E3C0B
D55C716F9BC1A2F4F76F968B53A2FA0D6CEE1AC9F5B0F21935D62AEA82D57C90
2374EDCD4AED77B7565F58014B93A126FCE1F3E094F0BD8119F9C919F8AAD954
616AC2845A5F9B5592318445608FEFD1999E5782BF25E672EBAD46E25525209A
DB378DA04275C26FAB652CDF293C43C44D3CF1972B92785A44B1042BE648B1EC
6C88337C152427851DA7577648EE32FFFF2621E2A5AAEC382FE234E46A0AF7D2
596FCD85081B3F951354CAF8E10F688DA07F6B49841F364ABD0EFBBCE918EC44
B6B6E7B337C4A1BADC7BDC08CFB774DA171E9553FE39AD32DA31981B801D4E34
F3DB6AB52393382E0CD74549F40666E97CCA352A01005FBE25F472FBB2A28EC2
CFC915A1CAAB0F5AE7F62C86A3862C134A0D2B0B945A66B476DEBE008725E578
F0340B4A68D4D08EEA3EFEC81277AC8F63F6B54E3E153B9657AE706756A1DD29
1DE6A1297767C4DFB16E6F1ADDD1EAE6CF8374356ED43FB88FC77C65E20C944D
59478259F4A0183490D1CCA6C3A98D79443E356F131F916C6277F74865829EC9
6BA2DB214B9D9944B47BABA04A6BFB3DEB5E9851A686C6D81085A9F8932A22B9
E400A6F6F60FD7A246119DAA31F6DCC9263BDA3B81957F7F3A57785CE5B3BC29
0FC47568ED4CF460F9E226C719E693246C066D7E10101830CF126165BD701C28
C2B95D250E4671180544687AA4C480FA61EA4983B6DB60CDFB28846481D54D20
F41FE187DA8BE92CB57F9F2B2464A08858353F804B2E32A7D7B572B8A9BC81C4
077F63FACA9AEC216061E507683DB17DC1F8972956B8D227AE8DEBFD69A499FF
65D1524CF75A59A39CC3781C5C718D503DFEE3A2CD2C030B9E4D92381E763390
4E4A9ADBD79CCD8F206F09C580BC6A15AAB3ACEDD67B5BB516AEE3C211A8F8A3
C059DBE8F9C4BEF9389E678C5F32700D8A30837909BFF4FCF148A5C98A8B1887
8A52E1847FC2AF59206A17EF71DB1E922AD1896C2DBDBC53EF1965BD103A7D38
C03781C43A6BEBB2780A7DA4E7A3901B38A12F02691D12B48645AFFF7A7C410A
91AE5A916C6B99F2E3D7964D97C89E7C1A2B926DBF204F3D4CFFA66E234B5281
F172AEB911793C6BA66A71780D9C3C1FAAF940342CD0AC7D77A7582D69AFF893
95FB7546BF817CA22CDBF67155A50DFB50B68523187A655CA25CDA9587D0EDE6
6C8D37A7E927272DDDB3796BCEF755DA75AE1AEDD1A5320B58161033BD5B7ACA
351E62D45A50306E3926BD60402480B8739E9C11D8B1283C6BDE6532D0BB9313
75C520076E59C68F395281FB6C1E0CFAF2B21CEF6D0DCA0D86077778D2E8C7FF
83936856A6F5042475C524F73E4CEA64CC7F181C592429DB3189F1CBDA07B600
79C8F127F95DDB003D6C9D06F2C9F938FBDB7BA6601509F379E02BEEFCBF3342
AAE6CA10C2EDEB750E893F2237BE08A78DA404B5152AA5294422587CA2DFC5AE
A0C753B15BC3CB3176789B1D46066151C247122A4376A6C06E344E5D88FAC3C8
A1734AEE379EC086CB0D4F5B484A2F27192CADB68DC75BFB3AA6DACB41C75B7F
7B83222ACFC7BABB3AC4671256A4D57A4AA4DA0D00212B6025AC4B5D4087CAF9
B27CC9C52242B1DB285F98F20F4ECD92928AC7508CE97EC26B44A6BCE76DE6DE
BD26EA93E6BE8292FA6CA7BDA5A06AA2B21AA74C173062903C3AE2CF742E3044
CC41CD7B34E36CD9BF2B70210E39721DF589C0685323B9231474B095505F3B3F
E1FFBC5CEB89CAD491CA420ED04611D9D515DE8944E3FA482DD83BA1F07E8265
A11FC83B9F7D05D2FBE3585B07C4E19C6AB1242254771DA1213F61D2ADCB1B9F
59B7A74CE90F7A1F326115B0ABFF29B4AC78258821C0A5B0B414CD99A673F400
6B81048BD8ABA6782FCA0B0EB281CD75E9DC5AF4D3A349C37F984B04BEA0B9AA
4356036DF49D4848523A4F2C073CA486F2751D1B6B316A159838D24A9FD579F3
23C83F8868D5032F82D9257BC46C33D94167DF1FED6E16943C53199FEAA4C17D
36BAEB81FB2388BC566EAB0F7517351ADB168C4E40B6C52A0364CE8236CA5A31
2EE34BAC93A528D0E5F5B06044847FD1B65CC899206B1F539B078E0B8A98B42C
3A6E9E91433040490D11FF673E4F782DC150D38853F49368AF28F5E5A16882B6
33200D13453713542803A66BE2F0A58FC04C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY7
%!PS-AdobeFont-1.1: CMSY7 1.0
%%CreationDate: 1991 Aug 15 07:21:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-15 -951 1252 782}readonly def
/UniqueID 5000817 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D251491EBF65A98C9FE2B1CF8D725A70281949
8F4AFFE638BBA6B12386C7F32BA350D62EA218D5B24EE612C2C20F43CD3BFD0D
F02B185B692D7B27BEC7290EEFDCF92F95DDEB507068DE0B0B0351E3ECB8E443
E611BE0A41A1F8C89C3BC16B352C3443AB6F665EAC5E0CC4229DECFC58E15765
424C919C273E7FA240BE7B2E951AB789D127625BBCB7033E005050EB2E12B1C8
E5F3AD1F44A71957AD2CC53D917BFD09235601155886EE36D0C3DD6E7AA2EF9C
C402C77FF1549E609A711FC3C211E64E8F263D60A57E9F2B47E3480B978AAF63
868AEA25DA3D5413467B76D2F02F8097D28414CA77A720CD4FF49426F88871F5
BFA6E3E24BE3981E341BED36C9C040B10B8F7D2150B2339378E61001DA2934CA
877EF31025B25B9D0774668C7BE30CC0BF14DFA2B8BE800DD5FB6A407C7D2709
BCD45319F84E327234F4EEF8750FFFB21FC286D2E324A41574083DE97C76F08D
7F1B3B9678C32CCB999821D7F6FA04392CEF7103EBE29D0A32586FAA95A2FDE8
A521BBD50D830C4B82DB0FC812FA63E4456E3F4043C929A808240947340437F9
1C6EEA6F058CEEA09AFEC075C943FCD91F4F8F28A8FBB767029E3B6E98FA11AF
02573FCDFEE1796E88B4136F26A83800B10E7B20EB916FCBB8C18EBDF1C34EF1
7A9857D0ECFB53E8F7F155EA76B1D521CBC0779D971A4393AC2BFE6D2DF61AA6
F4B7AECC5CC2D60EB3ED58945044D257F7B8D50AD899138D2E6D563ED8FFD7ED
FDF57765DB59CE2BF00EF45BAD40CB8117D71C43A769B0045208B57FDE5D93A3
5BC6470B6A1006A865B8494A7ADF3600502C475D37BE422AE84029FD824BCFF7
01D65EB13D2185D365B7C54C66315124BBAFC11E3D0B131EAE889E5A00E6C59D
D51CF4712417B340802F2E205A2F53C2B731A47B977C7A2E5106F3DE8F5DD441
AF44A11FF4A70FD323C514BA0B2AE6C5333AB076EA7A94BE13D9065D974C21D4
840F3EE75FE955E7B90DFAA4AE75729FE13DBFFB0C090D2260C3C6AE411862D3
C8EF349C11025C5CE6616C4B063AEFB902D47EA2D7B4BF170F86F1CE9831CDE4
D8999BD0AC1E9183A0562FAD697ECA1391D925EF4979A1CFD389144DC3D9A379
A0B2B6694E4BAB92E55FA3236D24837AD1FA0B25E0ED93F8A372B2360B48D1A5
B94725F2FB02918D80A810B97B1F0E88B795D046964F08F777EB83DC0EB521D6
C9F0D55CA10FF8A4768F9556E61392ADD476E0FD6E792E7D6DAD834974EC8420
785BF064095D6391975FD402660EF4E927A212CB0BAE1815E8D51D7931886AEC
06B5CE8F29C576995E6E57FB8BA3EA2B197239431A0CD64DB1F14B2AD005C343
D3AA1F577D37645C954DDDC977AC1EFFED64AB56C88FB84A906332582E470FE5
8AC42E2FD24F3C265A6EF40DE63BE9C902698EF292F6A7527374F136523447FD
2A3C524C40AD2061D6E77799ECA320FF703715F929C1188529F77574B5670923
602B00475A830D3048E6EB22FC7BCD3EBC92012E8B8B4C71E69382A34FE947E6
B118D070BCF22E39522629A4059BADB737796E295D6361A49E3B9501DC44D0A2
67C99C4BCF9B8263E62D962A691319409B7A802374881273DA0FADDC58DB5872
440265EFBE1A5F1A7F1751408277478AFF519ACD654BDE6868DDA33F4A56DC2E
DF0CB1AB6BAD0E398A70DFC6EF5A2BCE1409F97DB632EEEB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.1: CMEX10 1.00
%%CreationDate: 1992 Jul 23 21:22:48
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMEX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 80 /summationtext put
dup 82 /integraltext put
dup 83 /uniontext put
dup 84 /intersectiontext put
dup 88 /summationdisplay put
dup 90 /integraldisplay put
dup 112 /radicalbig put
dup 113 /radicalBig put
readonly def
/FontBBox{-24 -2960 1454 772}readonly def
/UniqueID 5000774 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CAC6A7BEB5D02276E511FFAF2AE11910
DE076F24311D94D07CACC323F360887F1EA11BDDA7927FF3325986FDB0ABDFC8
8E4B40E7988921D551EC0867EBCA44C05657F0DC913E7B3004A5F3E1337B6987
FEBC45F989C8DC6DC0AD577E903F05D0D54208A0AE7F28C734F130C133B48422
BED48639A2B74E4C08F2E710E24A99F347E0F4394CE64EACB549576E89044E52
EABE595BC964156D9D8C2BAB0F49664E951D7C1A3D1789C47F03C7051A63D5E8
DF04FAAC47351E82CAE0794AA9692C6452688A74A7A6A7AD09B8A9783C235EC1
EA2156261B8FB331827145DE315B6EC1B3D8B67B3323F761EAF4C223BB214C4C
6B062D1B281F5041D068319F4911058376D8EFBA59884BA3318C5BC95684F281
E0591BC0D1B2A4592A137FF301610019B8AC46AE6E48BC091E888E4487688350
E9AD5074EE4848271CE4ACC38D8CBC8F3DB32813DDD5B341AF9A6601281ABA38
4A978B98483A63FCC458D0E3BCE6FD830E7E09B0DB987A6B63B74638FC9F21A5
8C68479E1A85225670D79CDDE5AC0B77F5A994CA700B5F0FF1F97FC63EFDE023
8135F04A9D20C31998B12AE06676C362141AAAA395CDEF0A49E0141D335965F2
FB4198499799CECCC8AA5D255264784CD30A3E8295888EFBC2060ADDD7BAC45A
EEEECDFF7A47A88E69D84C9E572616C1AC69A34B5F0D0DE8EE4EDF9F4ADE0387
680924D8D5B73EF04EAD7F45977CA8AD73D4DD45DE1966A3B8251C0386164C35
5880DD2609C80E96D1AB861C9259748E98F6711D4E241A269ED51FF328344664
3AF9F18DCE671611DB2F5D3EA77EE734D2BED623F973E6840B8DAD1E2C3C2666
DD4DD1C1C32F82156385E55FA0C948E3754B7B4883DDA85B72DBB1BDAF88E8B5
E6F2479914EABC1B6D5F1CA0821A77BD2E18BB1BBFADC3CA608BB2DF1E282F29
04562BCFB1B9220D7EBDADB97BCA7D425E28D3AADDE68EE6B9B0D1344D08E92E
CC41A279E0822D9FE5D6A73FEEBFF5A9E4CAB5BA9CDB36CAB01627C0AD2FD630
CD22A4AAACDDBDC1893BDE58645A7D350FE2156AB9C50247DBEF1DC1613775B2
AC35AF7D81419368A18F9E99EC527263D2D1109E05F03C930C408BDA6AC960E2
0F3947DC4F77A8D180D07FEB5900B54AD56224A35D0CF1C69872D09CBA3BF764
B62628EECC396608A586515B3DF72D44E97785C5AADC9D79F7F841D10A1DA6AA
A1EFD71D21B333858CC970DA4E854C00402B07715695B636A4F6D7D441377B4D
4E1BA50456FF835176C1929850FE60CE36225B3ACE4839E748A1742D6470624E
6E956C1A156353955CEF6D20AFE12F98FB0CEA24D8FAB413991F44D776E79870
9F19BD377B695875FD50DC1A8061FA1B73A3599ABF7A1A319366DE59F7482D78
FF1F110C6B2032A8BAEDC12C4C0CB1A8BAEFA8366A6B2C073F8EEF0C6D6A3712
E37355FE5A9D728BD97540EB1CCBC5104254CDFB6BDE145B69EC7285428A3182
1B4934FB6010AAA23A8E2CC7EDBB37365A924334C9A1C346E405DF2068B20DB6
FE4E778CBE91CE36B62DAF125501330D16678798DAC0EB17250AF27A567D32CA
A8FFA698B0E48D71E4D4437B4E5FDB6DC0C5779BD58161FEEB7CC829687BC58A
0AD3E0A008421AD63F7F9FD7D81E3AB06764D8E8DC32CF537E87D7E1D3DED6BA
B2F48C43A2C2CD680F249A2B1473E287860580067815C6393ED686697425230A
BE1915439E7BE6FACD19E180A5FFE1F4945DD520CF9AC4AF585DEC972771ABEA
B62CF64FF0EC9963428965DFE173BAA609BD753D578E2327D8399F999219C738
8A26E6B5C25228116697858812BCC1B8770E7C00EEE8767503608719ADF1B7C1
2382C5228673A145B6A96E57913C3C2309D2F95386116487AB775455BB87F180
E23897A6C4958470B55C451F5928BD8A2E00CF8BFE6D814E8D3BDBB7AEDA1886
15592E31C39A52034D243D20E335D8362300D314C44E90A7CD211B3AD891EBBC
624A0FF42AE59BBFA3B9076094CC37B3CA1F7390D06D2DF776786481D76A18C0
F0F2FA868FD79FB415F705F56701BC0FA2F41C5473B00337438E0D1CFE4120DE
DB7BEDE8E7DE67DA5886B152E36FA1D0D3B7217C79ACDF2A65C278563C03B881
AB2849DF603F9B3C8A9CF0C3F5EDCD76D84206EE9BBCCB8473CDB32CF83C2792
4D738A7F06C23D647DAC368E8D1729990B74A48ADA0002FFCAF46CE57C4255EB
0DC9ED670695150874522A62FB2A562A1B4623A33EC27979F5B1761A4C780185
1298B1E750624A2B7509E0D5256EF3E7281103D02A2B2658C06D65FE77D01806
216BC88F06ABD258F5A8B48534A79E64A13A51619DBC7A7441328343537EEE55
E7D457E0691A0E3E0E472FB064B820F82912512811201DADD9115582F13B82A3
57C4453F2819D54221AD40EC2CF65CEBFA95BCDCEA967E08380BD5A1D2520C1F
6AB39703FBD240409BC15B8FC2105547F73C1492225E4F15F338F275D0CC5A51
A00D094216B966EECE032645AAEE4AA7252314BE9F5C79C06EA79DD5D565730D
B099057EBA1C540881D6AACC87190B24C162507605F6E73823DB7F88C20D405A
AD342CD4F738DCD6EA24D5CC798EF210BDE8E7737E66CE584415C06C198633E1
5EA15556D01FDBC761F170D577284D663D268A80F7DCC3FBC1EA832B3406153D
A0C4F4487A3C7E8A1E645C495BFF71F21A858CC09374C232776E20C0F0E64C14
EB718896F6ECB24EB855529778E811A23E89F8A8287171FDF2FDB411
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI7
%!PS-AdobeFont-1.1: CMMI7 1.100
%%CreationDate: 1996 Jul 23 07:53:53
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{0 -250 1171 750}readonly def
/UniqueID 5087382 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D77639DF1232A4D6233A9CAF69B151DFD33F
C0962EAC6E3EBFB8AD256A3C654EAAF9A50C51BC6FA90B61B60401C235AFAB7B
B078D20B4B8A6D7F0300CF694E6956FF9C29C84FCC5C9E8890AA56B1BC60E868
DA8488AC4435E6B5CE34EA88E904D5C978514D7E476BF8971D419363125D4811
4D886EDDDCDDA8A6B0FDA5CF0603EA9FA5D4393BEBB26E1AB11C2D74FFA6FEE3
FAFBC6F05B801C1C3276B11080F5023902B56593F3F6B1F37997038F36B9E3AB
76C2E97E1F492D27A8E99F3E947A47166D0D0D063E4E6A9B535DC9F1BED129C5
123775D5D68787A58C93009FD5DA55B19511B95168C83429BD2D878207C39770
012318EA7AA39900C97B9D3859E3D0B04750B8390BF1F1BC29DC22BCAD50ECC6
A3C633D0937A59E859E5185AF9F56704708D5F1C50F78F43DFAC43C4E7DC9413
44CEFE43279AFD3C167C942889A352F2FF806C2FF8B3EB4908D50778AA58CFFC
4D1B14597A06A994ED8414BBE8B26E74D49F6CF54176B7297CDA112A69518050
01337CBA5478EB984CDD22020DAED9CA8311C33FBCC84177F5CE870E709FC608
D28B3A7208EFF72988C136142CE79B4E9C7B3FE588E9824ABC6F04D141E589B3
914A73A42801305439862414F893D5B6C327A7EE2730DEDE6A1597B09C258F05
261BC634F64C9F8477CD51634BA648FC70F659C90DC042C0D6B68CD1DF36D615
24F362B85A58D65A8E6DFD583EF9A79A428F2390A0B5398EEB78F4B5A89D9AD2
A517E0361749554ABD6547072398FFDD863E40501C316F28FDDF8B550FF8D663
9843D0BEA42289F85BD844891DB42EC7C51229D33EE7E83B1290404C799B8E8C
889787CDC0D4B4265ECE2D83CDFCD90E9A18757E3789932A1FAE08F4743A8E9C
0F91E4E78FDCDE869879112C70FE626DCA8AA7EE278DED23032894C9B39BF007
BDA765E8931DB41BF249AB419C8572382C21A0E2108188A961239E76A6D043D9
0C71909BD18AA5633E88D9C2908C3CE716054174C124DA54B1DEE24F7C899511
DD420D19A7307696E391F59040CF08A87A0C16F6C939674873A9442DE20EC5F0
348953BA91C66CEC9ABAF5DB94901CC4B74375E4F10E4AE21FBF13D73554EDD9
0E6060C0C7D9415094A671F6AFD598B0678FAF302091A912FF5DC24A2D288066
88DF6C459539CF99343D1341B732BB1A81697DB33910CE99F10644B9F059E3CA
5E931D873D932A64D3106360575FAB5776253C3C6932CB68C1174515D8BD7546
A54B73DADF8ABE2DB1D62126D4C046468ACECEAC94CE364CF2F6764E30C2EE5C
BAFF53815BECF87CE133AB29DFDB53CE195B08474BC72E8766CD151366C89088
B3D7744F85ADC48ED3497DB8B240794EBAD333BD45C4AA6B6CDB600927280C8B
2C7F45E47DD00741C14FB9A045F3BB590C719CBC368ABBC5810AAFA481C2E60D
A0DC832527A3080549FBC844E6F0FE0E82764CCE498675EEBB2D347B46B9E71B
62BD108B6D60FF2E0389E716D87722AFD31EB70F394990A3C98BB06992BE87C5
4519ADD854C6D5CDB5EA36578E86E6552ABB0F92B6CE55DE2C6AE6765770171E
1713CB104D3569A29117379D4A8299FAB2F44831578DF5303D24BF3C0ADF3FCC
C25CDC31B684CAC94B86DEE561863554C230FE04408F9254CF3A02EC3CCEA114
E33B093158CC62CA94C415A45A3E3B06F22E65144E785B2338FA9C13A1269F87
26D4E906C7427E3324C8B314D21164E4EC5078094D2E01FD1FFE1D9D21E8D1AB
208C30B9504000884B26C39D3DF93673FFF5E8DBA92CA9A95C0B59BE5E7C3A35
070878B09B56D99CBD782BD9F08440DF32A934FCA002F0392C0DF6B7663097D3
C1067EA37621C3BAFDD63F7B7E87DF314C60FC0BB3EBC055005A521CB545B5CA
EED83913E4F71017552A489790F451F4D895F5352E7C4E26892A8A33206A0765
F3AC366A3D98AE5109C36D3564236186C98F8BBDA671A739DC9878B57A22AB45
E488AC434B9AE054387D984B3A77C6C20DF49CC013B5A38B9017CD4165D93101
2D28B24DB30C5BD27E6EBE5230DCAE363B997E4011E35C2B3E7F1A9CA845F9F9
15514775A6399F1F2911BA61C3C059AF7828DF7B471F81F87B7584044AF097BE
A479BB4F2CBD380A1BF0BB4E2C53916E7559630D4A73ADF1DF3F952DD26C9B7D
8623C12AE2B2085E5FECAB1C26D3661DDB3BC3DEA94D63508987E4C06389B081
CA8380F7722D24D4EA1BD69EAE9B7D84C7E19268861104B4DE01705370176698
21CF73A73831C9793F263376667D9380BAD116E92FDAD0B900A418C55FACBBCA
CC38C3236B52111C93223E6245C9C4F622CAE03BEC146DD95456FAB74A0B670E
CFBCDFBADBD2CBFC9765031886E9A22EEDAF8D308D443EA809266AD4E19B60E2
EDCBA5055894787C5C35108A629545F7DFE9C41CCD249A5AEC7B1A75E5361715
02F45CD39366011B02ABB0B704A04FA8AB13666AB6F79A0D7FC4CBFC99CD6692
F011A1F58C696A0EC57050C4904B4273DF48D8C7682DCF981CDC764D5601E53F
22DCF7D18C7C45144D4C7C0BAF2C38E3F778353EEBBCEBFAEB2EFB7EB7576D17
E9DFE70BB42ECE55C591E984BCBF1354AFEDB6AF044EBBC56F3CBFEF79BAC148
01D574A647B6CD9DC8D17B456E4DDF63CE65911FD82189FCB81CFE349A9F674D
809EFBB2ED188F093486849C4DB89468ABD147C66B93C85D31C8B5BEE88CE78A
FA1644FA911ECE6A91072D5CCF7A9687D6594FE79CB1E8A5A4AB130591C60570
A157FF3C4EB39D3C69E80CFB7CADF1E6E369550BB1EE82537F01217CF803C237
1722FC4FD68B44E15C25723DE1668079A8AD5E9A106E03CD9CEC5DFC5573DD63
07019135E37C877836A380C88D03CA14CA6B8C32146E45AC2E5C582854EE6A46
2AC9B4402F924CB165C4289584E1A2F4DF69DC096F7C52A485E47C6394CFA1E4
5DEF2EAC5C9F515ECA7446C3C87A33C71DD85DB3DB79D1A41E4FEFF020AF9795
F076FB7E8B713B6048B7BEC2B1B4A189977C242035E845C81625E2D855EF641B
0B3DDF26FC3878D0D2E115163AC4B4F7A0BF2FADF4CEA9BDE8F8E373A1547C7D
03F4439E024DC9A19C51E679AEDB4C908535F73519E859074655699B37D6ED95
5AC7E4BE36136A7920D6B12C4264901E58460AE8F52E460BAE526B5E49A83E72
9149F727A95C0F25CD7167AE29DCE693BFF40409D140C3E0425590AAD5C9E97D
8A943D8E0CADEE6B67957716E00BE2680BB006AD43F2702094E910552F288D8A
9FE6170F5398DC29B4CF7751330944B2F457FEA9563C48660B4AB55AEE70B265
94CABCDB316A3BC3770B87F6AF0B63190D1592D2BFD54E0F756885791D1B30D8
5D17A0B51CBC0397E08511FE6DD5DBBD86CC86A98E1639DBAC6897A6D6F5D55C
A10FF6782824633C7C2694F11D3EBF13DF2703BC0D64EAF6440C8318EC277A93
F53BBF5239B230231111BD8B8F89CC6045584C31B3FEF37C44C804F90ED65295
1C4090C96CA1F5F3C7301A3424782BE069FC3F82CDE556B3555F7C5B6D63366F
DCB74D5A232AC8219E5646A71A03BEFED71924E5701E8DCDF9D5735F414D15A5
0422638322D2711D6BE8C845FB3CEA9F844D2230D8181439E86953D5FC370089
B70E2D6961E044A8D5EB3066028895661CCBCEE8D5CB21643131EC0D64F20347
7CE71E67AD91BF89A3A89238488D955A6C0808A9C58F085FACF315DEBAB62806
D62F7A6E0A5E23176232F7A03DBAE72357257C58B61D93425C5D83347A0D0625
3C2ED5F5F0C5CB112B0E655421FD1EA97D65A19FB36763EF1F1828C5AE68503F
A10A4EEB41315247BDD46140DDEFDEBB2CB642B1B9A128BE81DBE717AB9E2E86
76127A83EE6FC09EBE44D26235497C13FAA15675B0D0091E4AD0D0EAE4DE0AF7
0B54D4F478585323B0D410CD9A487C42514CC009C9FA2D50AB662DF25699B134
039C200C8D5A2E3FF6B019F6056A35F71780529B3B3D63DA47248615FEA2A07D
7FCE49FC19DB50573F5312DBC88A187CE52E2CEB759311AE1DDCFC89842ECAAC
CC4402334374091FCBF717CBA868E229513CD781BB5AFFAF671C3EC7AA8FFE1A
E293E8D582AD98E9FA83814E2E3BD6344320EF10D33BD391D0212A2E10CED165
6D8B4CE4CE18FE0CE84FFDF06997CA342303E3E0333F9818506348C14A52322D
0EF6B1E07ED5F78022A298CF5795A83909F98449C036278B32A8694BEE2EB6FA
79FA68ED262DCE865370490B6AAE2D10CBEF4D60596C3422A322481DBA4EC76E
C4302D6BE393AC7F93BA06966ED516478A030FD05261C96FB2274B5C6EBE2B55
FC850E985B4B0E381AC56763982EE9ECE18B594478E043A425C5EAB5C7B19961
2E89AE65066B8525693976C07DA170EC14181BE8194A0113415CF3172E4CF6EF
1B3EC6E2B447414B16CFD52582D80B59299F719157AB8DA16C091D1A47E2E4CB
CC4E1805118B3785893152A1EB007DF2F9125C0C02CD860792444FE88A7DE7FB
34045693ACE19A428FD5B02215FAA131D7CBC624E939390988D20036E223A02C
F2EEDEF5C4F757DFEB647C557CB9064E6377629C9F7BAB5B9DD84A7273D99D92
22A547551F2DBC6806970DA36C2598F3A5552D87A4FFCC38C03C73C31752C65E
737C560C63BB60A9DD4E3E27937D15B1C1F406536B2D6FE0B45062F036A48BB8
511DD88F9B25645B669A3B2069CC83905427E47E4D8CE879A54EC0E667A9D868
2454E18C0EF3401504767CE43AD877CD18C580DA6394C969813761E3E00C4DCA
FDEC7F827D29EEDE5976C848EF07CB180055DF9FF08062C0007570F140919BD0
3E2DE885B0AC67E9C9B66D4776420152463FC3895C71D787D0173BA947065397
E0F762B2E5E4BA090282FAA71DDE8DCCAC3D0562E5A772FC02F47575DDF5BE7E
2FB25FB8B3E68612720DE071447F5A17379D513CA4DB228A81105BB28DFBC454
93583DE4ACB7BB620212E434B5C9E92143CED43BDD6A1847CC978A0155DDFEBA
6068FDEB404DDAF972F89DDF972FC5F199C170E92BDD8DF3AA8E660AF93B9F53
5D1329B7E5797189E6844C8E0547FF5EAC71B29F80D81558A694A0E8353E2E95
0FAB78BB179C5957377352245432E62992FC4207EC0E68CE4EB934D8070B9B66
9C49A35B23F04E53438FB62D98231D1E7E2E4080ACD8832C642A0C8B57F2BCB2
07240A2FB7C259120C11C69F30810AAC20034229830694C5356669A001C3FD58
C92E3675A7188325C0D535CCC20D6AC99C4C02324CBEA1DD281B5924B90A622B
7F77D247B1E40D086E73FE7853D0BDD27BB08DC6BD2CA8A30412AC93BF922063
CB0355C87F58FFF3CA0D6A2F17C9AD3E67D5551BA388925045BC935A0006303B
C413196DF053CAA0524D9C05B5720283A7BC0FD3D6DCA74DA33E234F476F3574
21A21CEBB60CF89D78F67BDB3AA768B44ADC7B8F232D2ABC16394B6CEBF7AF68
EA2788D2D8525770FB487B6C9C868EDF021FD87D9280B6A78FFBDE8DC11E2259
59EF175F1C333584553086AE1E37145254372050AEE69B89A0D24B67126E1C7E
B1AD8C294E0283B261CD3DDB8CEDAD2410299A46974341192A5BF7B620F82E5D
EF3E7E77E11C8D8440E2403797884B2F887072452E7A0FC12536A6731735D256
AEFDE556ED79874051B096C492FBB3EAE81555DF09342E1EDF197F787450A100
1A3BB9AE8977068CC1ADB2DA15378F9DCE584E61477DE92F133D83F15BB9F8F4
63C24D5869F8B7FD087ED05E47FB2D038DA25F6B24F26FB449736CC2014DC8EA
169B589297ADB974E53C2FBFA54AC1279AC62D1C519F7469FB3EEBCD950D9AD8
940572F2EEB80774615DF781A797A348079AED48AFC5336ADBBB39F474B75B0D
42C00601026199144749F1A2FA05EEADCF7186CE3C1405EC2EAA674A082E44C9
1671BDA4351CD6CD70F8B155F4B371C8E19B2D9F4635F6ADDAFFCF191F404C26
1970410F19B9777B7FABE232AEB9BE7DB0DA7F4A4E562E43B91F0CDE8ACB9D21
213FCC78234CC3B322CDBEAE136F3C4A30B43AD7C484E806E276C3D9F5057E10
3C03A4EA79E06DEBAF7843E58EE47C1C4200268E7CE2610D259A18647C2AE231
6A3FB516B5F11551ABEA2CFBA6A1CDFDC471DCAC3BD6CA4F90E0FA7DA06C532C
2BCA03737E60B4E88C6D2002CF0615932295F3FBF3EC5D95D5816B207519FFEA
B671CA297553091377D1ACF74A363B6E66A24E6EDF96035968BE0A932DAC7860
4699930F8AC7925A466AE3596549A2A552AD5DB2EA4CCE5AC5C9965ED9B5E323
171B86A4AACE47EA8A626ADADFCBFDD55B8C637D82D7DF67187B0EB2E78D2E3A
7454C68922B6D804FA43B3F5ED39669D0D90A5F0DEC37A96FD62927AD4F0B463
61011EFF1F3BD31DF3877673012548B350997A9916C1883281444AC5291D14E2
45A2837DC6FB4F596BAA4AE3C56F511337404F8A3EDCADBC0C544E03F580A68A
C80C25CD3A783085D4D980AA7D884701C866EC7C78663998046D93DE09CEEC95
ADCC694B244801B3C0DCA4697F4DAB119FF93FB089332D71D08D7921A281E96E
BC062340903A502D1F6C72DE76757B1E93959C02E4E747EE4600ACFCEF5C469E
89B283DD6B8A6D93572DCE9F5538DBE7FB3255D1DB3A605FCE02DDCA979F2B8F
010807F0EF171453543AF4B19F2BF9C8B4E45033FC1D2BBC054B8C8A4B322AA6
775FFD8496A982ABD402788C7F36F2802224A95B5721A6B83C4BF7F400E68847
FB75CFB24429E43CE9C1E731707B62F45D23F71FAA9848018C40F234A926E741
745986D2EDC42EC967563BBA27D8F2E62C1B1489A4A73BE7D444D82160714D49
C0A03E4EE38E98E90E342C0394F10E9A8E15A5E5D37EFF21E05F66468F9A9D94
A964D8D5802F3FE19AE931E95493FB00E6E17DA7A364D661D3F39B59EDC3A60C
0E2A1D450A0CFEC1ECAB96D1B47D2346C3F3AA75938742FC9183C2EBFF8ED48F
10EE6E5F770ED92DD693B8D43AD527CEA0353CE665DED5829CA9872299F83D03
FC694C72FBCE78542EE37D35474E735A898EAE02B40B76696C8C238E7F26AA59
5ACA991F8B740558400AB553B50E3B1B50207700F69F406070A0EAF01690A216
7FA3191834AB03A87037B1A22C16E894D2713751F952D94645A65A7A01ABE0C4
B5B436AB78551198200BAF80B116A370EEC213A340BFA74F857ED99621D5366E
CBF887E645458AA16B6B1F7075C3B190B33609DBA9EEF70A977CCFFEC8DFFA05
8B3B9CCE71672E9828CA8E5F5EF3E8FB90441976CBA2806E9050F3237562D0A5
2910DE654EC74471CDE23DFA70DA89AB1263F216F8A8E30927145719C09A4F20
A80DBF0C803E9C44B64FA26EF239C2ED230428977667A1AEDE38342FDBFD4319
4B8B7F6C922E2E373AF667ED2EAA6ED2CA3954487B36C7CBF8CCF0976BD4FC5C
B24CF5C8867550E98F5F747AC0981A3F017E91CDD91231945D4DE3707D0D8D45
37BA045D694F3AE592BDF85F792C52B95037D7AB4932FC519F0F879AFC63FEED
D123016ACD2A6C0B29442887F87A123F673684EF5B8B54C1CA9263D6A75256BF
FAB1E56E95F884DB950D49DFA52FBA0650AD37C97CFE794EEE10B31E445E591B
77D42C8372C5E5F1F0C8FD4CB6F3EDC67F511AB484D4F942633C1BE446E9CA13
46F11C3883A2EF8CCA95F5423914AFCDAED237B1C057DBCD4E8CD6FE861486A9
CBA00A2D2C403FBE99BC6BF2854B9CD62F903613940725250EB5092D45D4D9F9
A1CE0024323AC2E269AF83ABC83CB5BD87B85CA0C35E23AFAC1A51B7A8FBADD3
98B942D2C0BECD25ECE9B383491D065960035316CA542370416338DFEE4819F9
3E287740A8D202B2765E93704CF493F17F699EEDB201E67CE59ED5C31FD0875E
867A95413F240E2760AE6EA9D89838DFD6979AB22391D240547D71558670D721
64B8FB9811B4D5B6C00629BA90DAE778EB24784BC5BEB41FD541368BB34B3E76
E4E7C3BFAFF25FE1A37165852D633A71D61519B0C3E8D60A7147158E2D759DE2
8FCD8B127209A3FDDD0D7D5662B86228BF1F47B97FFC9C42999421FF711D3110
0B94EA27106DE0E43BAC1BCABCEE2CA9D5DDF7C5252611E77844EA2B8E2D1DFF
EEB53692DD726E10A817BD7617D8417CE5183480658440D7F49F13B69D3F0FA5
9D2DC7401CFB7BBEED15072896123612CB6854393CCCEF7C2CEDB57160E883C7
87EE53D584D70BBB1A1A3027C126FBF7EB98788FAE2B740385E8B14295999BA8
6A16F2FCB3BB6FD28806EDF319A5FEF05A894E6EFE50B387DBB06C284CE9B836
A2D69B95CBD4B2BB1A99DA19D1956F861A28BCE307689442ACECD2290378F085
A209C4EC395BEA67503CDDB0D46E0A6964BB33EA82BF29DCD75531A555CA6A11
35B5629845B35231B0649712E70B93A5E167B02CC5E355899F7B6414CCCCEBEF
1B9433640E388328552B96EFC32F6A5991DCB4DFF39247C56DAA2A2EF8D5584B
D2BA9AB1B471C0CC4A35AAFAE44A3D3551A6C5242FD91CF5FF5F69F7B0FCC1CB
3EF381E454EA077FD6999B450B1FBACE4EFE3232890E2F4CBB704BA90643C51D
0355A2A2595F6D54C15953D2563CD4654CFC052DC3DCEBB1D63FD83EDA2BBB94
94BE20A94046D195D7D897230D003BA23A223FC7D1C166F4D2B5D51811CEE315
ACBCD5A8487D1CB69B7657146547686C650EE0655A3D6655A4DA0CA8BBC93B20
D764314A5A2BDEC55EF87998A7F7695DD74C8DF485AEA2080A4FCA1840043A2A
3A14AF49435C1D86C645FD7EC07AA37B418FCE1E7A34FCADFD364422A3C7226C
068CB45246907CD729B823F6E63F4E1690433BF079A1F7DB02EB18A92DFE0C23
47C39437CA3C3894BEEDD74DAB40155DF4D56D71245BC1241558CE1D88F0EEB7
72CDAA5122D644A5981A0F786AD05B39D2C3E8D1CE7C7B66AC2DE17773FE6623
5B360558C2721929C6C0B865B01F9A8C73579FCE6DC7204DE4E6FD1D290893D4
B7506841CAF42C1B59450DA3A18DF89D83BEB4B9C58DBF76A44D286B06CD940D
7355FC921026799D749562A5D3DB9D1A3982CFD0442F1C8DE8EBAA75FEEAF519
EDFAA89A911309BC24B340DB4A6B5BFEB15DF400DEF7C7FA0AB8C4E3B06440FF
21987B61B2C803BBE5460329A03FFE0ED3C3889E284A5A26F0FF3C214675090B
3B395A5EE85C8DB2922674D8AD4A6060D14EFDA1FA8E1ACEFBC27EA36A9C0D47
780AE99245625A4E14CB4FE3D0AFC67C57D52E080E3C9723CA8D9D18F78F5C0B
09C77F2B9AA84A2CF53DF41AAAB9917E15C78F391F723CE8C61463873F53C484
69D243C44E188940E87EFBA6322CB74437B8E1A8260B9257B9E3D4324D20B868
84BA52AC5E2C5F442E761272C2658245F3B21B6D1690C426900D9C195BB293D8
BC93B5DDDF036AB68467A1F6183D9EC9B3471B05B4466805D8A9EB91B32C8B77
689BFC1F1BB46582E21A92707D4E8E324DA02889C94B273D22CED03466DCE0B0
D0D2E85B976CCB5EEBFC4EEC21250E551C76A1623D4B5B8FCFB17352D7C29D3F
CB3C9087E8B7089F9B8A13068A51FFBF6CBCA0C7C79CE5F864E76C0CA69FC92C
32E3AECC253BD2C3F73DBD0E55596AA21F881772712B7658AD02DA91AF17893F
047C0883E92206AE713E0435A2C71577DFE084DCB0747254CC4D83BD0A3240B6
4D9453E891435F9B1116ADB5ED028B39FDE97F348A53DF05F2BC5E9F58C9284B
FFEAD8A90A65B0F2AB9B2B7BDD7E8BEC3C5CBA5A581411BCC909909772C64C71
67DA5B370AFA761CB944FCB086B0D3EBC8738D1236B51BB54058DFFD514BEC93
C1EF8531B15FEE3204FAD4609AE160135E887E730666336E81420A596C73E736
EC2CC349DF07F4BCE7CAE0B75F2CB95C6FAE2FC9A9743131AB8208B253453BA0
CDD616DD72DBA5302D0833AA888CB07054DA5F0B43488565D41F71BE5585B583
479D71E91B4EBA30E6F914AFB6CA4B5B088232FBFFAD7CF20CB698673E0FE509
665813656AAD83E77F892B70EE8FC50BB3A42296F51AEE344917751BFAED6005
E4E5A31467D56536DC0EC67CBC82011FB9CF5B2F970A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR7
%!PS-AdobeFont-1.1: CMR7 1.0
%%CreationDate: 1991 Aug 20 16:39:21
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-27 -250 1122 750}readonly def
/UniqueID 5000790 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CABB9FFC6CC3F1E9AE32F234EB60FE7D
E34995B1ACFF52428EA20C8ED4FD73E3935CEBD40E0EAD70C0887A451E1B1AC8
47AEDE4191CCDB8B61345FD070FD30C4F375D8418DDD454729A251B3F61DAE7C
8882384282FDD6102AE8EEFEDE6447576AFA181F27A48216A9CAD730561469E4
78B286F22328F2AE84EF183DE4119C402771A249AAC1FA5435690A28D1B47486
1060C8000D3FE1BF45133CF847A24B4F8464A63CEA01EC84AA22FD005E74847E
01426B6890951A7DD1F50A5F3285E1F958F11FC7F00EE26FEE7C63998EA1328B
C9841C57C80946D2C2FC81346249A664ECFB08A2CE075036CEA7359FCA1E90C0
F686C3BB27EEFA45D548F7BD074CE60E626A4F83C69FE93A5324133A78362F30
8E8DCC80DD0C49E137CDC9AC08BAE39282E26A7A4D8C159B95F227BDA2A281AF
A9DAEBF31F504380B20812A211CF9FEB112EC29A3FB3BD3E81809FC6293487A7
455EB3B879D2B4BD46942BB1243896264722CB59146C3F65BD59B96A74B12BB2
9A1354AF174932210C6E19FE584B1B14C00E746089CBB17E68845D7B3EA05105
EEE461E3697FCF835CBE6D46C75523478E766832751CF6D96EC338BDAD57D53B
52F5340FAC9FE0456AD13101824234B262AC0CABA43B62EBDA39795BAE6CFE97
563A50AAE1F195888739F2676086A9811E5C9A4A7E0BF34F3E25568930ADF80F
0BDDAC3B634AD4BA6A59720EA4749236CF0F79ABA4716C340F98517F6F06D9AB
7ED8F46FC1868B5F3D3678DF71AA772CF1F7DD222C6BF19D8EF0CFB7A76FC6D1
0AD323C176134907AB375F20CFCD667AB094E2C7CB2179C4283329C9E435E7A4
1E042AD0BAA059B3F862236180B34D3FCED833472577BACD472A4EA503B3836E
0409721D38E3A5116D56105ED7625E6F6E1ACFC89FDECB79B193338E1C756F11
FF5CD16F1C4FA9278998915335FA33A5A0F41167E71B8E62AAC1F62FEF4FAF86
3D6F078A76854DA6FC668F2EBD0F25139ACFBCE207D7209D18E2FBA365DC63B0
81CF3E667C996575950DB77220EBDB0808F9929E263CB669FA04246719CD8D12
FA08E909C66093536B9FA873E00C88910A5BECA2A53D14C5DDA97F72E2B3A467
5B950C4B880DC0E2B1A529A5912541C3451DE71DC08FF718C880632DCCFFE166
A48D3507F699F8814700725921201E2ECDCFAB93B9D0E07F043A33D84633DE68
FE5E85DA198DC897FB14F924B59939FE7D4D86EA0866C9A1A66A0ABCCFD6F0FD
9D88A985D02B29781479C2EF7C8FF104C875F4393AEB800A0EB99B2000F0C2F3
0330B0CDEF1E10B5A6A32112D65CE3D10AC14132029329A0C554AE197681C5FA
9F529A29D1D8B98D6504D1A83D1D0CA1FA8307C2B5D54E41BF69BA32C792CDD2
A1912958617C2436B8C7AF766917DF88999D1008B95E36ABDA959B7605A50213
F0E35BFE79CA66C821C0D1A2D36363E2792BDE4DF5095E44869DEB8E048269F9
CDECFC76815E24FF05D59D77211F5A15C8B8C1FFD571BDE9229CA812F49A6AE4
D5D70D369103351509F79303B537A00A4D008976971400FC9BD923B197A72742
F9401C172604794DDA9603B3FAFF808EC029EF863CFB6E538245028B776D9CA2
4FA7C585E8BF8EE916659656E66FDE8B7AE5AF3F1B7D068B3A044ABD962231EA
0CC219ADC2EAC2AE131F459D4BC9245822994660049BB8E8D5DBA9EA1D766AE7
96552CC2A3DF2F7EBF6814C11D0E0F496F9314FA297FCCE2D71F1A34A87CCFC2
6A3AF174F4A1BD5E90975DCA87C1D327996758DE808EAF9E56D79CCA55F38513
0A244407DEC332C710C1C76A29C07858D77D05A96398A33B4642230E8803287E
0B55E9E23AFAFCC6E831E105435B951E350AF353C50903E2959802F99DDF962A
5ACFA598CA3DF0F131A0B5492376BB41F28A5708EAD96CB3319DBE625E869B1E
3D5C0F9666A7F4D513FD40689135A26BCE72E6DA0000FE84D71B893E37514EDE
D51CA826C12AABB831F1C7B23B8F87C9D5B4B93D8030E36A29B707C028AE5E19
784975E0AB3A112CFF954463DDE365994A31780FCA3465A12B07040567E27A5A
7F0237F8D291D45EAFECB8F5230B1D146CC7534279CACCB43AFA7F679EB8C3AD
D93FB3D48578481136BB9F5F00848A79C7EA1B3986C9239DD076D21746C86311
044F142655B3592E1FC3745425561301AE115278E500C614859AFDEA3450C5CE
F1B856CACA0B7FFC516DBD17E329D3D5D5BCB0B7AA016DC7F878D4334FAB7451
72E2D738EB23516E20F04845F877CE3D7681E05D282EE9419377D28530B2D34A
31BE58A1446D07062E28FEBAD64ADD8BB912FF42B3062B795ED861342B9769AE
994795C995B0A1AA2B75C1B731C34968EB4F77E21C0B86F4798C3E2023F9D3D7
586D9FD3973E361CE6277D3198D90102134797294DBD3916CFCADA7F50B821A6
9E0473FADA0C5883F064560A51123B115864D1E41D2A305B3495B232141600D8
D245D80528CA7B91F271DB8FDCB0DE0CF9C0E66010431BC0BE9483624A3014D9
9948FD8F4370FDA703CF2729B4B79BB8568F29AA3A1C94DB4B68BFB4370D9A57
CB67E725C6281C2966A7BFE4920F5722DB185A875966877445F67A8D62AA2B90
8DB75D00319FA3B04BFB9DC3E3B2AB82EB01AD1B23173006445E193C8A660C4F
9E98E2109EF056EA6B441F78D9475C6250411345931AA407D7A97285083F2A9E
5861857DACD9FED860422F946EB11803EF94BD96D4010717A036016D3914BADF
15FF022E5DB280EDBDB2DB0E5E6E7440250791BCD89F4BFC3EB8B7EF583CE7B1
F57609FC0CD57D84D6FCAE754AB67004E01CD3A918FB94895BB93A4326F3678E
1188ECD7D186BEB2D27DE6A369AD2F17A603D1080BB321937C9F8C8974E980AC
BDD76DFAE0656FE7895640A09191006C2FD043329EBCFB8DC4877456477E242C
E0F47701D5766326316803201937F58469C0D9BC1A1BFAD0813B1420F664C84A
38EA432BF1CD8460065DF472CF532698749976B34ED28088E6EFB459B1528DD2
B83F57B24B987C8FEAC6836D591B439643F3C4896B42F83F73945350E03E2D2A
F76B04B8D448ABCF59172C6EEB8B1236EE21F5491ABCD700584552A0793B22E5
998F117F8ECC342D67240E68406DFC0EEC9DAD9A6970BC93F25364901513D376
E79E9F499DC68839621B364AB5A11996E6355CC57086A1A15DB513DBEDD524B7
28EC4236F01D9F7BC073106E4A9F48D9C28DC41CAF3638B837299828E60DAF83
53787AEEC72C402B8B7E158D8F0FC4F31AED1C0BFE842FB856B79C30C3F826DE
2E33EEC64642950DE05BE1D5CE653DA254BAC8C935ACB7DF58F8E9D5E471DABC
1697E1FD0D219F322B344B748C0C99069E655072CF1E3AD16A39CC08B1C4CBD1
00006BE10170A9C910228CF131DAD7EA00BB30504C9F5581FE7A1C6C411F158F
250E290C932CCED4A0E101C44F5EDE58F9F032CD16835B3649BDC0716DBF484E
B6C4C7091306468634304E077D50333361EF11E13755811BF404C91524B15852
A40E37601A162047C19F6E72DFE3AD183FAD2251D89A88C3D37DD6CD348001EA
C1BD9D4933CCA1B7FAC513698A88188BEFF7C44F0A6F84546EA284D59815DDDB
B1CE9E9D3FE232B67C16193298A54CDE02499C9E6A7F68BC9817ACAED2EF6F73
94F6B126BE7F77EA3621B9A9F42FAADF0D250D91FCCE824162E3DADDFF62C425
59BCFD365AB29C87826C60999D7D4F8653AC60B6448191274F6250EC22CD4609
45FF35D9FA54B959FDC972BFA61CC60A5AA9D78BFBB25E0E94DF2B2896ED3E32
DC3C5EFB85EA16EE64B6C865B3EBEA34587E9D1DA13B12E55CC13295395369F9
D0BE2E8AC53F13A6EB7BB45EA8FB8C949EB8AB6D3EAF2329EEF86A8D35256F38
106EB6F95972473A300AF33538865BC1938E335DBFDA7FE210106A70E75FDC0C
A4C93389B37C2372
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
/UniqueID 5000820 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC570370029014B5BAD98F20F09BD659FDC
61ABC7D5E520D46577E685D4573A884E9C647A19C5801F35647D1B54745D6496
1F6B9B761C33C897AF3359FE8F6351DA66481EC0294600BE090CE6F30809E449
A4B30551AEFAF7A720C6E3DA964B6429100FCC6E0598AD6044E422B6373AEB3F
C328BACB6E3D1EAC9D901DC27E824EA210B21EA4E73CB5E980E17ADB33810976
EF9A0614BBC322A49A353941864A90C7499F636D6053D49481381F328E91A253
A79AE0C70F1657DF833233BD5FC116DAEF2C43FC2725A2E5DA4B556DE011FF2F
5706A4DD9F4B32C84C5D9D6AF7007045B4784308B5F6A0E3652E5B91E90F0ABD
7F5D9879A19736E0A1ED13CC4636414EB8C63A4E99DAA7C5945A7C4298D0DC37
015408EDBDEEC146F2D7C007E7DDD44D969BF0A3F2469B655E862E69AF85B563
15082CCB17B8DD375347D48C4342A1B609F68922EAA7DC113DD6A912FC405F78
C0EAD1CAA631862CCB43E11F3D31765B20B05E3A25C7147B75EC0925C148EC0E
9C930D9E037755915A76F020CB1169537360F1F86668E7CD09ED9E02D53A5E6A
DA08FA346192F3A2DF340FE38CFA02236FC818C9D7E8D525AF42A9ECC4536A8F
A8FEE52141C5625A95E8D6C27D7F3B5B9F1682A2A26BA7166BD420CF2B069D26
75E0F9B3D63B930E62FC88CCB9BA21E281755B3FF39BD7BCF7BB1F9802A760C5
2C3851B655FA8E5B2CE04E1E3192B914835F74F466D4CFEB19BDE9DA2889541D
F4F55E2C56B24AC46BA5B9526B462B9CBBA83B7CA2B50648AB33D249611D46B2
A89C35D32F5BAC8F5F558133D04506E98EA54970B9DF90EEE69C8B2D782BF18A
51DAAD56F5B5498645297551250484748D3B82599CD745F3B324DFCEC7B8B4D6
9B67C90893FC401176D8AAF3E9F86ADA9734A576E9C891B1A7046C771979F6D5
A6C4559F112E1A0974A25EF5D97F06CDA775BEDD0F44B3DFF8A30714A99475F6
2162D7B49EEFAC396998B62EFC7401901D057E313C5D4E7B45647ABCD313688B
BB274607ED3A6FC8D16B0325EF1DD971451AA0F27D8DB7ED7250B69768686AA3
B3C89B1E65EB19F19986D775E6723F23873D69A7BCAE7291F48C91B4E2A98089
7992B5E177C19E4DF8F345ADCDA07CDE709930B10E70AE74E23EFF36539C25C1
F5B39C6257351F8A5C0D94DC3F4EE90A541363F34E3983B5DA8E59FAD38FA484
39D9C719780CE1E8BD718A03839B73F7251131DED23D2098C1FC81AD8A4C9FFF
DF5ECC3A19487D9A0A51594029E7D88FF8704E5709DB0F2FB89A4D2B22C29328
ECF8AA9C0D2516EB19F98EA20F4FE9C2DB9927F7411CFB62C1561F128E98FA81
7FB46A81A84369548CEAE97758CF44601287C7C176C18CE3F73EBAD12135BC5B
8169F82A8043A098F6474829BC552118BDAA85C4594D776037257459A319CBC1
33879B4F6E0B0A941D599E97BBE555D6AFA8E460118B19894F00C0AE4DBCABCB
996494427963CFD16256364B68BFC2B852EA45A8DA9091F94AF490648AE9DE1E
1529F3082851F14A75572EECC91C6A13B06FC3B66C69FEB134EDC1D361CBC8E6
718CBEA901DEEC8A80E9C14E9DBC0994372010980EC5F73EC2CFB1704F36E017
FF903A004CFFD1C9DA5EC09626D475F9AF1D323CD65EFB7AC6AD0F22F892F33B
B18906D38B098C629769D02D410A0ECEBAB97055775175186B214A413312D0AA
BE9C7EE10C28063D46269278AE1DAF12B247DAE4CEC24923352DCA6FEF03E80B
C2BBD1C39420D474A1C9AC2C8D21F30A72C2A389C401D8917A9AFFED5F341C8E
84408CEB5B8FBA0F19B3376AB491A0E953A6C01FBFB63CC99E0886A57C42EFDF
5E595C028D9EBF7F7FCD3648E0801C035CD6F39D44B55E84153A0C9F24345340
BFA16829F10D8321685A2B5CDE0D90BBDBCBA0021F2DC4B6167BF297A9554D22
DDB2001717865EEC876221E04CDF3B15DCF7E04E2AAFC1DFEFD2B7337321B7E8
2B19A99FA16552149F68AC6D55D5E9B17259F916EB183B77A5A5EE4174EE8CEA
BEFEBC8A12A6D9CBC3B27F61BFAFE717564A69764EB6B98917A895EAE19D15A8
A47B8B66CE3DD195794B06B282144192DE6FF419EFF98BE0C710668A155FF179
1F16302861B9F9E4ABBFC4DDB8EC0DE640CED43D74EE0C2D19AC4937F44F58B1
7279E13E48D8954426E86FDD4932C5C81D9C77BD12BD9E397670D622FC263CEE
418A148762909DF9909BC59DF34B44D178AE0540EC53B1169AE0DE8F107F7D2F
589557DE352C8FE107FE9301D49DF18AB31BA2E5EFCBC3EB15BFE60E80DBB0D6
308E13A3B08496480B8BAC69A25C9C93C8099497A9DFBD6824FF314CA9677037
17D666850AE60A6E5B1BAA835D063920D070EDE9A4BDEB0638E9E4E570DFDD4C
35C739BBC7397357A67E1055C2A11208B5CD97C1E311D6F9DBBA09DDCD4A2FFD
ED308D4C8BE8F2F06E8C2CB83DE11DFA419F2F2AB85E519E45684D8AB4931B34
8485D80F7299726F980E31B84246340C7B84E368D600AB28E3DA9C05FA79820A
62092093EAB65C39AF241564736AA0BC8DF26329EE860152E2FED8DB37FA2EDE
0004359874C43710FBBC405915F4ACABD1DAAFD89F0E752905F9BE5652CBE73E
9F108C53866A99AA0F48700148167BFDC825F86592AAEFE428FAA55628A5AC1F
48D25FFE19BF851A16BAEAD6EE65818CFC7D3455A1DEA80509FCBF7CF5AA737C
ED8672AA481A81C0792FA973229074AAEB3602A4A9D8C209EDA5337F182EC73F
0E573B3450CC00681822B256B1A6C7D62C626CE7ECA0AB3563016D45AB2A55E9
6AE432656DD0D9711A1169D0DF6DF6E4B885ED7DBCF75DB47DEC3FD07D06C241
16AD4A2531B5BAFA2AB2E41DCD20874BA23FB883C6943C203D124E59D64517AC
62F222EF78CD873C435A89AC39886F5975D93657C4FE8AD72DECA3DC9E539AAE
48B2E38947997E950E8D4EAE8A70635A1EA09E7A47FEA9D02448F8098A50AD6B
ABA2E3A8F7714A83BB48DDEF0DCE0586FE883EC7775320CFEC54B094D48331FF
05052E531F05FFF4CB3583448D1995841C0E40BBF424B0E934ED6AAF0A870C8E
E25A2A3408E746350997631411FA8EA4BF243FE4234C800C5E30492BC7D303D3
953889750BE5CFFA1E85DB939C13BEACF46B53686ABEA5DC90DE88C0FF264E48
2EB9A3B88EE90A9E6357FB5327929C711D81D4C2090E5B29F55B6BCFE032265A
2BF018E1E574B5E7193B6A27E28F53E848D0E95EFD5DA15C9C31FF69C935121F
7C38A98B92467C4D0D35AD9EDAD27B2EA6972FBA97D4ECE87042F6BD2EC0FC75
9C43E5113DD42136F73E3B43E2F83A1E2035E2D95DFD8F7A0A2577AC5EDF66FC
C67AC6313D356EECBC893BC9F8B14D09041683EAD386424A440445FC4E1D9AF9
AC9BD874F8F5943BF5D3F5FA3F4E6BDA86E1032E1302F16C4AE4AE9D57E9F001
3474082F938A38581002EA7923C5DFC3990EDCC5DA66516C900A8A5F5839D01D
43DDFC0EF8804B56BA845FFBF5BEC8F2101ED1E99AECF0C6240374C7C841D604
A6448C3773F97D754AC95D0DD1A0666E96B0F35674560E19DB0925BF945000BA
7CB23D7059685F0FD13E7CE1F3DB054106354CAEAFA4F6D0E9DECBD085307316
E296A9C4C4899D1C2BCC3F45BC62703C6E5FDC4A179B8EC0604D64033F57D01B
BE1801B056B7AE9207C08159FD94E7E265FFAE5A81704C8D2587E5D5628C1F66
C4E325537EE5CC574F8653C5362A7EFEE30314A7C2312C6A5424CD1FB75D47C6
0392F6AF0427969B909EAEB7DDCE8DD836833A7C5FB52D1F62668F5AD81434C5
B74B384D6B569FA4A5CFB39EDD3B58B9DB9BCADC24EAC8F87E6E955D14A86CC2
73E1790F60D7471AD107F33552AFC7519688DF6E38B58CF1DA5732BBCD3BC267
D15277B77185FC2E37D053841D4C0AE3DC12FF9763FDC6A1AF239E91370E45EB
BF4D13BF57689E742130445AB744E60C0AFF50A95F21F410B697E4914EEB001F
A10B45577491E82F1E7893BE52933DEC695B0FCFA961901F3757DE4B667BD0FC
8F4C12D813071823357A2EA83B623EF284A94B671087F0D7BBD2A6E396D87D85
7D2F170B3901550F3B748F43A0FC2B3C77CA7A7485FA69D4ECE5E9E3ABB89B3B
0F60A7CACC425C9E8DCA9D9FE22E47
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
/UniqueID 5000793 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEE09555C11E6E295
71B219B380EE9E5BB17AD84B4E8AED35880BD88E5AC7D9FE25C46889CD093396
F0E34A62F93E64C8E7975CFD617121244AB09FF9A4F73F8166197D0CDE2EEBB3
81AB9BD8329579C2122368F56DEB89BA6E42C5D9E20F2789CC4A89E4AD9B877F
8A0ACB84936F109D86211169257C19756A97E682601F4D1E7ED950A351C14DAC
4BEA7FB0E58FB5AEB55BC09B1253748B61B4E00C448F263458BF958D3986BF18
9636037E95FB425AAC96FCED5B4C766F93041FAA0DBB196B0A220B8E3A9FCA6E
B4F5C0C775C25AFF4F5099CD3A2FA59ACA735718F8E90B351B015320794A89E8
4C34F32B465E201008CCC0A15C2DEE572BDA14D8BDDFCF2743A15F8A93386861
828F6251F206B9131C951D1ED4364A9CCE507E2959A1DA04A777B592888D38ED
E68FFB3EFE83870BA8E674A8D39B9719FCB800F20B4DE12752EE2918AAC92F1F
C0BFC9D5A0A7A366B4FE0479E6459D51AFE0544DEBC72AC06DBB214C1AFEFDED
AF5D6C0FFABFAECB6D36D2692251410822D198896BAE3EBE9010F5C4F1182968
1B133AB51624D4605C45B517E8E146FB1AC1AC386AA9509E3A4F35392E0F5BC3
E484C073509C3C5D471C4C9BC04703620041E4C7F5CA111DCE9661133EFD8124
DC576629D21415657846F9E1CD520D515128F8B2FAA728C4A18A407BCA4DB8D0
84259D60B1679E792F5CFDD750037E52ED37FC3A7908588D629C293A68A060BD
F3965C4EBD3FBDE0CCE8AA0AB470074F85278AB68C4DB8FD51C7D65688BF38DA
1C5C7A2AEC6EF7FF5542CE8F9FD59177F41101D2FBFDB151AD2D2E219ED21ABE
1DB1B03F81552A4326BB5FC02BDF7C78121E81C52370272F5392EE14A93D432E
A7262F80AA8B87F7B0E297ACFB9993556A1DF4CEB57A1882F307F0EE099AF080
659E5526E6A290B95DA276FF1D56D108AA5F588ADAE512F9AAB9F2E527373DAF
483D0CECDA8EF1A082C93DD6CECCB321E0DBB1291EABC3419C009A5A37506BC2
72C9D21EE48F9FC2C35D851EE98AD3863A0A6C4042890ED085688DEBC02A6E02
0EF5101E41C289C854F743B5D329C7450A21E4F97C8FF528ADC2F97F87C59293
520346CD9F59A3E70196ED37E6BE3262D1AFBA8238ACEFF6D9AF985B293AEF5B
35158BE0DAFE775EDED8D9693D03407DA011AD13F596440EA994A1F9E8FD54E8
D8B9E0A287B4C207F58F2134EB3A41F5E6E24BD11129DCCDE38D18574A221A21
C15AE0743CB907D3031D08A9591029380209D4C769FD636A4A1BAEFABFA9E50E
B56E29C78C0F5026AE72E0920821656F6DC056D47E3C79ED186B61E0D177C39D
080E6E460C40CC89CD3F548FD5B6E6F84EB5E19B941FAAE2635949970E57B688
9DD107F682D9DC5270756A5A66EF30FB955E04347E34C0950E250511B9403C6B
D044D6F63233C4E83966F8B4B4C033E07E8E1C38BB32235F1B8C495823F81D81
79B5223C62948448B30D04D496D41BE84B3D27A4EFCDF533C593C2E6B8EFA362
5287484D2461D76C97A738B944D3BDE0E13E8B92F3F55C081E9773DF7134A006
208C0A0CC90226FD5D122AA2C6EAE6F9D650639CB961CA8B6D79CE2B46C36F1C
69C29D1672733987DE799CBEC1E26040A155C8E24DD25D8922F210D2CFF246AB
A2FAB8394200578D1E3A270D563FA2336E501140DE941926B5F272B664D449ED
20BE5545049DEEDBB9DC01123F51E64F369E211355AE286AEC7CE5A6A4E94D0A
5FE6EFBCA19BEA3AABE6F71029B5278D0A63EE71CB268A7D4E171293D31B5941
1A7B243D074A4FBF8D3FB5F90141D4E6D1261B8CC29BF1D5BB792BB16D3F6524
1D5A9DD371089BB8709445E33BC621A20D25F326C0693B95966E7E2C8142B4AF
E6AD80ACA7E7F95ED74F579A1D367E48E0FB431DD884164F7815B870231361C8
C6607583C59E7D591ADD3F9B934B57936CB160B14F1EA840449712E1BFD30CD6
0C6AD56612451D440B49D3CC3348E1909851F307C5C727D7BD9A187E128CC3CF
A9A8A423ED79A236EA39F2796AAAB91D19F858485614E42F0063ED7C41F8529A
12FD20CE6DBD88144D5C9F1DB65A4CC05E725A986DECC9620EE7174DF9C328B1
EE7296752E9BE47A605977D303827790108396AF79321A62EC69D971336491E7
DED58FA5DB2A516F8DF43206C3C85F11BDF03CD998DF2AC39BCF6F6B16479516
51154DA7577770874FC0AD0581609318042A98518993B3C842D50182E1FADE48
0CCD20DDD432292CD86124D5CA1398BD4B4DD6F63C06BAD6FD35757844495723
68ABC148C20F972E7B344312A3B92A96E795DF069F062FA7BEBF0D6531978D06
BC98E3CC9C268C2CF34A657D1E7CD73469407E51AE3B40F07031786B9EC1C9BA
9D8F8C7865E2EB59C9A6137731A393DDBAB2BF5515519CD31F83296387F27A1D
8E574EE4CFD489490656D0A236A33742CF59689490F469DBBAC1CCE40C652018
CBD2A4CFAEB637A2D4830BAD1724508F64E680BCA31051FC264CCC55355BA3B8
C9CDCE9929215A6D647194A03C9C8B8D20A1E62F065EB183703971DB56BEEE08
A5538D2B94F1A48DA6DCA24E67176249187EEA848E41AB51A261F79BA871AADF
F528A90E9684CE6B91CF0D484E66C2CEEA77000DBF24E9B52D17A15F593B6429
60667E25C6886985F5AD4E09A0A643E32247A8CA6142907EEACC9D23E76CD76F
B95A71E75CBAAF60B677BFD5379C451A0F3A6A5A02CCBB57F4F30F86B037711F
7451F3B207D9745738DA017E8600BF86CD3CB7018E798AEF2881A070F26EC73A
CC7A515E04C65DE5E14E815615B6AB66D7073727EC6916D9C81EF12CF73D92F5
CE2BD6B7E4E40AF833A4983188373FB5C31959A7B7947B6FFF6DB5ED31E5CD80
A4A5E2781D7B7C8BCB58AD584DEDEF6EA8C652D9658B836221E7AD8805EF7925
C01F285D1BACCDB856B060AD4A7094B8AB2FF7959DFCD4A4D46BA9CC89858298
5F318381E16F86ED9DE151FB8CE1391621871F5BF234D3AE88A63E92C8A1A2D4
D1E0112910DD6A77935D6A6D9FF92E3A81E82A35CF56A5B2362FAC6696B08E77
ECA2DC2C9F419BEECBAD410A7052979F8CECDB5606A5D5EB81C433F436053060
EE238E38483447837B68B2107DA093F2BC1128AC9F0AAA986062B77E65D964EA
48851809051A308CED3A232B2CE22195940B0671E6143D88EB605B27D145CF18
78ED049852112706FF4E360162C8D4BD9BBCADEF0DCF37DF9723DFF941C1A8E1
81EC930EB346BE2C9A644B1D7BB8313966858679D696829CA2F7B7625F5C3ADC
5B1D148BFD1EB2901BA5BA3AF616784123C3AEC2F95497E8BFE16A7CBC7BE61F
1855E11C8AD1A2AD88DA3E02D925A32F9386CFEE593B37061663082F366C6524
7652AD7BA195D59853E679C95A4123F6AA1B018CD509438FF71B5E177A160F8A
991C04410F3A5D1467899F1CD6B9A8A2417129A865F8C9AC55AA6821EC58C574
D9CBB71F9F362E85D1E5D91148754DBAB0F9552D39D5BA3382FDA300CAB66D7A
38C1DCA3C52D7FFB33D94F31887C9A74DE45C7AD3BFA42E9C5435057FA7A5BFF
15836E498BF85DBFA40C6AC84301E7C268841A166306D6F2DC2C89B787C37D75
76FC29D1758A1A36EB397B0D8BB4845BA81C1E088E6AB5626B1ACE8CDE06C506
6F543285CBC8D3B149228F15EF80959BB0C97A00FED7E6AB69D48D5F666BF5BB
617BA5C564733083EA9EEABCA8F2F746523602E46A371585AAED78D58A6EB525
5C6863452FDFC44B69A0D74CA9F52B86C17A5849CFDCA80ADE6F945B9EF44FA4
64B9D79982E03DB07142BFA3343767110B50D93D99C81DC6E3FA2F309A4E4E28
101E4D7A5FB86F5BAA88CBC43459A721B42A19D6EF18060DC4FEDFC0C9B228B5
E60C4179BDAFF0D5EC7E31BAFC7A03B8BF365C879A8BBA4DAE2636DE226CCB04
A83D134B0986D7A556F89B4C7755C8196451545E5AC799486199259D667CCA58
64027FC048F2A60947465443A3F80D3C85005753AD28668D42D011834938F652
51C37FC73CA004756DD5E7D517F59B5DC1BF5D1C35C085D766A481899F49AE63
4BF92E314E0C2FCDEDD1FB03046DDDC7F6D579C9AF25790F4674DCE1A13F8061
8394604898EEA1DA378F1FAFD480F6852183DF5BEA63C035BB99A55F11B21D90
C1019D05DEB55C305224EB5736EC33CE9841C00CD335446D597D9034309796E7
92A17DEE0E1F3DA051E251021B2C6D7E87A071F70BE94686B666AB47943CDD9B
A06CD11D976EBF13462CF185807DC726912ED2E5B3EE091B56455E7A7072CBA1
4F6245AF42288E1FD3B66A6A7CC79A3383128B53F4EA5D1157AAC0B979DF3A84
CB3FC87069F17C035C5418299D212EA2CAB5DDBA906051220ABBD8727C23A29D
85033B624127BDEF092CCCB5091E6E554878A95EF1F3167EA1E15FCED464E1AF
125CDF4507DD7D7540B2172A1824E3D660BDD904F721BE9E2EF14F8C5810E805
B8BA1F0A6FFC6A37E2C195E4E5967D4E709C5261FE085AAA3AD570AF74C7FD9A
DFA5CF2D096BF998FFC518B5EBB99A20F665C26DA1BF44AFFE777131577DBA94
A4E160A67FD9CB5D22BA7191D0A88DE301B7B6A0003C6E3CDC1F30FDA96767D6
A470E53A62414281DBE4ABF83E4608B33ADA43C0AF74506A238CB2093CEBD8E5
E9B9CE04C761DEC8386DDFC1EF8C22566240492DC49F61F609B19C3A827F0423
E96F686029ED5D4B7830CAB01397851B47AFF6FDC5B29CD7D6D1774A1F48F10B
1F0034FC220BCA1B40B3314F15DF5DDD0136F802B8E4134F478329E9615B341C
4B1875310043A7F36944C67C7F098BC4D9D4157353A23CB79F43B9B398B3BE15
EBFE78E09EBD800BFF13B2468244D1041C8007FFE0DB3A97B5B5739245F194E7
EDD0BFD8402851CC130905AE1C635052B3148458DDBD23A3C91EAE32FDABFC81
F6981B8F125A032B84BC2248B55B506086AC055C5A6776CC40154D355B8501F4
624F1292186E47CAAA89B9DB0561A3C99163E1E4B10EB860A2DA7AFDD20BD9CD
E784A56B97B1AD87F9555E0C4E802037947850617D6A1C36E1DEFAB328903A09
CFB5F49EFFE69B57A356EE895C84B49C11192E94208F68731D8736FEB2F087F5
0444E99EAF569F8C8B564FDA0C73D803F9A6913D524464BC310445B3476B2B67
84E90D053F088302B71E6CF59EB57DBDD93FEE52660E9E73F952EA22B1264900
D474AB68C6069D57B0E16D5EE1B0E12F710030DE25D094C1AC754858253F6E60
FE5E00398D15A5BA2905AB52119A97BB0724C1B908EEFAD412EDEBD5F07FDB2E
C61155D6DBE4CDDD94AE11479D4C3249DAEBEAC9D54FFC403648C253EA5E81A6
B23BB19271CF50BD403237A7B171A6E35D97BD14F22307FE0F5FF58EEAC79732
AE6C9E1C0FC1FFC237141702672719795E8BBB1DEAEA8CB0841C5DE9B3C059D7
0333AEFD01D1D894556236F5E6FC1D780AA9BFCE6322A99BE01E1B70D21429EC
490A86894F753D39B5B1B56F04504061FAFB31B5A2BA9069C530CC79B29EEBF8
FA291821C5EC125F8302D92A259D225D145272BD8E71B74A8913D1013D0DFF90
3E0FB36AFF2DDDD707066A50423A73E2501FFAA24E246FE3C02417EA493D05CE
2D292FD1FAA371B129285A06999C26B8DC1E74AA5745316C6F0CEBA5E63CBC3A
2ED2C3765396E648173FB7F73C6054FBFEA49D70DF2E8B1C40C954B9BA8F0092
7AFFB477600BBFC306BCB9F0219EAF75293AF68094CBA09B47DCB990F377DF2B
A07FAE4A36ED70EDDC4EC9EB4313421E0E01F0C9CBB5BC127E0076BE665FC0A5
B0BFFD3D6933CECD30FAA7D0E4BC074EAF615CE496C4F84DC8A512699DCD2FB7
DBB994595008EE21D8EBA0807ECC14B0482AED1C27366D49DA30C018A52ED75C
9B6A865F837B694CDFF6299643B0581F822D06F4971D381F3D3849D22C2FB356
633FE30FED382B8A74523CFFF25AAF8D44CB180D67CDFC37EE2BDE97E0076428
630CFF3A74F8E828A958ABE17AD33663E0F2DE00C067AEB3258BC08BDEBE93FA
A4D9B034462CBAF34A6DA27D40ECBBF621BF7FC12B945FAECB83709D73D82255
B3BC4DCF1E91A35C02838C6CAB47363C54E71306DA0A28B56493FB850EC41D45
0943748D5CA31586A6965D90EA0C209067A96982D52D67BFCFEB64FC733F6657
B4CCDA2F124F83C74552442EB8F9A9FF6265D0AF8856FCF1B5C403AEDDF9C8D6
D46789649C0CC4B3CA5EF691F04AAC7A69BDC67CAF79298A609A54B7E2DF41A7
F9F7BF74CF233E26F95CA80E9391C388C103907F77DCB1C9F8BA2CAC7DE0555F
88B1247FE9D1298FF98029E99E5CFFAAF2FD3F25BBF6772E3025F2AFE1FE2B4A
0A8FF44F6E1403E2BFD206DD0E98095AB03650F81C49A3D25C2994B38A03FA13
CA5FC2BF6E1433C4B02031C95B662969877EA027623A6326EE5390F9B25D0F30
3E3D59F9D08D4537456B9DFC181C691B9F04F914FB960D9DDC7B8210AAC2D3CA
22B14E8397DF7758419A68E43747357D784BDE432CC41D278518BCD035C3C0DA
DF2FC2279E411A27F53769B9B96EA5BC99FB6FE441936AA0796484CFD828F7E5
733A23D3512928A9FF8687D84FD004338E7BB7664621B7D31D81F75EC1AB0EFC
DED89208B5BE21B5A72A2B4B27D896F4DBD88D834278A80F658E84ACE2D11FF1
1575F53F07507B7ED05BC3DAF21FFEDA58EE64B81CD854F466C123A8BFC3D31F
1CA9ED56CCD2B97F1C1173FD7C38119AE98E02C3A5E23E9ABF1162ED24155568
1F7E3DA3E45CF1EA3627EAA1582D9804E122E050F0F90E88AABE8BB7133AAB11
1BE311746826198D38F8DF9B1EA43CAE27BFA1E24DBAFF75CB9B62F1D21EC27A
5D843F40FE5590B5E0BBEBF15496702E927F19BF9E2041562DFADD7300E48318
6AD29A3717F86F46094F95F51264305A29C4F24A27607F69D4139C80A1A04114
26419AD28107009510D8265AC325CB0662327444A7C36210B27AE325D574D47F
CF2256C6DEA1FB53B3903CA9030DDCD8A9705BF35D77D75D0E8C5B7C141602E7
46D96A8C4852879180DC6958A4088F167730A3C7DD64DF486D57847D77CD22E6
A8A6DC3A4E617848C919A91D76E5A976F63A4C33FA91F46F0EE761EC88763D17
601915FA0999E60041AF77F10DE0015F53DD380B5401D857FD1F2D5AE001090C
68ED65AF6F186290D3084AF28DB72942CDA8CB369EA96FB4CD09F82FE594607F
8CFE3BBD7ED15547F79535FE3E8E6887D740CDEFA7A6CB9EF31958D4C7455C8E
2B22F030D5CFD7C7D36EF24ED04F85FD154D6F5E82B9CD2A35752FECA4EE951D
C62282BAF7A20918D8BDF660F57CD89841269DA085898B6874EED49EE5BD5F6F
89B9F373AFC21EEB1AD6AC8B3330B21B38189AAC5C8303E77C8CC0E6D214457B
D6159667B7C267692846853DC3C3F6634D252D81628B71091047969D11F4D7DE
88C36397BAC77F8CB20D563E33DD6708029B150BB179D182721772906AE55C5A
81368C34D13B80BC447753314A0A4C60E7AFF139FEF50E90E05C0662682DA3E3
41543E81824D63507A020EE67485BE1CDF74C3220206F367B72984EB1300DF9F
C5A097A6CB2597CD0A057648C748C2C816427BFAB66CF7B44C843E3DB3352C49
B6A2D0DA16FCF6DA369E6F77D5B42BCED1370CDE94F52C76EFEC2882074B4402
56328975B83A43008ED20FC7AD24CD3793EC71A5AB64E687006A69165BC05295
AE6CCDF105A77D87BA6655E7B8B670AFDF12E9951798D33192B6B22A3140E0ED
6E161C4C54730E45CE5D31D12180194CC59DDE431BFE1DB4B6A54D790C197C80
247F7FEA078D75CBFF08307A43E7E276830F4D81B4064098AC83B8421E6933D5
9FBB4BBB265607E9E647BAD7E9B9395F3A2AA968494273C623E1BE11FE0DA77D
55DA3E223BA48630888F0506B1C52127FB75A1D56D70B4D9AE989E5D4C227876
9D93781994BDA6D44CEEAB0BF7FD46D9C18382DF5AC075AA25553E90CF747CA7
DF70EFC23D19257716E62C299183416175ED70058183180A315C9F2524A33E14
4680DF1E37199946
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
/UniqueID 5087385 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC27E4A7E07D09FB08355F6EA74E530B0743143F2A871732D62D80F35B19FD2
C7FDF08105847F13D50934419AC647CBA71DF74F4531DC02BBDA22AEEA3FBBBB
407E0ACC52BDC60D01A29407CC4F93EB8BF6D4813E9BA858D54F38918AC82720
4956D50291F0546E50FCAFA6DBD0099123F5ECD4AB338DB310DB4CAE11337A89
8ED99B6F483940C97544F888EAF0CBEB11094A13C073D0061808662A04A82BA0
AD35E8782F854AF66C20C0FEF18D0ECDD1646321B93D327E53D88CA0E825FA95
05AA57BD76863279D34E27AA77DED5086AB0F7028F91ECE074118AE0EF5A73E5
02883036683EF03E27FAA7D26B42BBF998A5103C76C908E839F8A865B724042F
CCDB03635B5CDBC2BA40812A0A22F71E72E477EBC759A55C6EF44F86A7D1A985
F9E7760315BA4C7BAAF25C0B410F42B11EB6905410034124D02AE291F7060E9E
A4C541BCFB1AB3DFC4C30127E267EB55A2B517C0CFF3257C82C549381EF7028F
B2C7401A8B51666889D22555EB1D89BE236A45D37113A876015A45353EBDA142
D9B936E38D38E3A78B1F2AA8AB6806347EDBAA64D3965EEADCCCE35C109F8F5A
6DE7DEAB2AFA1ADA703F66BBA434F9B1E45ED2FD348AA11CF54B76B564CB5D78
A17DC33ABBE5E84D17758B0B70EE2C29E4F07E7A4170FA56E72367243805AB89
5FD5B1BB90CD9E60FC3D6AB8AA0D6AF2F03A5F30803A4AE0D43094E2982C8DAF
161651A58A819680E70C2B478973DF5F4390AD87797B160D2C905612E19067DA
D06501F82801E981ECF275818620900078F7AF929C20F1935DE414C35F6A2AB4
AEB66DADC984522E674E3037D5D3D5805CF4284E0F3744603233E7117FD155ED
392902EA5E975322D4BFBBD07F396444D2251EF27BF2CD12E2D3EECAA156EDBD
768168EF8C03A7FF353623A517E2553E10144EE8395C1E0DFD7B111E5C289348
55611730365F1FCAB29F08A65B7F25710D8A3F4C3C7C7988E0B2D90B2F7B449C
598F7CD296AE94C6F21AA1798ED3C6B1442B4372F3605656D78C3CCDC77181CA
813C207C8522A765347D89A3FE59A7217E9607CA025C1AC0AE53D1D959CE7AB8
D326EF3B8854FB7D7A0BE52C20F3D6A46B6F49345664468682E8BAEBB7EE9FDB
1C327FA2B8F0C9DDBE5126B235C102B00E422085C49E8AA5DBBA3E3069BC7798
C1C909C205E6CA44ADA557C2F779A1F1FE2A0B54E24D6A7DFCEE2D6583D83D14
915C346232EA3F58F4B60FE3306948AF8087A5F30E8ACCF1C9371F55CB8D593B
09A1966FF15A22C20615D590EEA9965C0A537819764F97B3FF287F1DEC2000A7
9C3902CE04E2488B1EFCF7D4ECE54FBEEC5646251DF43ED47C532EDE9169CF84
C1A134A812274B48C83EF8A860000BAB8E92ABF83E7272DB353456CF72BB9B57
ACC0CF228B344997DFE52CE430EFDFE078B84A4B84506053402EBAA1B3C76B35
3FDC3856D29599AB202C9C143C60B487EF63C5E85FEFFD0FCADAB950F0913A98
E8DF33B0A7ED62A5888D8B659F7F6D8F42D86D380851E2EB0FE87E4FD0DD48B6
9282A678A6E753EE005FD77535D0D33301B104D4127C37009F3F9316B2A4CDCB
610EB5394D9613B5D89E42C67B8DEA90BC3BC71308D17308CE77BDDFFB5A12A4
B9640870AC3DED49BACBEB5EFA9793BC9837183C5E722890AD7941AE649B1B4F
3299B8D1BEDF143CDA2A38CC285869D511CCC6A10A543CD2DADC086CD4E2892D
B4554C60C12B9652686B53D19AD541CA66CDA096D8A68A5DCC5A85D3D2C01BCE
210ADABAF6F032378FEA7BCB3062C319B0B42EBD4E30E1EE4199D55EC58430CA
5065DCFEE0C43730B4B891BBAF9745DCBCB6C895DA0002D4E13D61CDEDFD3940
BF7738CA7690CFEF8B8355A43C87052F099A1A77FC9069DC40BE760B9D65B66A
2608E5AC98E00A4D6B78873CDA8441F1A88A693A635185CF75B13B6EA8759DB6
25E1D0F358B49BA91CA9E99B724F78718ADB0CECB690D2DCEB636B3C97969EE2
FF8CFF0B2C57EFE0B287CDAE748243B9D86C49DFD3D57CE92C99287DF95327F2
E60AC1CDF1C92E8E2613CFCF9FF49A6425F10A169D152FA5B771FC5029D2E227
191A53C185F1B234096900A02B5436DADC9CA6230409569C8415FB37E37BE08D
98D042C90C72A6708FE732D53E2F1A5EDAAAF3D1B0C0B362B0551EF6A34D63C6
5D98BAF8E13E32ED277499B80233E8390F4B9E2814C3625055BBA696454BD1C9
8BAC20BD25CF79C1CA0030487B2253A7643CA7FF0031682B91B10A0DD88D15D0
F9B359F756DA8734E9B4FE91337D7288B3CB36EDBE71FD231187B6777A446E00
97AB2C5100F1D6518C1E58E5EE83DFD32365C561A1990AB2C3ED5B90286F47AB
CFE4448F18E1EB87662B9F3C7653BE225CAA25CE1B1703033728A520F37181F2
7C827CE3DBAD9497F71DE897D91794DB67310B09BC21490EFFF893FDA35240B6
E7D00163DE0C26C9E76001C75CBF6EC93987DE6A4C2754AC680A289060ADB98F
6E9ED1F8299B6B25DE56E31366383CDEB20EE669B27054F58922D9FDDC919F2C
2F12DA8E9AD269E86C4CB115694AE7BA268C7DA81570EAB277558F4E91AD7161
7AF1C80A1C7172D49DFFAB6442A66E030C4C226CC0BD0A78AC850DE7B1A313DC
F6944CD05514C96B93A246CA1EEDA36F8112309717148335009733041B2BD743
14AD21F2B60B52EBB52B1FFA364FF765386FE2782F46CFA9949E54C3CC6684F8
CE93E9D6C36617B6B1D6CA1623CB7DC472BAC01C4710DBF08CAE218DDA80E936
1A3EE993E2DC47031F064ED67BDE0E6C3F44E7E1223CCC7869E4E1E821B35EF8
BCDD6EE98FD2BDD8812DF4D17D097F83101467034A14AF9DF90D0235CD660E36
F2B8B1859BF9272419E96BD724034BC133C0C7A6E0EC2AAE53BE9F3EE5F8EEA6
2E35E5E622F8B973BB59C8C35493A7DEB7BFE1602FF1D08E2999EC46C3E563C2
63F9F62B3C9D3EFC40CF31904F42108C5257DBF98A3B55722F1F3AF7DB3DCEA2
C6BBA8AEF0618765013E23AD0BC8D8F3EB8E74E4F4CAB0D687B38EBCEADB84E0
C9FDA31FAF9588600D9D9A434CF66587977B2A29B22710C6A0B8ECC464DE5B6B
8FA4DDEE129F62695BCFF984136BD9F2AB2158F220473D068697C11DE3675412
05F60D21281E7D930CC4F71F86241177FE0AE530E215F027BF3F211C0731D9A9
1AA48AA71DAE5DDA39EC4134B6B17E4B1CD4F0EACB8BC4BC790998D8AA12E191
94AF8700B9F63D5AB54877A988B4D80A7B157853EB1E48DBAF01712C3F271FAC
2BAD6FF619F4D65A5C912BC50395CE5719C48D339E367F0D4F0ECDB5C180F6FA
D2EBFEAFB0EB885B76E3B88E9E4DEA58BE10AE1DA63092D4C2A71368231DB921
997F61DD05353D84EB5DBC1F3781AAFFA123ABE669A6600D2DB729ED8FE963AD
7E5045E822BBDE7C11A475DA4084AD6EA0F8F81033C5E18CA1F115AC20945DEA
F3906B35264ED730F87752CA77CCBD09606F1D8134A9D8DCBA96FB4BB250CFB5
109682512C0F40C6A1221E82968A773788C3FC81839D76DDACE8A4178404B83F
A192A1787316E7E974BE2042EC79BAFE91AACA51C130230B9CDD108858703229
3017052140BC2F9B2B533B6C572822D68567749E056E1A17F45CBD32BCA3CC76
09D650A7EEB5EFCB00758C71AE490126509DF48B9F9655A0C05EEAE6B3D23957
06286D2A64C4E533D768493A55ED9AD9DA6457CF6E5F3839C5D4AB76AD9F8DA5
FF7D57C6863F04834B210F7C3BBC128F9F0170C2E907DD27C689A6694508E783
3CECE8B9992604DDDB1D5A22BA89D0BFF3136605107351895E799F1482AC28DF
224576B8C515CCD605395DC6511B723E20A5BA819AC6C26A541FC0E9BB93A5B7
1F1FE2997D799BD4E63664AF4D8A0A060FADD6E9E07B83AB6F0C23C6DAA260FF
454E0913C8494AF7BD6BCF7930D42236E4DE1B6B00615DA3F207A0C1EFEA24D7
118DC15CDFA149C45F9E894B869247258206D1B4130B1DA169DFED0CF32D62A2
0D1358C1558240D8173ED25F7A2469AC15C6BDDE50137DCC51081E8C8E4E14D5
8606ECCA1E625169C2791F38995B1A7470874A923AC751E67144530D173BEEE3
BF0D4316C23F76B86EC61C29D37980C9CF5D25CD665FB5710C658FC1B433C0EB
C27EA346562A8206BC722B6DEC17682302532EA470FCE81A9ED67805FFBA6719
E4514CEDE50BEA7AD5BECEECBF88174F043E221B671B1DC44474AEEF74FFAA27
684DDE8BD4439A8FFF8322582C84948D5C41708025A4E2A2E0E4F0F1AFCB0DA5
F1319791D361E6DD1524F9AF41B037F65C9E2593ECD31CD37E3CE816343EEC46
2139D4D24FFB820FA500E511E726ED31445CCFC9832E6C5BC9B54E73BD33261A
625FE2E63E1D032281F8AE2A236373F39B892031C02EEE0A6A145D5EF7FBCCE6
B669F17D7DB2E279307444A083D41CECF4EF69CA6BA122FF38290F5772CC6B60
AC6E90C71C82E0BC272FEFF939B4D0E9FA938B7275AF57B0E2671100821C1BC8
6841CDAB2F1183A71960360EB881CA2231C4AB3A5A8A20B58AC6ED55BE4DF966
1D4F60F20FA8FEEB73353F25A99794202CF0E935D1D07141432775F0126B2CE8
DED9CBF0DCE80FE33E23DB1C43020C00CB1364139EB301E335BF935F4C5F2371
2313A7F2383192F2AE92B94AC2972ABFC1DCA047760FE000F4FB00C86E594E76
E4D1AABADD6F6A77939ADE759A0361F89E50C55102C621DDB2738FD4EB16B814
4AB30CFA8C848A5D0F083EB24500B64EAA7F7E6E60B1704489DAA6DE76E8B3A7
62F014F2C44335FE7020DA2A53782D1F14723D3303AD7EC3C54F5E996BF1714E
36536F6BB7063EAFFA8DE5E9FA9F38F43036C5DA244509AC1753163CC270609F
AD089E9F3CD175FF205409DA7A462DA9494AB03811B91AA7AFE9C075DEB1C948
29D5E53EF745EC8199FDF6937D4A465CF3C8AD62937A54D70690E305005076D7
2770CAEE7900811C8F7EF17B6130C6B6B7A41D9CED056F2136FA8370FB6F8E00
61CF58E9A79F7561EED8E137D98F6AAE81A05BCE764BBF3D8B2A6D59F5126691
6ECBFCE13C7C1C5E5D8882190239EDF11CCEEFB35C3BEDAD684EA2D05E7D4574
CFA0745EAE6F01E57DFA80E9569E35E7DAED288FEB45B02491E30B7C3B17AD77
FF6D02DBD3E4FE6B38E03E107985C1F6CAD13B85AA559070EA2B163A8732296F
D4B7712232A74D8D94549C575B58ACE4E4FC106C8E7610709EF1071721501442
E775EAFCFC0B7F49D50FF4A071D31FF5EFC016FDEB58282F7DABA5E3E90C5F35
38452E168BC419BA8258D6347E04AB8C10977FE7597030BA17907576E485E10D
2A68D5952714EB6D40FDB3BF52FABF1AD9E67F1FCFE0C84509C585BD1C667404
F54D92137179CCE561AC37279D2289A1589A2C980EC05D67CDA318ADF66E5AC2
80FC72AAB3E6BB0F19AACD06377AEAAFE4FF678CF2B031DF87A3FA4E06CCE842
F5E201F4A708218D8D51629E3BBF1CE7B20B6B05737B222AB27331075EE5E2F9
6E0735F7749F1D85C9AD401C2D2DBCE206FD10341979856CFA23292A7B3E421C
0035FED2FED74F9EC80640585EF304BC8B9E0C6D9BA42E3F2F91B7A4066AC49B
31F31411C0B55EC8D18D6B03F63A547DC232A04704368BCEC7599F9BA33DD145
297FB253083E92C09F303CA4E78F2D52ABFEB68F2A9574768A93E89F823CEC86
CD788DECF83758B409E6E7455F1E86FCE8A5EF239EAFCBC81EE11BB2AB01CE43
DA37660B6D846BF28F6706674BA3529572DCD4DB240867529762EB972EA37E29
B3E9F05F6EF0DCECA9DF2D7857A08A6835ED44B1C6BCCBC0D3861B0E2303BA73
6243DA7ABC1D729ACA5B3561EDF96F3C5F7BCB8AC6A13299514DD93688F881C5
C2C06390ABC7421C43F97A114F0EB8AB63FBF9DB172FD943B0B00900905E46BF
EC5B28E218374EA31FFFCEAEB8A6C937EBEB6CF68623F86AF185B21954C4BAA6
DD24983FE1B8B2CA24C0D11267918F0DB2286359CF170AD78579CE9250247227
3132073E5FB1C9ED1E3E2DC514F33AC5F509A17C5CF243B7EB4E63E6990F0CD5
1DCA0E75AE72AAEEBF52B623A3F37FDB1F3B0E0B46D0EF3707C499CABE038898
DFD940DB82744077ED2ADFA37AD9BCDB7FFA6A8429FCCCB2DCBAFFA8DF0565D2
CBD5D1E7FF3FC83E19432B61E18F066DA26365261772AAAE70161A643B65EB7A
4299B444732A4ED4D32E6018A765D56A059B1099D74978E6D0C1A1BABDED3698
A0EA8A1DDBA9107277A105502699AE855C74772A0C060B227A9199B7BE80BA75
F9342A900A2B7E827542E60B7B3133F449BBB9515EF3D5A3DC0BDEFA65330EA9
63B0B0BEE580D517D987066BF8BF9F7F1F1F2C85815406D9761725F46096E491
013CD550546FBE8CCBD97BE760005E87726A4180BED62D0BD69B1715398238BF
F5EBF1E1155D4214385CFEE71FEC9D30023D6C6DB6951EDBFAE1D90E05FDE1FB
B645B2FFD366E4BF3B50B10E119DD793F27AB68115C61139268567A293184F08
D83B2795549DFC5DFD5BDF701185D76441498B9E852DCF8489EF4706C60208C3
E8A5C5AFBA0BD55E215E91CAC2C0A131CA87E4FB6A3A20B708948ACC09283E61
F9128EC1BB8907863370C3BA17C476E24A2003093F8B7695A7070F73EC912E0D
4120159AFA980215CEC9158641D3263F1C108612CEF383E5948A66EB9E47B9D4
8B1D10CE80EE0A6527DDBCB76568A99271ECD0FF430D77702FD25EDDB66670A5
6CDB8060CC3FF295726A01A8864B80B240D40486396074FA8513A30AD01F3C5A
B1D6CACB9DC564F91EC311945FF160983363372D6F0E3980CD9416432275F371
36DA4C0EAB43D5E729514F05F925965CDC1D94D170688D5ED17D5CE2C1C5CB64
52A255F4F50DB8D84B7F53C234C8830C5BD32600A7115C70C23638FB73414B60
AD938F317DBE13C1763B6CEC80EC7EC77B3FDB92E7111228EE622CF3F4697CA4
EF221B62FE2BBC140176117579C4AB7B3143338DE2600BAF59468074985AF0C2
3AAEC5E2351CCFCFEE546F5A9417976FB9D6F73E7F1978CA7F7622AE9F05F0C8
0385C941AA53BDD86969A3A652A943048DB172649A37AEFC244C3066455AD6D2
B569BEF8169B807E28EDE0F0AA6CADE85624A90AD1D094A8E50D17134E84013A
309E1A673BAC22F84AD5B651DAC40051D66170A8051D1067B41DDC8FB55D9D4C
A48C960BA243DD1E59B2E3DDDB563F40FFDD5F2340CCCE1329422C7EFB190B0F
4F22DDD604F68AD6F1460B2EBEA95C09E3FAFFD7055F966B7455F4429A035B04
B6089568522743F3DA448C81ACAD8241F8150433F187F5018696CBFBAC50D87E
84A96A4A17F0E59ABDEB1E06E24D13EEC4D3E13B49398CA339BC341C57A7A4A1
CEEFB1BEE8405F10E0DDE3545E367496A77701A86212D3B4CFB35E9F0D6E2803
9ACE02FD9DE476EE71CE1970CBDD925C2F7D8FEC4DF77B2926D01333AE57AE8B
271426EE17C4971F52AAFF846FFEE93AC62869C713C62BD3D10737C06E603E2F
E8D1B5F451138A089D1A96D9442DB8CF1BC33CEA39A4263CB6174EB94C9DBC44
6660E1CDDAC07E05F6AB7BFBC776A049528BB20D8B0877B8401724F5B566A5FF
0A1BDFC7ED1E60EA52A0F995D446AF101741347010BB5407D56E88E85B56CD5A
53C1267EC41E29691DEB722C2D7D64C0F74F34604BDACF42EEDFDA965E1C4389
71294462FA62A0832D98EFB8D6DEA88291E08107B8E1CDE119031A4424DDE7CF
7C9DCDA4EF416D4553EC998AB3F459702534D9298E9A2843E00A68EC9E366716
06333F1B66EC915D44E94669321DAD220E94F4299546702E8B71A4E9C6D57C23
53EC60A649FC5DCC0814CBC5A10C4D6A33F05E893D10C20896106AD269CFBBE0
FE72CAB5297F92CC840EC8F69064FDB777CAB434A1D81875BC777C91452FAF8E
93DB96D1881911A5AD026D669D12B9B75B0C071A281EDECDB17E1A242ABCC6CF
C9A34DDD816BE070923961EF693A3E1E31BB121857B5F135EEFE869D4AACA0B6
B6756999B570430E1434CB25B42AEE827502F2A342F1952D6DEAE7CBEB838303
E9B9E7ACBEF28599A8710C4A9BF66B0FE1034B446930CDF3FD8D748B1206DDF5
7891AB7FDC56B7A9745A1DEAFF5895A7A356207DA3A88D91C7F53A8326028052
2C98AF9618F19DB14383B09F08C218223CF5451B9DF3BE2409E35ACF083A33F8
DDE6F26EB74CD0C57F6F303C16A8605F4A9C1AE1AF1F926798AD8341B4CD1E84
30F7C72FADE2674F22EFDF00F933491321F553480D4BDABB2D16F2502F8DF9A8
808D3217606D68D70B993DDE951C631ADA781529C1B6DE1FFDAFAFF0A1CD236D
B4C44FDBBB0BF8FD315EF66A270460E5AFE7FE6C4CFFC2D31D9C479649A34DF2
C38F33F69FCC1A7D947C997F494C529BF725967A4169B286ADD88ADF3B5D15E5
2D61FAC095D0BA2AA42453D318976861EF238A28E63FCDF1791D720134492BA9
080D56FBFA8C353DCAAA63C95247A2779B81BA447B5AEF5EF854CBA89AD55C64
BD1FCDAA6575ED4F1D085E03C963116DC5A24EE0D10D1DFDCC76FB4BEEBC5024
9EAC89123B6785F343170372437FA7DABA07C4A9B13007CDC90C821649746F52
BA35F7251E36C2580BFFA6DB40369DCB15A5543A52EDF10F6809B4F16B092D00
5DEDC0F54F3C9E1C5B4A34357A02BDCEE2B107B30515DB7AD88E8F67A40D6E75
69561294D0A0A204BD09C7D6E9D0AA05BFFD09E142DD84703A6407C8C28AD2F8
5BBB1CD9FDA006B232EC69E9C7AA73BDC50FADAA700955E194FE1FD2555D20DC
6EF3ADC2F6292573AFB10B1E6B7124BE5F6B33DA83E42D41AB8056C050655FE0
F8F577DB5F9B3B13958030DC1DC11C03E334F4327C94A27A3567BF68A0ADC2CD
B17A246FE7AD06BDC9C28F9DDF43CFC9C0B88D4FBA8E2CB5478E77E35972A4AE
607B1D50AF011AD7B0102F7FA803058FEDE9AA448A31F694E573A1C5770080C9
77CCB9E793D56D0AF81EF9C88CC8C0E3CAAB4B03CFF98921375E800055BF4D12
3F8E0E81E94E526A0825A5AA5294464B495437228EB55EFBAE047C46264E8B6F
8FAC4F640272320141DD4523B0CFB614AE939E4176D75DFE7E71CC228C2A15E4
73151130785B7DF60C5092C1D11C74143EF580ECB095986DB25551C1999E3A66
D0EA94ECFA14C64B91CF5558FC0B34E1305374CAC3DCFFFD801FAA21EECE146F
594C0C84D6603EEB350434301E91A5D442E786DF30FA8768316353F53B1F25EA
3AFBE08F4521D9A9D6A38F09FBFE618F22AAC48D82ADC0BD8DE6A96B658D9386
3D7FF0D3BC818F83500CB7A230577331DEF6D45E29A8B06F4C1BB5DC96DDB9AE
4D66F954B684E21224082991354CCE7C802B10B40B2DE5579D91B58795F69BC9
D351B26F8B4460DE1984B4FEBDB330A5A9642746FCA67C8F45171886BB7A21C2
B1AAF786A4F391BDA5D3683F7768F802200F1B2B52EDE33943017C2DCAF41916
A77B08AA4D4F1E56DE5F4D4B70A6FC83E9ED43EECA5D7DF5B76911D4F5F1FA7A
5E7F5F22F56B24D58DD7D436CF1A2B2679A47A2A91E038C34552B6F687B55F8E
3E50D42C445691FB84DA77EDD100AE87A094D0E6312E6AF0CE5B6DE02E29000E
FCCA877B2154D2CB5542155347A8DFEADF76082E61406F15A696173CC401DEB0
D485863196E4E0B42B5BC595D2C37C66E1824CD5E6CED4DA55152917FC23D8B1
CBAB75AAF047BB532160040F252D995201619ED662F8DF55A403A10CD02EF63E
63C9508108839CA13AA3AC39DCF047D345968C6D841A57BD5260B034BD00101E
5582315A927285DAA7BE2029097DA04FD0DA75B615D4292066F9FF4E1860F6B5
B8901BE47978D6AAB749A53299A17EC6821E2114ACF0F14AC78C1557285088E2
921E08BCE35F52DB8B10542610816CA3EDF461037C1F6DC24B8A14C65834C848
448C37FD5219979F0E106F42FF0F75341B726F02F3FB1E51C56170AC5EE8C2E8
5DBA701FC1DCD143C1A56068784C5C6D4EF4028249FFE6A30B729D3A9A1ABBEB
687A76C516FD83E7432E30C8477D636F386EA5DE8CBF9314B4675F30B23B052A
EFC5978F0AE90E059076DFBBFA5C1B9B30F727ECFDA82F074D96060CD105488B
ECBB6F0A98C6F61C9F1ECB7944CF241DB615D912BDCEBD945B95ECF2B947776A
9E9B5D253E115FC1DF20B7A019D9731C488C53A390E21411B46B8D993DE834C0
3F648B906B19EF813FF90B12EAFE2A56DE26839926C27F0534F250120F0D1035
5183143C0C597B6653A60F714A41B6A8277C4F67F3D05FD72665871E424FAAEB
9EC3787605451EEB9BD6104D0D1FE2E6FCA3382F4ED03CB1A865BB6E0D231FD6
80BE16EADDECBA1C3F6927EA6D5CD0D76AFCEA5C281DB1AE9F99BA2243DD3FF6
C4E1A1578484D008BD697115AC340D6DF90492D9B44A3829B7850C41BFC2E5F4
85DBB6D5A876EF87E6E26B055CDEA0EA087D9FE9760D56937B12E57ED94BE7FD
704A1DC41C2540A3951704536F971A706849B104348B8C08B8C5764A6B52EEDE
9422C494930EF3B1710062F50796CBE349EE223752F9C4C5D2E969146208C1F2
55063D1057864F56B494A1F62E86FF56BEAE44F56D3D9EED91692DB039B4EBBB
6711B86AD44F5C1EC38C30FCC35CF721869089605E481E62F1D157A4819C54A4
323D01F1382DBCE8C7248A4D0BA8E46490FE3592B59272A19D33D54052FFA1A6
63AF28CE646195421F855CDF0153A2FEA1D8E8CD06F2245EFC1B14219C7ADD37
CFE2DAB54B4F0263B9B4E40E0FE39A7BB509E84B6521ECFC9F485D6344D42F8B
0E398FAA0EB8CB07151A5D32D0902FA0B52E5DD324F17DAB2CDD6130577A1307
C74FA809797543F984DE5BD3B5680703F46C4D2E5C39B050834BAA7530DCB598
A73ADF0C1648EDC6619F25C87A3B35ED1AE70B46E4E07209EFD139B20AD78DD4
5C4F7872D70E47C570921893AD6716B553179771DD2260DDE8450708F631D290
4B9A79FC841B8F1CEC6B11D97DD57C1981F318D4E1D64BDB9393E412B972FC64
17263C54AF82FE9ED0F80D378B34D5B725834A6A9A27F1D93249C0B81F074E88
76083C5930BAC76A334C06C1904D74F707CC4D0782FB22B5BEC612F0F59EA1B6
08DEE83CB7171EEEC0850B866C306FE10AB5CAB7E3415C7B91AFE78754DD9D45
E14A45F02D7B79170E86A5E0F368F57FA4662159626B2D30D541C5D8A293C77D
56BBB010AA06F619BBD00E5E36B2DC58B366CBA5D4551DC6A7247212399DEEC3
6F77431D5A3BE628E68E4C0545B2108CE14626070552FD556146D173B13E1680
C20BE18CEBB913CAA910E139DB61B6AB336FA22796E2F6F93EB41531590FC295
A13503B9BB656D39357ACBDF3B4CE36B7F03A00E31CFCB01C27A21914691BF30
6450EDFA34766B4EA5DBC3253B7A85BA5C54F93A53C8514DED1344091100923B
236138BA02B4F26423C7F3690D05B2422CF5070226EA96559A474AEE1B14EFAA
7787E278D69DC39A9FFCCFA18732F110EDB07147D87DFBF78FC5429CFB7F10BE
E4A433E45F65EF4D225AD31DC2C7EB7CEA39682CC604E0CA00C2BE9DC19E3323
422B2C9FF44826EF9BA69BC9943A963ACC1430713BAACB330669F1C1DE79E53F
0BBC1F641FFF5D890B37F8F9479DFD487D80E95B963FF4429B6A9BDE6D2B7B21
7345F9FCEC7C1DDDC4ED28F02766691B494567765D627F90DAB4235587EB93E2
9C04FA1916C04B4C09A2CA080C97DCDCF97EF9DCE5989EC51E25119AD592E250
944959FB764544EF9FB9037E7CD308527E05F040CCE64F13CCB62492CCDE4700
D4418804AEC893DEBE8CA491B34F96A8C0AA08FC5273BB75287260DAEDFFC57B
6584937684F40CE1469FE40E653D1B04485DFBC11E18068DA083DE02E52850BB
0AC8054601C8415512EB79A50B9DBABD080304B5E31973D15D748049B1401F16
F0258EC789661F3EA472226BA63DCE02BC956D93700A94399AC0477DA4392547
2C84D2459E0FF9EB1089055DBA008F45D0E81B0533CCB83C7662E62EF8272728
FB2C17304B6FC7119B2E6C0D73FA6E1262D1F2144572B591FAD07545C967E590
CFD432348A17ED84AED10FEDAC0D90F8A3025D0BF21567BA5D5AF229C341674E
4BA5DE6FA9FD459EFCC4D2169E8900CF9084BB277B980D3B2904BBB2305C2920
E3BCCEF840D1EDDE0ABF36AF59ABED30797FD8674DEB288B519CCD723A182463
428E3709F14277655FA84EBB19E3ACD6E6AD9BFBEE4C3C2FAD30A6AF33F87914
2976252A84D7455EE818D99FB625B7EF763F4CD7D853739DD1BE6E46DADADC85
7E2976763DCDAA8A808E18810ACC4F7E0C9D8307B776DD2E15CC07FF2605CB31
48C6A3EEC5F631244E8B94BDA6799AD89164F9072D2C310B6711A82461F9E32B
BF9783B3CE6F566E5415C9E0804C47E8DC51138FD94336439015B6F68048BAB7
5CC64814F8EA1B85F5B4F69C7009B810B6BA6250D8D6823DB9DF4F89211AE452
FBFB794BDB9393E41BFBDB546C28A95C1260C7222B2C89C5B45785B2B6A41DB6
235336F14AAB2B43EFA9911E8A4325C4D57F8D70C2EEF1B4436A7FE7540867C8
31A2A199C38F24667A0A214CF361B43F94F74D261C2072F2068484FFC835E1A4
0DF30AE85391A10F5CF06639CFC0C66BE98E4ED170705F2772A265278287D58F
F3D54BE2B18A97368487CEC8299DD26EB5AC4C442DA056070FEFB2A9F5E8E233
13C65A4F6D5EE1F6C10434E2928F713C61F0DB0B24EEE541E1653609D5CA7966
A9EDA3EFB2C6A6B6CFC6D2A1C2CC7D2B6646BE46FDBA6EDB255566C9343E9DDB
40FC6183376B6ED1B416E6ABAE7CF8A220B2F8C5B85F14F3C4CFF7EE9CBC902C
B363FA2680C0A018E4259179944418C571D1CD37F2EA64D39579CD82A4C6AC39
D8E2512188D959687B9F6D514F257A73A890EFAB90C358218CFA0E66965A51AB
F78EAC4B57D08B8351145C1F95B018382926B990D0B145D9E505DE974994B468
675F3D1898195833385B15873F1D75A2EFB41FB9A2B501
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY6
%!PS-AdobeFont-1.1: CMSY6 1.0
%%CreationDate: 1991 Aug 15 07:21:34
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-4 -948 1329 786}readonly def
/UniqueID 5000816 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D5FC1B2109839E5B52DFB7605D7BA557CC35D6
49F6EB651B83771034BA0C39DB8D426A24543EF4529E2D939125B5157482688E
9045C2242F4AFA4C489D975C029177CD6497EACD181FF151A45F521A4C4043C2
1F3E76EF5B3291A941583E27DFC68B9211105827590393ABFB8AA4D1623D1761
6AC0DF1D3154B0277BE821712BE7B33385E7A4105E8F3370F981B8FE9E3CF3E0
007B8C9F2D934F24D591C330487DDF179CECEC5258C47E4B32538F948AB00673
F9D549C971B0822056B339600FC1E3A5E51844CC8A75B857F15E7276260ED115
C5FD550F53CE5583743B50B0F9B7C4F836DEF1B263DB260571DCE3DFEC496E93
CB244233CFEA2E409A3227DD6B8EF28C584BF5F8A73121AE5CCAFFCF6078A966
37B9B0652615E48DFFABBF73B171E62D5051B3C47DA3D9DB7F7CFB47F389F936
F4795679B18383769E826CA2BAD0A6D1F3F72805D21D0FC0B0C112B6D28D1756
8CE6A9C1FD9A0A6BFB82C8BE0CDC8FD2D65C735032363D79F1255B2C687E45C6
CFD8B461EF1A56DD91384259223E107038BAB2C521CDA286C71A2BC99C602970
9006B3A803AEF3EA78A4765DEE06C8305A2BE876244E8F908D9391A8C69238FF
941D59EBBFC1DFA15BABFD590B6B121B28C60A7E6942F0B19936AB78BC5BC0C4
4DDE6A2B2315EE7934C2459535D1BE5E35EDA524C01A711165E7D7E5E1BF3F7E
A73B302C689D9369E3EC2BA7696A56098C36949B1F13D6324EFD4E740194BE88
719D9D6FE5059205DE65E32E28F37585A5727262494F404C73074A0B29907B69
EC6FA392D68161AA42356B368B61448CF3FF3BBCCFB9D2FE9CB64F3228FC2713
9408C861B4B2DCD733FBAA6A0C7AC733387D7C2B6FA8D3301A0010A2F3C18DD9
4871FBE1CA81688BACC0763B6A8EFF3D71AC00092CD360DD63DD2CADD9538AB6
45EC836895A0DBE0FF36008B9C3818CBB0F9DCA647B34A42CC6DCD31CC06EB19
5D8764410A160F7E87FD60E059F9BDFDD0C2DDBDB259D3EEBC63BAE5546F368C
17F79E22A333A2A3F6801944BBA0EA9C607D68EDDE7F58D1170A3D13EFAC1760
DAB59293D618B10DB226F20E5687264B0F6E7E27B0ABACE8D9FDB150245D5F4A
5043E1E8576615BD1AB71A11BA8EC9F12052142CC339EBCFC798303AC09C0BA2
A1FFF030E2FFC9C9932EB557C613203D9B7A677923757B6475D8F0E5755AF1F5
534EE0C552C504720F31FFB5C6025FFAD1C1BF7B423118951BA310B67F0693C8
4B5A3A0C3257FFCAB8046CF64CECA74602D181C236AF7EE66F5837A25F67DAE4
547C89DE221A12A93EED20AA4038072DBA91F147E07048598887F87035B09ECC
09530F552E57AC5282A47A18A448968997F0757E07B0830914B488F7DD26358F
D27689658E0D516E9FC1DF8DFA9B9488EE8D71B3E3BC19F5A7F96E3B34A10AB5
BBB18EA981FF0F4AB5DE5C922539909EFE62892BC552FB6C35C163E97B991EA9
EF959007AABAC6128CDC61C3CA5E92C181DC561FDA0F5CA836B1E7B30BFF9B9E
BCDF16132948A5899FDAC22AB8B4A486331E7A187BE450E3C000F796A2D49308
8BBE3E02240979F2A7D1E910DA2201C96A7215BABDBE8B5866AF76D6C96022FC
96A02FA92DE7E6AAA8451074A8AB2035B488F5BAB1F23D0709B819AAE240539F
864B78494378CDEC55C427C92FAC84FB40A5EF5F25CB9F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI9
%!PS-AdobeFont-1.1: CMMI9 1.100
%%CreationDate: 1996 Jul 23 07:53:55
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-29 -250 1075 750}readonly def
/UniqueID 5087384 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D6F5CA5FED4F9AC9ADE41E04F9FC52E758C9F45A92BED935
86F9CFDB57732045913A6422AD4206418610C81D882EE493DE9523CC1BFE1505
DD1390B19BC1947A01B93BC668BE9B2A0E69A968554239B88C00AF9FBDF09CCD
67D3B2094C11A04762FE8CC1E91D020A28B3C122D24BEAACF82313F4604F2FEF
6E176D730A879BE45DD0D4996EF0247AEB1CA0AB08FF374D99F06D47B36F9554
FAD9A2D3CE451B7791C3709D8A1DDDEFBD840C1B42AB824D5A0DFF0E0F15B0B7
22AEEB877FF489581DA6FA8DA64944555101EB16F7AB0B717E148B7B98D8DBFD
730C52937E226545CF8DC3E07C5BA30739BAFCD0F2B44275A6D503F582C0FB4F
449963D0AD2FAFDE33BA3D77BCA9D1DF878DDAFCA2E22CC4BACD542B282164C7
97C2BDE318AF9D501CA21F6E662E7AAB75A5F24D2C182E598D175D44E88AB19A
E7CD59584F95B389183EE21B525BF52A3F23C0FE5383A5565A19361D716F508C
AAB78411CA5A4D27552CC1C435760D5A89D535B71C593E755C616661363308DA
A683F54ED0C23FB2C225A008392B0B719F66F11A946A090B7C00B662A3C69599
B4ECB0CC70C85C4BBBF207E0026F6C7A19F2ACFB7A60804FC98A4BFFD7BFFF2B
9529E6D9D4238002BBC255BC62959D6F3381FE06E0621B879D5FE5B541D45A1E
759A6E7DC32B1D1632368D09A97039DF255B6492B1B2B7E2C1434E8306ECA7D3
5A79B6D614B4979F10988BC76ED53A5F45315CD7DA216221F842FD0F3E050DD2
BAC23C984D506D8F7D614BCB6B244F5F41321549BB0BD041FBF3053307168680
3435E9C947D51BD2FC5D2F7C1CE8C4F19D4900CBA9A185A10C902746D8FA1E56
385CDE16AA76BFAE3EF4A9C9C5F1663478F7C3D1F8779B353FED99A8D930F00B
013DC52A641775B4877EC840A9C957317A172B8334C1A8D967144712D05EE3F0
9A03280A02CC41EF4D7CF382DF9BF0A33986C38BFE0C2F329DBAE9D6D3E81241
F14D16F15C67CCCA1CE7BEC4274F05FC12744070ADF5156180722887BB2ADEBE
FC60FF5CCA9EDC5F777E6BF5F3C2622DE66251CF6CBA9051FA93E296F0E924C2
9C9BC8BBA28202B9ABC0ABE06B4CF5308162464ED70F561ACCCA0890041CCBD2
C1122AE064F5685C6984A384116331EE3571258E1DA1C37217D61BD01A7C416F
61B407C8A741015981050DBBB58EE3DFCDCB1F79F61D4AA9CC843CC5C4DA4BC1
7B1352B2EF97C9B164E4D29E1AE64477AC40D22F7EC706B0AF5CD246DAB5300A
CF39EF78A3A96CC2A807CF70AD878EA84247522ABDAEDCA2369D1850A7A79A85
A15A9AEB31D4FA904AAD8C305A175A1242A0214C2B07D27FF6C9830F5FC9001E
24C4D65A9E6AD1C879445487408D26A88EA537DA85843F5C64E3AA2616549C53
35012DEAEAEC1F0B035A71039F67051D5F289E380A14693AF04629CA5744C1E1
515B55738CCED0E0C559728EF1FEE5AC155A3B157D299A5306D45067996E1018
2499D004BEC48FF282EABE9F503F4152008254C37DAD2BDFBD21DABFE3E018B5
B3025393737A29C91595FB133D810D28BB7F9EF3931835CCE8343BD4F43C1FE6
899BE13D08CF20EA8F6EEBB829F85DA00D58F826F1DA4E7E3C7F512055B4A610
BDD245FA6A0ED46C7C365CA6A60ECF4E06C8D4D483FFBA7E84D1A78A52B0A133
EF51785BE455D193D4E308CB5B27A1D5C60102D3BA744DBF70E7284429AFC7E8
0EF42FB52A3AAFA18E3C29C34E56879102613C036C0AF665DFBC24F5B33620F0
F94ECE02DFAE4FB0C6FB60A743DF4ED63738BB7ACFB434105614B6BC9D04E185
F436400626C08830E4FAA02AE0A128538CC594213495DC1A63AFF20E450959C7
4BA40C4F3F6CC8C9F4810A07A7BC9C066139CBCD45B4E51D9B60A22087BA13E9
C32894B140F42BEE752AD45213696CB3D2948C9E1EDCF9073A48EA118BF5A90F
65D15D72E90A910FFBEFA6C93FFCFAA1B8E079112329123D348FC44B55342D10
CBD3886E83CD46081897D525F7DA30AC610FA1E9BC7785416CC2985469B895C7
B5DDD9A4A993FA325AA4F2DB60894741AC38FF61A3EC784D0102E9B11ADA9D39
2C1C09FF6C460CCC177459DB5028B8B056FC9DF48C73A3FD144188C33456F7E9
B443AEA32C4EEF43FF86B7E3F9134C4B88C0517EA00209D4554EB2F4B6CFF013
41E0E19ABA83E4D9416A9D7D6C19FD5A46E08BCCCF03B3588D1797571EACC314
34A183390356C7D6CDA793AB1993271B6A231915E7F4900B476002FDF387E0D5
93CE6946CA86ADA75DB1C4CD1C8B340677FE95571662E9317CC5A171EA8474F4
4165BD3EBCFF95BEC67683408F4B09C5DFC1E1859F7DE59CD6F3F6742C68F011
5C1A23728BF9B6414499AEF08D72325748B610DF7AE3078CB6623546AF0B32FA
D703E3CC51C7F300461876321762AA0A4E26A82ED69834EAD45E7FF86ECFE436
9ECF9CF3CE983ECF035B74B0DC3BB9A911449D7228B69CFA267AB1A01701FF3A
16914B73636D37B7708B4C932F5F88ABF08D549769AEF2780FBE3DA07D69DE4C
118CA66D75D95CF5D0D73DF6519AED644B89670B637937F587D33CC6641839F0
BAAEC1EE433990128C02370C156410478FBBDB7F3705D91535246202D53276C7
AD8675E48301BEA72EC7153ADB35FA087FE887280D4F361EA594DA8CC18CB8D2
440C192A327BE7059EE42398C86D60E476D56E64C5600377EC6A41B8F8BAF0A7
E1510FB590ECB12D99672F215A8DAECD7816F4E48A505856196A01BA974776B9
E07CECE9268AF535566AC2982CC5F7FF303AE4248B8FFBF06CC1152116E9062B
B9B76E5686845813E3EEE23B3EB2FFBA2C959BA07B81EA4DC394D05834EFEB65
E6F6BE598ED8D988661A7870D3A02227E686231622D89756A6D07EF21232F1AE
C57414FA7CA4B4B613AFBC756817D29B6772CEBB7D753D61025A31695C46D79F
F5FFD04B308B45B29C60FCEADDA3379E829122574D72979CC75585CDAC4C7B5F
29A966EA7B50269EAF52203CBFBE6024E688C8C59660900592852C9219D0DB30
7488E6F76FC4432B3A7E03AFEE35D3276B036195F8E185676BA47A3E1339C6F2
E818C6534CA1CCADCEC7404D805363481E39672D46AEB574064E09C838BF9962
936D5A56B3E19E5382EB9F8C4BA1AA441854FABE3E8A01E6829A399040F60FB5
9EC2529F76EDCCC887293FAD7D08AF79D1DD428DF5885C24F5FE8E09621D1A32
DB0E2122EE4D63FCF4DE220796A48B925646E225E9CB23DB5707124332F5DCD4
06D1FFCF0E6E217BF8AC21124B65C2F9B2206DD9CBC44269FD2BA4035C1F3867
79431637EFFAD3A3E20C11B7CD747D329C7274B3A509A67230F14116F95DD7B7
353F8B0A3F95AA3550CA1155E8E99C0358BAC6DD957FC5B15FBB6BDBA504865E
CD3B1314AE9EF1B758374DC9246E7688B71DBA22E3A42D2C926A1FF3A6A625B8
54781FA2625A01154A9080
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY8
%!PS-AdobeFont-1.1: CMSY8 1.0
%%CreationDate: 1991 Aug 15 07:22:10
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-30 -955 1185 779}readonly def
/UniqueID 5000818 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D5FC1B2109839E5B52DFBB2A7C1B5D8E7E8AA0
5B10EA43D6A8ED61AF5B23D49920D8F79DAB6A59062134D84AC0100187A6CD1F
80F5DDD9D222ACB1C23326A7656A635C4A241CCD32CBFDF8363206B8AA36E107
1477F5496111E055C7491002AFF272E46ECC46422F0380D093284870022523FB
DA1716CC4F2E2CCAD5F173FCBE6EDDB874AD255CD5E5C0F86214393FCB5F5C20
9C3C2BB5886E36FC3CCC21483C3AC193485A46E9D22BD7201894E4D45ADD9BF1
CC5CF6A5010B5654AC0BE0DA903DB563B13840BA3015F72E51E3BC80156388BA
F83C7D393392BCBC227771CDCB976E93302535C253C2A7A0D2A39F364428A2F6
E75C522DE9BD9FCEBF8A3D7AA7EDCF2D33E5E2B729A5AE31A8350AC9F4CA242E
24656631E9CA27BF190E622EF8CE29CE720E65B3662C3DDD71A5CB2268420079
46F92040E11D802FC98D4AC45E02FB2483A044D8EDF06415E181F2C212A5CA23
D5696A0595976B1AD58CDB116B80C93ACF76A3236DC501D8B93F4C9FA0682984
64221F1AA09485D4FB6C7F6C1CB6F0FE532B85ED677267FA57B5051DE6AC336B
9DF914C3F3AF8A157873F7D8D2763F1850B1D3F91D670C87C63058D059A0DB61
10CD2489CEE01A6D7351A0491FA2859D37B0262415460F88E2B1FD06E2D3FDA2
A5008150C06242639033FC466CA06559412CCDDC7C29AAA2C39B89B69F3F69E7
F6754CF07586B15F5BB77950155DD800CC2E6FD89D584DDE366CDE3852811187
062128427C7B59AC390256E75DB2839FAAA2C2BFB4839AAF20772F62FD031B81
0DA62CC3EF4CE53F5A1A041E6E52C3DF8114FE8098FA81688AF5B8E67FA45284
6A825DF64E800AB52A0E53DC4898CB65ED1F0E581736D0523039C95DDD15D217
0332751CDB8B1D50CEDCE4707FD6416C922CC6CFB67419496FB9F27A8DFEFAFC
128E701270DDE1EB338F69EF383F3D9021F0492A7D446291F0C2F7E09C5D3B1C
A637001282B6A336093E837284A450912FF64DEAFFA3C0A044C4A48CE96A3BE7
ACBAF4E7DFE1A31E20CE4D269C6F994E0D96C2E36076E79F1AD28768E461F609
5F99BFDB6D2548FFAB5E2550DC4D93EF9C196A7DEE357B7FA58B3CFC12C17230
03799F8E1D9001D68190BB4F39DD76D3E84CBCEE03E59A8B50F560A0615AC611
912FC7DF5E17C981DD6A67E57FFB545A22ABF313ADDB8419EDFBDB5E64F0B5F4
EEC705FDFCA3D2AD02EAA76BEFA161B23C9938AF039C677C0D5AB805AF7302D4
AAC26EB25D6F67051101F47CA3A71BCC15E7B7C0FF3D99E0E900C07BA9F73BF6
1E036BB59EDBEA6D6534A8B0B70163F6863E6D2F58597BAF0B8436ABF95F9548
BAA40698054263A3FE51EA63F50E6A45009E9334052898792E25ADCE5C2F0916
A8BCE29635909AE0B96A4FD0D7013A4C7E42BA1D1D5865B3F43A010E00DA54D4
8F600AF4A7F318705CB57A7E4A00BFECD9A97A7098080BCF5AD7E289C127E5DF
271C97BA501E33B652BEB0FDCC3B4F540A02FFB0C0EF9A1D5D3E16F6C0F5843A
F654931385447AFB0F873739AB54A81FCB71E1331045E34EC3D2BC05C520D4D1
84B1A60DB8D35FFBD7424DC0544A2AD0D82141D848D0A8005FA7A9DECDA103A4
967F6C4E6743206C7658DC4D6A6D2CCDD5A0100E69EF818BE7A7B06153D14058
0B047A09DEAF8E730BAFB20AE2E16E2CD2628606ED1C2926A738C68045DCFD1D
5ACE322ECAE3166119FBFAB553451C0FA1BF98CF5CB2F8FA8D847439BC65FB3D
84FB6D28208664607CA2C8AA91E5AC32E5E38947A36F5FB94B01D9A19BA3CEF4
B320E0F0226E7B6025B39545EB8269C900925EC0EC585EA82E02B5B262FA2490
3E15A87C868E92D83F31588280B6704F74FC57D43B03813A4C3A26F3299D131C
1C96E149651B368E150DDAFC4E59A806CDB9831141FB0B4B4F8972EE99AED133
94CE28C2B0BA6F2525E4CF9AAF326696FDC618701A07D5A0E5143D03323466B0
A3C1B87374B0AC2A103F16ADEBDB829E2F4BB8288C69325CFB37B8D2E45F0480
3E40FE82E8C6B0A30C570015B77B83189BB684151679A432E2E167F4E27B7E87
8A46C19969230B9604ADE2E6487203D0DF06DF8F5E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 8000 8000 (paper_TR.dvi)
@start /Fa 166[448 1[585 448 1[379 345 413 1[345 448
448 1[379 2[206 448 448 1[379 448 1[413 448 65[{
 TeXBase1Encoding ReEncodeFont }17 619.897 /Times-Roman
rf /Fb 199[470 5[470 50[{ TeXf7b6d320Encoding ReEncodeFont }2
885.568 /CMR8 rf /Fc 201[0 3[523 46[407 3[{
 TeXbbad153fEncoding ReEncodeFont }3 553.48 /CMSY5 rf
/Fd 236[754 754 18[{}2 996.264 /TeX-cmex9 rf /Fe 194[796
12[512 4[796 1[398 398 30[796 740 8[{ TeXf7b6d320Encoding ReEncodeFont }
7 996.264 /CMR9 rf /Ff 255[796{ TeXbbad153fEncoding ReEncodeFont }1
996.264 /CMSY9 rf /Fg 146[726 2[340 296 105[{
 TeXaae443f0Encoding ReEncodeFont }3 664.176 /CMMI6 rf
/Fh 206[406 5[621 1[320 320 40[{ TeXf7b6d320Encoding ReEncodeFont }4
664.176 /CMR6 rf /Fi 137[458 545 2[425 28[637 85[{
 TeXaae443f0Encoding ReEncodeFont }4 885.568 /CMMI8 rf
/Fj 194[569 11[377 377 4[569 1[300 300 40[{
 TeX0ef0afcaEncoding ReEncodeFont }6 553.48 /CMR5 rf
/Fk 137[400 8[680 1[420 326 295 18[458 14[589 59[506
11[{ TeXaae443f0Encoding ReEncodeFont }8 553.48 /CMMI5
rf /Fl 199[501 1[0 3[597 1[255 32[454 11[454 2[692{
 TeXbbad153fEncoding ReEncodeFont }7 774.872 /CMSY7 rf
/Fm 142[1107 1107 21[615 1[1599 3[922 922 523 1[1168
80[{}8 1106.96 /CMEX10 rf /Fn 134[393 1[591 1[443 246
344 344 1[443 443 443 639 246 393 1[246 443 443 246 393
443 393 443 443 9[738 2[492 443 541 1[541 639 591 738
2[393 295 639 639 541 541 639 591 541 541 6[295 443 443
1[443 443 1[443 443 443 443 1[221 295 5[295 39[{
 TeXBase1Encoding ReEncodeFont }51 885.568 /Times-Italic
rf /Fo 134[449 2[443 523 2[411 3[547 786 280 471 366
313 2[432 1[461 396 10[726 1[523 603 7[844 607 1[490
1[725 689 561 1[724 2[666 3[454 1[263 263 39[422 5[502
575 11[{ TeXaae443f0Encoding ReEncodeFont }30 774.872
/CMMI7 rf /Fp 194[680 3[441 1[441 1[441 441 441 441 441
441 4[680 1[346 346 2[727 37[{ TeXf7b6d320Encoding ReEncodeFont }13
774.872 /CMR7 rf /Fq 145[553 3[307 430 430 553 553 10[738
20[796 10[553 2[615 1[0 3[738 8[1107 7[1107 11[861 861
1[861 861 15[307 861{ TeXbbad153fEncoding ReEncodeFont }20
1106.96 /CMSY10 rf /Fr 198[332 332 332 332 332 332 332
332 332 49[{ TeXBase1Encoding ReEncodeFont }9 664.176
/Times-Roman rf /Fs 133[344 387 1[559 387 387 215 301
258 1[387 387 387 603 215 387 1[215 387 387 258 344 387
344 387 344 7[559 559 2[559 473 431 517 3[559 689 473
559 4[431 473 559 517 517 559 7[387 387 387 387 387 387
387 387 387 2[194 258 194 2[258 258 40[{ TeXBase1Encoding ReEncodeFont }
53 774.872 /Times-Roman rf /Ft 140[437 3[553 615 1[307
2[307 1[553 3[492 4[553 32[861 2[307 553 553 553 553
553 553 553 553 553 553 4[861 1[430 430 2[922 26[799
861 799 6[922 1[{ TeXf7b6d320Encoding ReEncodeFont }28
1106.96 /CMR10 rf /Fu 133[515 543 633 1[537 634 1[519
499 3[664 972 1[576 456 381 2[542 515 576 479 10[917
1045 646 756 2[841 1[711 844 1[1074 753 1[614 2[870 712
817 916 791 840 830 2[861 553 861 307 307 27[660 4[631
6[520 4[573 626 708 11[{ TeXaae443f0Encoding ReEncodeFont }44
1106.96 /CMMI10 rf /Fv 133[381 381 381 120[{
 TeXbbad153fEncoding ReEncodeFont }3 664.176 /CMSY6 rf
/Fw 107[615 615 24[431 491 1[738 491 553 308 431 431
1[553 553 553 799 308 491 308 308 553 553 308 491 553
491 553 553 9[922 1[799 615 553 676 1[676 799 738 922
615 738 1[369 2[676 676 799 738 676 676 6[369 7[553 553
2[277 369 277 2[369 369 36[553 553 2[{ TeXBase1Encoding ReEncodeFont }
54 1106.96 /Times-Italic rf /Fx 104[1107 28[491 553 553
799 553 615 369 431 491 1[615 553 615 922 308 2[308 615
553 369 491 615 491 615 553 12[738 615 3[861 1[1045 738
2[431 7[799 6[369 12[369 277 44[{ TeXBase1Encoding ReEncodeFont }34
1106.96 /Times-Bold rf /Fy 75[369 11[369 16[1107 553
1[491 491 24[491 553 553 799 553 553 308 431 369 553
553 553 553 861 308 553 308 308 553 553 369 491 553 491
553 491 3[369 1[369 1[799 799 1045 799 799 676 615 738
1[615 799 799 984 676 799 431 369 799 799 615 676 799
738 738 799 5[308 308 553 553 553 553 553 553 553 553
553 553 308 277 369 277 2[369 369 369 1[922 33[615 615
2[{ TeXBase1Encoding ReEncodeFont }80 1106.96 /Times-Roman
rf /Fz 75[295 11[295 16[886 443 1[393 393 24[393 443
443 639 443 443 246 344 295 443 443 443 443 689 246 443
246 246 443 443 295 393 443 393 443 393 3[295 1[295 541
639 639 836 639 639 541 492 591 1[492 639 639 787 541
639 344 295 639 639 492 541 639 591 591 639 6[246 443
443 443 443 443 443 443 443 443 443 246 221 295 221 2[295
295 295 3[443 31[492 492 2[{ TeXBase1Encoding ReEncodeFont }80
885.568 /Times-Roman rf /FA 134[504 580 12[533 7[443
31[731 775 768 2[796 2[284 59[{ TeXaae443f0Encoding ReEncodeFont }9
996.264 /CMMI9 rf /FB 104[996 2[498 498 24[442 498 498
719 498 554 332 388 442 554 554 498 554 830 277 554 1[277
554 498 332 442 554 442 554 498 9[996 1[719 665 6[940
665 775 1[388 775 1[609 2[719 3[498 3[332 332 7[498 498
2[249 332 249 2[332 332 37[554 2[{ TeXBase1Encoding ReEncodeFont }49
996.264 /Times-Bold rf /FC 134[442 3[554 277 388 388
1[498 498 554 775 277 2[277 2[332 442 498 442 498 498
31[665 19[332 45[{ TeXBase1Encoding ReEncodeFont }19
996.264 /Times-BoldItalic rf /FD 137[731 731 731 731
731 2[731 731 731 731 731 1[731 1[731 1[731 731 731 731
731 32[731 17[731 46[{ TeXBase1Encoding ReEncodeFont }19
1217.66 /Courier rf /FE 133[418 418 418 69[627 25[732
24[{ TeXbbad153fEncoding ReEncodeFont }5 885.568 /CMSY8
rf /FF 172[677 3[879 879 1[744 879 1[405 1[879 4[812
879 65[{ TeXBase1Encoding ReEncodeFont }9 1217.66 /Times-Roman
rf /FG 165[595 3[703 703 595 542 650 2[703 703 866 595
703 1[324 1[703 1[595 703 2[703 65[{ TeXBase1Encoding ReEncodeFont }16
974.123 /Times-Roman rf /FH 136[1359 941 941 523 732
627 2[941 941 1464 523 941 1[523 1[941 627 836 941 836
941 836 13[1046 2[1046 1[1359 1[1150 5[1046 1[1359 22[627
45[{ TeXBase1Encoding ReEncodeFont }26 1881.83 /Times-Roman
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop -392 169 a FH(Distrib)-38 b(uted)658
b(Placement)f(of)i(Service)e(F)-28 b(acilities)658 b(in)g(Lar)-34
b(ge-Scale)656 b(Netw)-19 b(orks)3031 3656 y FF(N)60
b FG(I)g(K)31 b(O)60 b(L)g(A)6 b(O)60 b(S)368 b FF(L)60
b FG(A)6 b(O)60 b(U)g(T)-30 b(A)60 b(R)g(I)g(S)14921
3216 y FE(yz)17174 3656 y FF(G)g FG(E)g(O)g(R)g(G)g(I)g(O)g(S)367
b FF(S)60 b FG(M)g(A)g(R)g(A)21 b(G)60 b(D)21 b(A)60
b(K)g(I)g(S)30889 3216 y FE(z)32725 3656 y FF(K)27 b
FG(O)60 b(N)g(S)g(T)-30 b(A)60 b(N)g(T)g(I)g(N)g(O)g(S)369
b FF(O)60 b FG(I)g(K)31 b(O)60 b(N)g(O)g(M)g(O)g(U)48094
3216 y FE(x)3563 5139 y FD(nlaout@cs.bu.edu)2421 b(gsmaragd@cs.bu.edu)
5047 b(okon@ionio.gr)13901 8122 y FF(I)60 b FG(O)27 b(A)60
b(N)g(N)g(I)g(S)368 b FF(S)60 b FG(T)-30 b(A)-72 b(V)60
b(R)g(A)g(K)g(A)g(K)g(I)g(S)26093 7683 y FE(y)28337 8122
y FF(A)g FG(Z)g(E)g(R)366 b FF(B)60 b FG(E)g(S)g(T)-30
b(A)-72 b(V)60 b(R)21 b(O)60 b(S)37696 7683 y FE(z)13646
9606 y FD(istavrak@di.uoa.gr)1321 b(best@cs.bu.edu)-1453
13951 y FC(Abstract)s FB(\227)165 b(The)482 b(effecti)-10
b(v)g(eness)481 b(of)h(ser)-10 b(vice)482 b(pr)-18 b(o)-10
b(visioning)482 b(in)g(lar)-10 b(ge-)-2560 15058 y(scale)382
b(netw)-10 b(orks)383 b(is)e(highly)i(dependent)f(on)g(the)g(number)h
(and)f(location)-2560 16165 y(of)626 b(ser)-10 b(vice)628
b(facilities)e(deploy)-10 b(ed)627 b(at)g(v)-10 b(arious)627
b(hosts.)e(The)h(classical,)-2560 17272 y(centralized)519
b(appr)-18 b(oach)520 b(to)e(determining)g(the)h(latter)f(w)-10
b(ould)519 b(amount)-2560 18379 y(to)469 b(f)-25 b(ormulating)468
b(and)h(solving)g(the)f FC(uncapacitated)j FA(k)29 b
FC(-median)469 b FB(\(UKM\))-2560 19486 y(pr)-18 b(oblem)461
b(\(if)f(the)g(r)-18 b(equested)461 b(number)g(of)g(facilities)f(is)g
(\002xed\),)g(or)h(the)-2560 20593 y FC(uncapacitated)589
b(facility)f(location)h FB(\(UFL\))d(pr)-18 b(oblem)589
b(\(if)e(the)h(number)-2560 21700 y(of)511 b(facilities)f(is)g(also)g
(to)h(be)g(optimized\).)g(Clearly)-55 b(,)512 b(such)e(centralized)
-2560 22807 y(appr)-18 b(oaches)326 b(r)-18 b(equir)g(e)326
b(kno)-10 b(wledge)326 b(of)f(global)h(topological)f(and)g(demand)-2560
23914 y(inf)-25 b(ormation,)286 b(and)h(thus)e(do)i(not)f(scale)h(and)f
(ar)-18 b(e)287 b(not)f(practical)i(f)-25 b(or)286 b(lar)-10
b(ge)-2560 25021 y(netw)g(orks.)450 b(The)g(k)-10 b(ey)450
b(question)f(posed)h(and)f(answer)-18 b(ed)451 b(in)f(this)f(paper)
-2560 26128 y(is)460 b(the)g(f)-25 b(ollo)-10 b(wing:)460
b(\223Ho)-10 b(w)461 b(can)g(we)g(determine)g(in)f(a)h(distrib)-20
b(uted)459 b(and)-2560 27235 y(scalable)431 b(manner)f(the)h
FC(number)f FB(and)g FC(location)h FB(of)f(ser)-10 b(vice)431
b(facilities?\224)-2560 28342 y(W)-65 b(e)634 b(pr)-18
b(opose)633 b(an)g(inno)-10 b(v)g(ati)g(v)g(e)633 b(appr)-18
b(oach)634 b(in)f(which)g(topology)g(and)-2560 29449
y(demand)258 b(inf)-25 b(ormation)257 b(is)h(limited)f(to)h
(neighborhoods,)g(or)g(balls)f(of)h(small)-2560 30556
y(radius)337 b(ar)-18 b(ound)337 b(selected)g(facilities,)g(wher)-18
b(eas)338 b(demand)f(inf)-25 b(ormation)337 b(is)-2560
31663 y(captur)-18 b(ed)534 b(implicitly)g(f)-25 b(or)534
b(the)f(r)-18 b(emaining)534 b(\(r)-18 b(emote\))534
b(clients)g(outside)-2560 32770 y(these)351 b(neighborhoods,)h(by)f
(mapping)h(them)f(to)g(clients)g(on)h(the)f(edge)h(of)-2560
33877 y(the)279 b(neighborhood;)h(the)f(ball)g(radius)g(r)-18
b(egulates)280 b(the)f(trade-off)g(between)-2560 34984
y(scalability)406 b(and)h(perf)-25 b(ormance.)408 b(W)-65
b(e)408 b(de)-15 b(v)-10 b(elop)407 b(a)g(scalable,)g(distrib)-20
b(uted)-2560 36090 y(appr)i(oach)330 b(that)f(answers)g(our)h(k)-10
b(ey)329 b(question)g(thr)-18 b(ough)330 b(an)f(iterati)-10
b(v)g(e)330 b(r)-18 b(e-)-2560 37197 y(optimization)400
b(of)f(the)h(location)g(and)g(the)f(number)i(of)e(facilities)h(within)
-2560 38304 y(such)289 b(balls.)g(W)-65 b(e)290 b(sho)-10
b(w)289 b(that)g(e)-15 b(v)-10 b(en)290 b(f)-25 b(or)289
b(small)g(v)-10 b(alues)289 b(of)g(the)h(radius)f(\(1)g(or)-2560
39411 y(2\),)279 b(our)g(distrib)-20 b(uted)279 b(appr)-18
b(oach)279 b(achie)-15 b(v)-10 b(es)280 b(perf)-25 b(ormance)281
b(under)e(v)-10 b(arious)-2560 40518 y(synthetic)348
b(and)g(r)-18 b(eal)349 b(Inter)-15 b(net)348 b(topologies)h(that)f(is)
f(comparable)j(to)e(that)-2560 41625 y(of)467 b(optimal,)h(centralized)
h(appr)-18 b(oaches)468 b(r)-18 b(equiring)468 b(full)g(topology)f(and)
-2560 42732 y(demand)374 b(inf)-25 b(ormation.)7069 45293
y Fy(I)56 b(.)607 b(I)56 b Fz(N)g(T)g(R)19 b(O)56 b(D)g(U)g(C)e(T)i(I)g
(O)g(N)-2560 47313 y Fx(Moti)-11 b(v)g(ation:)837 b Fy(Imagine)g(a)g
(lar)-20 b(ge-scale)837 b(bandwidth/processing-)-2560
48642 y(intensi)-28 b(v)-17 b(e)340 b(service)e(such)h(as)f(the)h
(real-time)e(distrib)-22 b(ution)338 b(of)g(softw)-11
b(are)-2560 49970 y(updates)384 b(and)g(patches,)f(or)g(of)f(virus)g
(de\002nition)j(\002les)d([1],)g Fw(etc.)g Fy(Such)-2560
51298 y(services)432 b(must)g(cope)i(with)e(the)h(typically)g
Fw(voluminous)h Fy(and)f Fw(b)-22 b(ur)-11 b(sty)-2560
52627 y Fy(demand)537 b(\227)d(both)i(in)f(terms)f(of)g(o)-17
b(v)g(erall)536 b(load)g(and)g(geographical)-2560 53955
y(distrib)-22 b(ution)629 b(of)g(the)g(sources)h(of)f(demand)i(\227)e
(due)h(to)f(recently)-2560 55283 y(observ)-17 b(ed)556
b(\003ash-cro)-28 b(wd)556 b(phenomena.)i(T)-89 b(o)555
b(deplo)-11 b(y)556 b(such)f(services,)-2560 56612 y(decisions)444
b(must)f(be)g(made)i(on:)e(\(1\))g(the)g(location,)i(and)f(optionally)
-72 b(,)-2560 57940 y(\(2\))462 b(the)h(number)i(of)d(nodes)i(\(or)e
(hosting)i(infrastructures\))e(used)h(to)-2560 59268
y(deli)-28 b(v)-17 b(er)485 b(the)e(service.)h(T)-89
b(w)-11 b(o)484 b(well-kno)-28 b(wn)486 b(formulations)d(of)g(classic)
-2560 60597 y Fw(F)-83 b(acility)513 b(Location)i(Theory)f
Fy([2])e(can)i(be)g(used)f(as)g(starting)f(points)-3309
62821 y Fv(y)-2563 63134 y Fz(Dept)311 b(of)f(Informatics)g(and)g(T)-62
b(elecommunications,)311 b(Uni)-22 b(v)-13 b(ersity)310
b(of)g(Athens,)h(Greece.)-3309 63917 y Fv(z)-2563 64229
y Fz(Computer)f(Science)h(Dept,)g(Boston)e(Uni)-22 b(v)-13
b(ersity)-58 b(,)311 b(Boston,)f(Massachusetts,)k(USA.)-3309
65013 y Fv(x)-2563 65325 y Fz(Dept)d(of)f(Informatics,)g(Ionian)g(Uni)
-22 b(v)-13 b(ersity)-58 b(,)311 b(Corfu,)e(Greece.)-2614
66421 y(N.)253 b(Laoutaris)f(is)g(supported)f(by)g(a)g(Marie)h(Curie)g
(Outgoing)f(International)g(Fello)-22 b(wship)-2560 67417
y(of)249 b(the)h(EU)h(MOIF-CT)-81 b(-2005-007230.)248
b(I.)i(Sta)-18 b(vrakakis)251 b(and)e(K.)i(Oik)-9 b(onomou)249
b(are)h(sup-)-2560 68414 y(ported)325 b(in)g(part)g(by)g(the)g(project)
g(Autonomic)g(Netw)-9 b(ork)326 b(Architecture)g(\(AN)-31
b(A,)327 b(#IST)-81 b(-)-2560 69410 y(27489\),)290 b(which)h(is)h
(funded)e(by)g(IST)i(FET)f(Program)g(of)f(the)h(European)g(Commission.)
-2560 70406 y(A.)306 b(Besta)-18 b(vros)306 b(is)g(supported)e(in)i
(part)f(by)f(NSF)j(CNS)e(Cybertrust)g(A)-81 b(w)-9 b(ard)306
b(#0524477,)-2560 71403 y(CNS)258 b(NeTS)g(A)-81 b(w)-9
b(ard)258 b(#0520166,)f(CNS)g(ITR)h(A)-81 b(w)-9 b(ard)258
b(#0205294,)e(and)h(EIA)h(RI)f(A)-81 b(w)-9 b(ard)-2560
72399 y(0202067.)26664 13951 y Fy(for)429 b(addressing)j(decisions)f
(\(1\))e(and)j(\(2\),)d(respecti)-28 b(v)-17 b(ely:)432
b(The)g Fw(unca-)26664 15280 y(pacitated)471 b Fu(k)35
b Fw(-median)470 b(\(UKM\))f Fy(problem)h(prescribes)f(the)h(locations)
26664 16608 y(for)443 b(instantiating)h(a)g(\002x)-17
b(ed)446 b(number)f(of)f(service)g(f)-11 b(acilities)443
b(so)g(as)h(to)26664 17936 y(minimize)461 b(the)g(distance)g(between)i
(users)d(and)h(the)g(closest)f(f)-11 b(acility)26664
19265 y(capable)348 b(of)d(deli)-28 b(v)-17 b(ering)348
b(the)e(service.)f(In)h(the)g Fw(uncapacitated)j(facility)26664
20593 y(location)378 b(\(UFL\))e Fy(problem,)i(the)f(number)h(of)f(f)
-11 b(acilities)375 b(is)h(not)h(\002x)-17 b(ed,)26664
21921 y(b)-22 b(ut)273 b Fw(jointly)f Fy(deri)-28 b(v)-17
b(ed)275 b(along)f(with)f(the)g(locations)g(as)f(part)h(of)g(a)f
(solution)26664 23250 y(that)324 b(minimizes)h(the)g(combined)i
(service)e(hosting)g(and)g(access)g(costs.)26664 24578
y Fx(Limitations)347 b(of)g(existing)g(appr)-20 b(oaches:)335
b Fy(Ev)-17 b(en)333 b(though)h(it)c(pro)-17 b(vides)26664
25906 y(a)362 b(solid)g(basis)g(for)g(analyzing)j(the)e(fundamental)i
(issues)c(in)-44 b(v)-22 b(olv)-17 b(ed)365 b(in)26664
27235 y(the)490 b(deplo)-11 b(yment)492 b(of)e(netw)-11
b(ork)491 b(services,)e(f)-11 b(acility)490 b(location)h(theory)26664
28563 y(is)549 b(not)i(without)g(its)e(limitations.)h(First)f(and)j
(foremost,)e(proposed)26664 29892 y(solutions)427 b(for)f(UKM)i(and)g
(UFL)g(are)f(centralized,)i(so)e(the)-17 b(y)428 b(require)26664
31220 y(the)272 b(g)-6 b(athering)274 b(and)f(the)f(transmission)g(of)f
(the)i(entire)f(topological)i(and)26664 32548 y(demand)420
b(information)f(to)f(a)g(central)h(point,)f(which)h(is)e(not)i
(possible)26664 33877 y(\(not)509 b(to)g(mention)h(practical\))g(for)e
(lar)-20 b(ge)510 b(netw)-11 b(orks.)510 b(Second,)h(such)26664
35205 y(solutions)392 b(are)g(not)h(adapti)-28 b(v)-17
b(e)394 b(in)e(the)h(sense)f(that)h(the)-17 b(y)393 b(do)g(not)f(allo)
-28 b(w)26664 36533 y(for)284 b(easy)i(recon\002guration)i(in)d
(response)h(to)f(changes)i(in)e(the)h(topology)26664
37862 y(and)392 b(the)g(intensity)g(of)g(the)g(demand)i(for)d(service.)
h(T)-89 b(o)392 b(address)g(these)26664 39190 y(limitations)313
b(we)h(propose)h(distrib)-22 b(uted)313 b(v)-17 b(ersions)314
b(of)g(UKM)g(and)g(UFL,)26664 40518 y(which)416 b(we)f(use)h(as)f
(means)h(of)e(constructing)j(an)f(automatic)g(service)26664
41847 y(deplo)-11 b(yment)390 b(scheme.)26664 43175 y
Fx(A)678 b(scalable)h(appr)-20 b(oach)682 b(to)c(automatic)i(ser)-11
b(vice)680 b(deployment:)26664 44503 y Fy(W)-89 b(e)670
b(de)-28 b(v)-17 b(elop)673 b(a)d(scheme)h(in)e(which)i(an)g(initial)e
(set)g(of)g(service)26664 45832 y(f)-11 b(acilities)315
b(are)h(allo)-28 b(wed)318 b(to)e(migrate)g(adapti)-28
b(v)-17 b(ely)319 b(to)d(the)h(best)f(netw)-11 b(ork)26664
47160 y(locations,)529 b(and)h(optionally)h(to)e(increase/decrease)j
(in)d(number)h(so)26664 48488 y(as)462 b(to)h(best)g(service)g(the)g
(current)h(demand.)h(Our)d(scheme)j(is)d(based)26664
49817 y(on)416 b(de)-28 b(v)-17 b(eloping)419 b(distrib)-22
b(uted)415 b(v)-17 b(ersions)416 b(of)g(the)g(UKM)f(problem)i(\(for)
26664 51145 y(the)442 b(case)h(in)f(which)h(the)g(total)f(number)h(of)f
(f)-11 b(acilities)441 b(must)h(remain)26664 52474 y(\002x)-17
b(ed\))510 b(and)g(the)f(UFL)g(problem)h(\(when)f(additional)h(f)-11
b(acilities)508 b(can)26664 53802 y(be)563 b(acquired)i(at)e(a)h(price)
f(or)g(some)h(of)e(them)i(be)g(closed)g(do)-28 b(wn\).)26664
55130 y(Both)280 b(problems)g(are)g(combined)i(under)e(a)g(common)h
(frame)-28 b(w)-11 b(ork)281 b(with)26664 56459 y(the)445
b(follo)-28 b(wing)447 b(characteristics:)e(An)h(e)-17
b(xisting)446 b(f)-11 b(acility)445 b(g)-6 b(athers)446
b(the)26664 57787 y(topology)395 b(of)e(its)g(immediate)h(surrounding)h
(area,)f(which)h(is)d(de\002ned)26664 59115 y(by)316
b(an)g Fu(r)31 b Fw(-ball)317 b Fy(of)e(neighbors)j(\226)d(nodes)i
(that)f(are)g(within)g(a)f Fw(r)-17 b(adius)316 b Fy(of)g
Fu(r)26664 60444 y Fy(hops)395 b(from)f(the)h(f)-11 b(acility)-72
b(.)393 b(The)j(f)-11 b(acility)394 b(also)g(monitors)h(the)f(demand)
26664 61772 y(that)i(it)g(recei)-28 b(v)-17 b(es)398
b(from)e(the)h(nodes)h(that)f(ha)-22 b(v)-17 b(e)398
b(it)e(as)g(closest)g(f)-11 b(acility)-72 b(.)26664 63100
y(It)371 b(k)-11 b(eeps)374 b(an)f(e)-17 b(xact)374 b(representation)g
(of)f(demand)h(from)f(within)f(its)f Fu(r)31 b Fy(-)26664
64429 y(ball,)452 b(and)i(an)f(approximate)i(representation)f(for)e
(all)g(the)h(nodes)h(on)26664 65757 y(the)530 b Fw(ring)g
Fy(of)g(its)f Fu(r)31 b Fy(-ball)530 b(\(nodes)g(outside)h(the)g
Fu(r)31 b Fy(-ball)529 b(that)i(recei)-28 b(v)-17 b(e)26664
67085 y(service)469 b(from)e(it\).)g(In)h(the)h(latter)f(case,)g(the)h
(demand)i(of)d(nodes)h(on)26664 68414 y(the)349 b Fw(\223skin\224)h
Fy(of)f(the)g Fu(r)31 b Fy(-ball)349 b(is)f(increased)j(proportionally)
g(to)d(account)26664 69742 y(for)331 b(the)h(aggre)-17
b(g)-6 b(ate)334 b(demand)g(that)e(\003o)-28 b(ws)332
b(in)g(from)f(outside)h(the)g Fu(r)31 b Fy(-ball)26664
71070 y(through)426 b(that)g(node.)g(When)h(multiple)e
Fu(r)31 b Fy(-balls)425 b(intersect,)g(the)-17 b(y)427
b(join)26664 72399 y(to)c(form)h(more)g(comple)-17 b(x)426
b Fu(r)31 b Fw(-shapes)p Fy(.)424 b(The)h(observ)-17
b(ed)426 b(topology)g(and)p eop end
%%Page: 2 2
TeXDict begin 2 1 bop -2560 -672 a Fy(demand)507 b(information)f(is)e
(then)i(used)g(to)f(re-optimize)h(the)f(current)-2560
657 y(location)461 b(\(and)g(optionally)h(the)e(number)i(of\))e(f)-11
b(acilities)459 b(by)h(solving)-2560 1985 y(the)328 b(UKM)g(\(or)f(the)
h(UFL\))g(problem)g(in)g(the)g(vicinity)g(of)f(the)h
Fu(r)31 b Fy(-shape.)-2560 3324 y Fx(The)301 b(trade-off)g(between)h
(scalability)e(and)h(perf)-28 b(ormance:)296 b Fy(Reduc-)-2560
4653 y(ing)356 b(the)h(radius)f Fu(r)387 b Fy(decreases)357
b(the)g(amount)g(of)f(topological)i(informa-)-2560 5981
y(tion)407 b(that)f(needs)i(to)f(be)g(g)-6 b(athered)409
b(and)f(processed)g(centrally)f(at)f(an)-17 b(y)-2560
7310 y(point)321 b(\(i.e.,)e(at)h(f)-11 b(acilities)319
b(that)h(re-optimize)h(their)f(positions\).)f(This)h(is)-2560
8638 y(a)332 b(plus)f(for)g(scalability)-72 b(.)331 b(On)h(the)g(other)
g(hand,)h(reducing)g Fu(r)362 b Fy(harms)332 b(the)-2560
9966 y(o)-17 b(v)g(erall)373 b(performance)h(as)d(compared)j(to)d
(centralized)i(solutions)f(that)-2560 11295 y(consider)487
b(the)f(entire)f(topological)j(information.)e(This)f(is)g(a)h(minus)
-2560 12623 y(for)580 b(performance.)j(W)-89 b(e)582
b(e)-17 b(xamine)584 b(this)c(trade-of)-28 b(f)581 b(e)-17
b(xperimentally)-2560 13951 y(using)334 b(synthetic)h(\(Erd)6562
13945 y(\250)6470 13951 y(os-R)8622 13945 y(\264)8561
13951 y(en)-17 b(yi)335 b([3])e(and)i(Barab)17043 13945
y(\264)16982 13951 y(asi-Albert)g([4]\))e(and)-2560 15280
y(real)525 b(\(AS-le)-28 b(v)-17 b(el)526 b([5)q(]\))e(topologies.)i(W)
-89 b(e)526 b(sho)-28 b(w)526 b(that)f(e)-28 b(v)-17
b(en)527 b(for)e(v)-17 b(ery)-2560 16608 y(small)355
b(radii,)f Fw(e)-17 b(.g)g(.)p Fy(,)356 b Fu(r)339 b
Ft(=)307 b(1)356 b Fy(\()p Fw(i.e)-17 b(.)p Fy(,)354
b(f)-11 b(acility)355 b(migration)h(is)e(allo)-28 b(wed)357
b(only)-2560 17936 y(to)519 b(\002rst-hop)h(neighbors\),)g(or)f
Fu(r)583 b Ft(=)551 b(2)520 b Fy(\()p Fw(i.e)-17 b(.)p
Fy(,)518 b(f)-11 b(acility)519 b(migration)h(is)-2560
19265 y(allo)-28 b(wed)314 b(only)g(up)f(to)g(second-hop)j
(neighbors\),)d(the)g(performance)i(of)-2560 20593 y(the)401
b(distrib)-22 b(uted)400 b(approach)k(tracks)c(closely)h(that)g(of)f
(the)h(centralized)-2560 21921 y(one.)293 b(Thus,)f(increasing)i
Fu(r)323 b Fy(much)293 b(more)g(is)e(not)i(necessary)g(for)f(perfor)-22
b(-)-2560 23250 y(mance,)409 b(and)g(might)f(also)g(be)h(infeasible)f
(since)g(e)-28 b(v)-17 b(en)410 b(for)e(relati)-28 b(v)-17
b(ely)-2560 24578 y(small)276 b Fu(r)31 b Fy(,)276 b(the)i(number)g(of)
e(nodes)i(contained)i(in)c(an)i Fu(r)31 b Fy(-shape)277
b(increases)-2560 25906 y(v)-17 b(ery)379 b(f)-11 b(ast)377
b(\(o)-28 b(wing)379 b(to)f(the)g(small,)f(typically)i
Fu(O)31 b Ft(\(log)202 b Fu(n)p Ft(\))p Fy(,)378 b(diameter)h(of)-2560
27235 y(most)387 b(netw)-11 b(orks,)389 b(including)g(the)f
(aforementioned)j(ones\).)-2560 28574 y Fx(A)632 b(case)g(study)h(\227)
e(lar)-11 b(ge-scale)634 b(timely)e(distrib)-22 b(ution)632
b(of)g(cus-)-2560 29903 y(tomized)637 b(softwar)-20 b(e:)577
b Fy(Consider)g(a)g(lar)-20 b(ge)578 b(scale)f(softw)-11
b(are)576 b(update)-2560 31231 y(system,)283 b(similar)f(to)h(that)h
(used)g(for)e Fw(Micr)-50 b(osoft)284 b(W)-61 b(indows)284
b(Update)h Fy([6].)-2560 32559 y(Such)e(a)f(system)g(not)g(only)h(deli)
-28 b(v)-17 b(ers)283 b(terabytes)f(of)g(data)g(to)g(millions)f(of)
-2560 33888 y(users,)271 b(b)-22 b(ut)273 b(also)f(it)g(has)g(to)g
(incorporate)i(comple)-17 b(x)275 b(decision)f(processes)-2560
35216 y(for)479 b(customizing)j(the)e(deli)-28 b(v)-17
b(ered)482 b(updates)g(to)e(the)g(peculiarities)g(of)-2560
36544 y(dif)-28 b(ferent)502 b(clients)g([1])f(with)h(respect)g(to)g
(localization,)h(pre)-28 b(viously-)-2560 37873 y(installed)555
b(updates,)i(compatibilities,)e(and)h(optional)h(components,)-2560
39201 y(among)346 b(others.)d(This)h(comple)-17 b(x)346
b(process)f(goes)f(be)-17 b(yond)347 b(the)e(dissem-)-2560
40529 y(ination)351 b(of)f(a)h(single)f(lar)-20 b(ge)351
b(\002le,)g(where)g(a)g(peer)-22 b(-to-peer)351 b(approach)i(is)-2560
41858 y(an)360 b(ob)-17 b(vious)361 b(solution)f([7].)e(Moreo)-17
b(v)g(er)-44 b(,)361 b(it)d(is)g(unlik)-11 b(ely)361
b(that)e(softw)-11 b(are)-2560 43186 y(pro)-17 b(viders)315
b(will)e(be)i(willing)e(to)h(trust)f(intermediaries)i(with)e(such)i
(pro-)-2560 44515 y(cesses.)385 b(Rather)-44 b(,)385
b(we)h(belie)-28 b(v)-17 b(e)387 b(that)e(such)h(applications)g(are)g
(lik)-11 b(ely)385 b(to)-2560 45843 y(rely)283 b(on)h(dedicated)i(or)d
(virtual)g(hosts,)f Fw(e)-17 b(.g)g(.)p Fy(,)284 b(serv)-17
b(ers)283 b(of)-28 b(fered)284 b(for)f(lease)-2560 47171
y(through)360 b(third-party)e(o)-17 b(v)g(erlay)360 b(netw)-11
b(orks)359 b(\226)g Fw(a)f(la)g Fy(Akamai)i(or)e(Planet)-2560
48500 y(Lab)-44 b(.)475 b(T)-89 b(o)476 b(that)g(end,)f(we)h(belie)-28
b(v)-17 b(e)477 b(that)e(the)h(use)f(of)g(our)g(distrib)-22
b(uted)-2560 49828 y(f)-11 b(acility)526 b(location)h(approach)i
(presents)d(signi\002cant)i(adv)-28 b(antages)529 b(in)-2560
51156 y(terms)366 b(of)g(optimizing)h(the)g(cost)f(and)h(ef)-28
b(\002cienc)-17 b(y)370 b(of)c(deplo)-11 b(ying)368 b(such)-2560
52485 y(applications.)3065 52083 y Fs(1)4193 52485 y
Fy(In)412 b(the)h(remainder)h(of)f(this)e(section,)i(we)g(pro)-17
b(vide)415 b(a)-2560 53813 y(mapping)261 b(from)d(the)h(aforementioned)
j(softw)-11 b(are)259 b(distrib)-22 b(ution)258 b(service)-2560
55141 y(to)388 b(our)g(abstract)g(UKM)g(and)g(UFL)h(problems.)-2560
56481 y Fx(Ser)-11 b(vice)797 b(pr)-20 b(o)-11 b(viders,)798
b(hosts,)c(and)i(clients:)713 b Fy(W)-89 b(e)714 b(en)-44
b(vision)714 b(the)-2560 57809 y(a)-22 b(v)-28 b(ailability)580
b(of)e(a)h(set)f(of)h(netw)-11 b(ork)579 b(hosts)g(upon)h(which)g
(speci\002c)-2560 59137 y(functionalities)468 b(may)g(be)g(installed)f
(and)h(instantiated)g(on)g(demand.)-2560 60466 y(W)-89
b(e)494 b(use)g(the)f(term)g(\223Generic)i(Service)g(Host\224)f
(\(GSH\))f(to)g(refer)g(to)-2560 61794 y(the)581 b(softw)-11
b(are)581 b(and)h(hardw)-11 b(are)583 b(infrastructure)e(necessary)h
(to)f(host)-2560 63123 y(a)487 b(service.)g(F)-17 b(or)488
b(instance,)g(a)f(GSH)h(could)g(be)g(a)f(well-pro)-17
b(visioned)-2560 64451 y(Linux)414 b(serv)-17 b(er)-44
b(,)414 b(or)f(a)g(virtual)h(machine)h(\(VM\))e(slice)g(similar)f(to)h
(that)-2560 65779 y(used)388 b(in)g(Planet)h(Lab)g([8])e(or)g(that)h
(en)-44 b(visioned)390 b(in)d(GENI)h([9].)-1453 67119
y(A)440 b(GSH)h(may)h(be)f(in)g(W)-89 b(orking)442 b(\(W\))d(or)h
(Stand-By)j(\(SB\))d(mode.)-1674 69097 y Fr(1)-1121 69410
y Fz(It)212 b(is)h(important)g(to)f(note)g(that)h(the)f(lar)-16
b(ge-scale)214 b(timely)f(distrib)-18 b(ution)213 b(of)f(customized)
-2560 70406 y(content)286 b(is)h(hardly)e(unique)g(to)h(the)g
(dissemination)h(of)f(softw)-9 b(are)287 b(updates,)g(as)f(it)h(could)
-2560 71403 y(be)398 b(equally)g(instrumental)h(for)e(\223V)-53
b(irtual)399 b(Product)f(Placement\224)h(in)f(li)-22
b(v)-13 b(e)398 b(content)g(as)-2560 72399 y(well)311
b(as)f(in)g(video-on-demand)f(services,)j(to)e(mention)g(tw)-9
b(o)310 b(e)-13 b(xamples.)26664 -672 y Fy(In)354 b(W)g(mode,)i(the)e
(GSH)h(constitutes)g(a)g(service)g(f)-11 b(acility)354
b(that)g(is)g(able)26664 657 y(to)330 b(respond)i(to)e(client)h
(requests)f(for)g(service,)h(whereas)g(in)g(SB)g(mode,)26664
1985 y(the)537 b(GSH)h(does)f(not)h(of)-28 b(fer)537
b(the)g(actual)h(service,)f(b)-22 b(ut)538 b(is)e(ready)i(to)26664
3313 y(switch)501 b(to)g(W)f(if)g(it)h(is)f(so)g(directed.)41820
2912 y Fs(2)43036 3313 y Fy(Thus)i(the)f(set)g(of)g(f)-11
b(acilities)26664 4642 y(used)464 b(to)g(deli)-28 b(v)-17
b(er)465 b(a)e(service)h(is)f(precisely)h(the)g(set)f(of)h(GSHs)g(in)f
(W)26664 5970 y(mode.)359 b(By)f(switching)h(back)g(and)h(forth)d
(between)j(W)e(mode)h(and)g(SB)26664 7298 y(mode,)372
b(the)f Fw(number)i Fy(as)e(well)g(as)g(the)h Fw(location)g
Fy(of)f(f)-11 b(acilities)370 b(used)i(to)26664 8627
y(deli)-28 b(v)-17 b(er)312 b(the)f(service)g(could)h(be)g(controlled)g
(in)f(a)g(distrib)-22 b(uted)311 b(f)-11 b(ashion.)26664
9955 y(In)379 b(particular)-44 b(,)380 b(a)f(GSH)i(in)e(W)g(mode)i(\()p
Fw(i.e)-17 b(.)p Fy(,)379 b(a)h(f)-11 b(acility\))379
b(monitors)g(the)26664 11284 y(topology)396 b(and)f(the)f
(corresponding)j(demand)f(in)e(its)f(vicinity)i(and)g(is)26664
12612 y(thus)387 b(capable)j(of)e(re-optimizing)h(the)f(location)h(of)e
(the)h(f)-11 b(acility)-72 b(.)27771 13912 y(Third-party)340
b(Autonomous)i(Systems)e(\(AS\))f(may)h(host)g(the)g(GSHs)26664
15241 y(of)537 b(service)h(pro)-17 b(viders,)538 b(possibly)f(for)g(a)h
(fee.)45485 14839 y Fs(3)46736 15241 y Fy(In)f(particular)-44
b(,)537 b(the)26664 16569 y(hosting)549 b(AS)g(may)h(char)-20
b(ge)551 b(the)e(service)h(pro)-17 b(vider)550 b(for)e(the)i(assets)
26664 17897 y(it)610 b(dedicates)j(to)e(the)h(GSHs,)f(including)i(the)e
(softw)-11 b(are/hardw)g(are)26664 19226 y(infrastructure)428
b(supporting)h(the)g(GSHs)f(as)g(well)g(as)g(the)h(bandwidth)26664
20554 y(used)388 b(to)g(carry)g(the)g(traf)-28 b(\002c)388
b(to/from)f(GSHs)h(in)g(W)f(mode.)27771 21855 y(The)610
b(implementation)h(of)f(the)f(abo)-17 b(v)g(e-sk)-11
b(etched)614 b(scenarios)c(re-)26664 23183 y(quires)410
b(each)i(GSH)f(to)f(be)h(able)g(to)f(construct)h(its)e(surrounding)j
(AS-)26664 24511 y(le)-28 b(v)-17 b(el)365 b(topology)g(up)g(to)e(a)h
(radius)g Fu(r)31 b Fy(.)363 b(This)g(can)i(be)f(achie)-28
b(v)-17 b(ed)367 b(through)26664 25840 y(standard)451
b(topology)h(disco)-17 b(v)g(ery)452 b(protocols)f([10)q(].)e(Also,)g
(it)h(requires)26664 27168 y(a)571 b(client)g(to)g(be)g(able)h(to)f
(locate)h(the)f(f)-11 b(acility)570 b(closest)h(to)g(it,)f(and)26664
28496 y(it)517 b(requires)i(a)f(GSH)h(to)f(be)h(able)g(to)f(inform)g
(potential)i(clients)e(of)26664 29825 y(the)383 b(service)h(re)-17
b(g)-6 b(arding)386 b(its)c(W)h(or)g(SB)h(status.)e(Both)j(of)e(these)g
(could)26664 31153 y(be)d(achie)-28 b(v)-17 b(ed)382
b(through)f(standard)g(resource)f(disco)-17 b(v)g(ery)381
b(mechanisms)26664 32481 y(lik)-11 b(e)488 b(DNS)h(re-direction)g([11])
f(\(appropriate)i(for)e(application-le)-28 b(v)-17 b(el)26664
33810 y(realizations)521 b(of)f(our)h(distrib)-22 b(uted)521
b(f)-11 b(acility)520 b(location)i(approach\))h(or)26664
35138 y(proximity-based)331 b(an)-17 b(ycast)332 b(routing)e([12)q(])f
(\(appropriate)i(for)f(netw)-11 b(ork)26664 36466 y(layer)388
b(realizations\).)26664 37767 y Fx(Outline:)346 b Fy(The)h(remainder)h
(of)e(this)f(paper)i(is)f(structured)g(as)g(follo)-28
b(ws.)26664 39095 y(Section)521 b(II)f(pro)-17 b(vides)521
b(a)g(brief)e(background)524 b(on)d(f)-11 b(acility)520
b(location.)26664 40424 y(Section)416 b(III)e(presents)h(our)h(distrib)
-22 b(uted)415 b(f)-11 b(acility)415 b(location)h(approach)26664
41752 y(to)330 b(automatic)j(service)e(deplo)-11 b(yment.)333
b(Section)g(IV)d(e)-17 b(xamines)333 b(analyt-)26664
43080 y(ically)356 b(issues)g(of)g(con)-44 b(v)-17 b(er)d(gence)361
b(and)c(accurac)-17 b(y)360 b(due)d(to)f(approximate)26664
44409 y(representation)383 b(of)e(the)h(demand)h(of)f(nodes)g(outside)g
Fu(r)31 b Fy(-shapes.)382 b(Sec-)26664 45737 y(tion)346
b(V)g(e)-28 b(v)g(aluates)348 b(the)f(performance)h(of)e(our)g(schemes)
h(on)g(synthetic)26664 47065 y(topologies.)593 b(Section)g(VI)f
(presents)g(results)f(on)h(real-w)-11 b(orld)592 b(\(AS-)26664
48394 y(le)-28 b(v)-17 b(el\))388 b(topologies.)g(Section)h(VII)d
(presents)h(pre)-28 b(vious)389 b(related)f(w)-11 b(ork.)26664
49722 y(Section)375 b(VIII)e(concludes)j(the)e(paper)h(with)f(a)g
(summary)h(of)e(\002ndings)26664 51050 y(and)389 b(on-going)g(w)-11
b(ork.)30501 52959 y(I)56 b(I)g(.)607 b(B)22 b Fz(A)f(C)54
b(K)i(G)g(R)19 b(O)56 b(U)g(N)g(D)325 b(O)56 b(N)331
b Fy(F)-17 b Fz(A)21 b(C)54 b(I)i(L)g(I)g(T)g(Y)325 b
Fy(L)56 b Fz(O)g(C)e(A)-43 b(T)56 b(I)g(O)g(N)27771 54608
y Fy(Let)537 b Fu(G)585 b Ft(=)g(\()p Fu(V)61 b(;)184
b(E)64 b Ft(\))539 b Fy(represent)f(a)g(netw)-11 b(ork)538
b(de\002ned)i(by)f(a)e(node)26664 55936 y(set)444 b Fu(V)658
b Ft(=)413 b Fq(f)p Fu(v)32006 56102 y Fp(1)32503 55936
y Fu(;)184 b(v)33531 56102 y Fp(2)34028 55936 y Fu(;)g(:)g(:)g(:)k(;)c
(v)37024 56102 y Fo(n)37627 55936 y Fq(g)445 b Fy(and)g(an)h
(undirected)g(edge)g(set)f Fu(E)64 b Fy(.)444 b(Let)26664
57264 y Fu(d)p Ft(\()p Fu(v)28207 57430 y Fo(i)28575
57264 y Fu(;)184 b(v)29603 57430 y Fo(j)30070 57264 y
Ft(\))404 b Fy(denote)h(the)f(length)h(of)e(a)h(shortest)f(path)h
(between)h Fu(v)52189 57430 y Fo(i)52961 57264 y Fy(and)26664
58593 y Fu(v)27201 58759 y Fo(j)27667 58593 y Fy(,)321
b(and)j Fu(s)p Ft(\()p Fu(v)31672 58759 y Fo(j)32138
58593 y Ft(\))f Fy(the)g(\(user\))e(service)i(demand)i(originating)e
(from)f(node)26664 59921 y Fu(v)27201 60087 y Fo(j)27667
59921 y Fy(.)393 b(Let)i Fu(F)472 b Fq(\265)320 b Fu(V)639
b Fy(denote)396 b(a)e(set)g(of)g(f)-11 b(acility)394
b(nodes)h(\226)f Fw(i.e)-17 b(.)p Fy(,)394 b(nodes)h(on)26664
61249 y(which)473 b(the)f(service)g(is)f(instantiated.)h(If)f(the)h
(number)h(of)f(a)-22 b(v)-28 b(ailable)26664 62578 y(f)-11
b(acilities)329 b Fu(k)343 b Ft(=)307 b Fq(j)p Fu(F)154
b Fq(j)331 b Fy(is)e(gi)-28 b(v)-17 b(en,)333 b(then)e(the)g
(speci\002cation)i(of)d(their)g(e)-17 b(xact)26664 63906
y(locations)477 b(amounts)g(to)f(solving)g(the)h(follo)-28
b(wing)477 b(uncapacitated)i Fu(k)35 b Fy(-)26664 65234
y(median)389 b(problem:)27549 67005 y Fr(2)28103 67318
y Fz(Switching)240 b(to)g(W)f(might)h(in)-35 b(v)-18
b(olv)-13 b(e)239 b(the)h(transfer)g(of)f(e)-13 b(x)g(ecutable)240
b(and)f(con\002guration)26664 68314 y(\002les)311 b(for)e(the)h
(service)h(from)f(other)g(GSHs)h(or)f(from)f(the)h(service)h(pro)-13
b(vider)-49 b(.)27549 69097 y Fr(3)28103 69410 y Fz(Notice)367
b(that)f(each)g(AS)h(\(or)f(a)g(smaller)h(or)-16 b(g)l(anizational)366
b(unit)g(therein\))g(is)g(also)h(a)26664 70406 y(client)c(of)e(the)i
(service,)g(with)g(demand)f(proportional)f(to)h(the)g(aggre)-13
b(g)l(ate)362 b(number)f(of)26664 71403 y(requests)227
b(originating)f(from)g(its)h(end-users)g(\()p Fn(e)-13
b(.g)g(.)p Fz(,)227 b(number)e(of)h(do)-22 b(wnloads)227
b(of)f(a)g(service)26664 72399 y(pack\).)p eop end
%%Page: 3 3
TeXDict begin 3 2 bop -1453 -672 a Fw(De\002nition)389
b(1:)554 b Fy(\(UKM\))526 b(Gi)-28 b(v)-17 b(en)529 b(a)e(node)i(set)d
Fu(V)773 b Fy(with)527 b(pair)-22 b(-wise)-2560 657 y(distance)559
b(function)g Fu(d)f Fy(and)h(service)g(demands)h Fu(s)p
Ft(\()p Fu(v)18834 823 y Fo(j)19300 657 y Ft(\))p Fy(,)e
Fq(8)p Fu(v)21717 823 y Fo(j)22806 657 y Fq(2)623 b Fu(V)246
b Fy(,)-2560 1985 y(select)512 b(up)h(to)g Fu(k)547 b
Fy(nodes)513 b(to)f(act)h(as)f(medians)i(\(f)-11 b(acilities\))510
b(so)i(as)g(to)-2560 3313 y(minimize)388 b(the)h(service)f(cost)g
Fu(C)79 b Ft(\()p Fu(V)61 b(;)184 b(s;)g(k)35 b Ft(\))p
Fy(:)2718 5056 y Fu(C)79 b Ft(\()p Fu(V)61 b(;)184 b(s;)g(k)35
b Ft(\))311 b(=)9281 4004 y Fm(X)8747 6387 y Fl(8)p Fo(v)9691
6498 y Fk(j)10104 6387 y Fl(2)p Fo(V)11599 5056 y Fu(s)p
Ft(\()p Fu(v)13085 5222 y Fo(j)13551 5056 y Ft(\))p Fu(d)p
Ft(\()p Fu(v)15524 5222 y Fo(j)15991 5056 y Fu(;)184
b(m)p Ft(\()p Fu(v)18421 5222 y Fo(j)18889 5056 y Ft(\)\))p
Fu(;)3989 b Fy(\(1\))-2560 8650 y(where)389 b Fu(m)p
Ft(\()p Fu(v)2471 8816 y Fo(j)2937 8650 y Ft(\))308 b
Fq(2)f Fu(F)542 b Fy(is)386 b(the)i(median)i(that)e(is)e(closer)i(to)g
Fu(v)20476 8816 y Fo(j)20942 8650 y Fy(.)-1453 10059
y(On)454 b(the)g(other)g(hand,)h(if)d(instead)i(of)g
Fu(k)35 b Fy(,)453 b(one)h(is)f(gi)-28 b(v)-17 b(en)456
b(the)d(costs)-2560 11387 y Fu(f)119 b Ft(\()p Fu(v)-932
11553 y Fo(j)-465 11387 y Ft(\))514 b Fy(for)g(setting)g(up)h(a)g(f)-11
b(acility)514 b(at)g(node)i Fu(v)16532 11553 y Fo(j)16998
11387 y Fy(,)e(then)i(the)e(speci\002-)-2560 12716 y(cation)421
b(of)e(the)h(f)-11 b(acility)419 b(set)g Fu(F)573 b Fy(amounts)421
b(to)e(solving)h(the)g(follo)-28 b(wing)-2560 14044 y(uncapacitated)391
b(f)-11 b(acility)388 b(location)h(problem:)-1453 15452
y Fw(De\002nition)g(2:)554 b Fy(\(UFL\))597 b(Gi)-28
b(v)-17 b(en)599 b(a)e(node)i(set)e Fu(V)842 b Fy(with)598
b(pair)-22 b(-wise)-2560 16781 y(distance)530 b(function)g
Fu(d)e Fy(and)i(service)g(demands)g Fu(s)p Ft(\()p Fu(v)18658
16947 y Fo(j)19125 16781 y Ft(\))f Fy(and)g(f)-11 b(acility)-2560
18109 y(costs)374 b Fu(f)119 b Ft(\()p Fu(v)1656 18275
y Fo(j)2123 18109 y Ft(\))p Fy(,)374 b Fq(8)p Fu(v)4356
18275 y Fo(j)5130 18109 y Fq(2)307 b Fu(V)246 b Fy(,)374
b(select)h(a)g(set)f(of)h(nodes)h(to)e(act)i(as)e(f)-11
b(acilities)-2560 19438 y(so)472 b(as)g(to)h(minimize)g(the)g(joint)f
(cost)h Fu(C)79 b Ft(\()p Fu(V)61 b(;)184 b(s;)g(f)119
b Ft(\))475 b Fy(of)e(acquiring)h(the)-2560 20766 y(f)-11
b(acilities)387 b(and)h(servicing)h(the)f(demand:)-1301
23271 y Fu(C)79 b Ft(\()p Fu(V)61 b(;)184 b(s;)g(f)119
b Ft(\))311 b(=)5296 22220 y Fm(X)4778 24603 y Fl(8)p
Fo(v)5722 24714 y Fk(j)6135 24603 y Fl(2)p Fo(F)7597
23271 y Fu(f)119 b Ft(\()p Fu(v)9225 23437 y Fo(j)9691
23271 y Ft(\))247 b(+)12009 22220 y Fm(X)11475 24603
y Fl(8)p Fo(v)12419 24714 y Fk(j)12832 24603 y Fl(2)p
Fo(V)14327 23271 y Fu(s)p Ft(\()p Fu(v)15813 23437 y
Fo(j)16279 23271 y Ft(\))p Fu(d)p Ft(\()p Fu(v)18252
23437 y Fo(j)18719 23271 y Fu(;)184 b(m)p Ft(\()p Fu(v)21149
23437 y Fo(j)21617 23271 y Ft(\)\))p Fu(;)1261 b Fy(\(2\))-2560
26066 y(where)389 b Fu(m)p Ft(\()p Fu(v)2471 26232 y
Fo(j)2937 26066 y Ft(\))308 b Fq(2)f Fu(F)542 b Fy(is)386
b(the)i(f)-11 b(acility)388 b(that)g(is)e(closer)i(to)g
Fu(v)20342 26232 y Fo(j)20808 26066 y Fy(.)-1453 27474
y(F)-17 b(or)681 b(general)h(graphs,)f(both)g(UKM)f(and)i(UFL)e(are)h
(NP-hard)-2560 28803 y(problems)521 b([13)q(].)f(A)g(v)-28
b(ariety)522 b(of)f(approximation)i(algorithms)e(ha)-22
b(v)-17 b(e)-2560 30131 y(been)612 b(de)-28 b(v)-17 b(eloped)615
b(under)d(metric)f(distance)h(using)f(a)g(plethora)h(of)-2560
31459 y(techniques,)403 b(including)h(rounding)f(of)e(linear)h
(programs)g([14)q(],)e(local)-2560 32788 y(search)389
b([15],)e([16],)g(and)i(primal-dual)g(methods)f([17)q(].)-1651
35545 y(I)56 b(I)g(I)g(.)605 b(A)332 b(L)56 b Fz(I)g(M)g(I)g(T)g(E)g(D)
326 b Fy(H)56 b Fz(O)g(R)e(I)i(Z)g(O)g(N)327 b Fy(A)56
b Fz(P)g(P)g(R)19 b(O)26 b(A)21 b(C)54 b(H)327 b(T)41
b(O)330 b Fy(D)56 b Fz(I)g(S)g(T)g(R)e(I)i(B)45 b(U)56
b(T)g(E)g(D)6534 36873 y Fy(F)-17 b Fz(A)21 b(C)54 b(I)i(L)g(I)g(T)g(Y)
325 b Fy(L)56 b Fz(O)g(C)e(A)-43 b(T)56 b(I)g(O)g(N)-1453
39031 y Fy(In)561 b(this)g(section)h(we)g(de)-28 b(v)-17
b(elop)564 b(distrib)-22 b(uted)562 b(v)-17 b(ersions)562
b(of)f(UKM)-2560 40360 y(and)491 b(UFL)f(by)h(utilizing)f(a)g(natural)h
(limited)e(horizon)j(approach)g(in)-2560 41688 y(which)338
b(f)-11 b(acilities)335 b(ha)-22 b(v)-17 b(e)339 b(e)-17
b(xact)338 b(kno)-28 b(wledge)340 b(of)c(the)h(topology)i(of)d(their)
-2560 43017 y Fu(r)31 b Fy(-ball)546 b(\(surrounding)i(topology)h(up)e
(to)f Fu(r)31 b Fy(-hop)548 b(neighbors\),)f(e)-17 b(xact)-2560
44345 y(kno)-28 b(wledge)517 b(of)d(the)g(demand)j(of)c(each)j(node)g
(in)d(their)h Fu(r)31 b Fy(-ball)514 b(and)-2560 45673
y(approximate)394 b(kno)-28 b(wledge)394 b(of)e(the)f(aggre)-17
b(g)-6 b(ate)395 b(demand)f(from)d(nodes)-2560 47002
y(on)369 b(the)g(ring)g(surrounding)h(their)e Fu(r)31
b Fy(-ball.)368 b(Our)h(distrib)-22 b(uted)368 b(approach)-2560
48330 y(will)315 b(be)h(based)g(on)h(an)f(iterati)-28
b(v)-17 b(e)316 b(method)h(in)f(which)g(the)g(location)h(and)-2560
49658 y(the)324 b(number)h(of)f(f)-11 b(acilities)323
b(\(in)g(the)i(case)f(of)g(UFL)g(only\))h(may)f(change)-2560
50987 y(between)390 b(iterations.)-2560 53744 y Fw(A.)554
b(De\002nitions)-1453 55702 y Fy(W)-89 b(e)285 b(mak)-11
b(e)286 b(use)f(of)f(the)h(follo)-28 b(wing)286 b(de\002nitions,)f
(most)g(of)f(which)i(are)-2560 57030 y(superscripted)267
b(by)g Fu(m)p Fy(,)e(the)h(ordinal)h(number)g(of)f(the)h(current)f
(iteration.)-2560 58358 y(Let)507 b Fu(F)288 57957 y
Fp(\()p Fo(m)p Fp(\))2348 58358 y Fq(\265)528 b Fu(V)752
b Fy(denote)509 b(the)e(set)f(of)h(f)-11 b(acility)506
b(nodes)i(at)f(the)g Fu(m)p Fy(th)-2560 59754 y(iteration.)411
b(Let)h Fu(V)4595 59179 y Fp(\()p Fo(m)p Fp(\))4350 60063
y Fo(i)6539 59754 y Fy(denote)h(the)f Fu(r)31 b Fw(-ball)412
b Fy(of)f(f)-11 b(acility)411 b(node)i Fu(v)22667 59920
y Fo(i)23035 59754 y Fy(,)e Fw(i.e)-17 b(.)p Fy(,)-2560
61219 y(the)352 b(set)g(of)g(nodes)h(within)f(radius)g
Fu(r)383 b Fy(from)352 b Fu(v)15095 61385 y Fo(i)15463
61219 y Fy(.)f(Let)i Fu(U)18796 60644 y Fp(\()p Fo(m)p
Fp(\))18675 61527 y Fo(i)20680 61219 y Fy(denote)h(the)-2560
62547 y Fw(ring)478 b Fy(of)f(f)-11 b(acility)477 b(node)j
Fu(v)7931 62713 y Fo(i)8299 62547 y Fy(,)d Fw(i.e)-17
b(.)p Fy(,)477 b(the)h(set)f(of)h(nodes)g(not)h(contained)-2560
63943 y(in)430 b Fu(V)-377 63368 y Fp(\()p Fo(m)p Fp(\))-623
64252 y Fo(i)1155 63943 y Fy(,)g(b)-22 b(ut)430 b(are)h(being)g(serv)
-17 b(ed)432 b(by)f(f)-11 b(acility)429 b Fu(v)17286
64109 y Fo(i)17655 63943 y Fy(,)g(or)h(equi)-28 b(v)g(alently)-72
b(,)-2560 65271 y(the)501 b(nodes)i(that)e(ha)-22 b(v)-17
b(e)503 b Fu(v)7627 65437 y Fo(i)8496 65271 y Fy(as)d(their)h(closest)g
(f)-11 b(acility)-72 b(.)500 b(The)i Fw(domain)-2560
66667 y Fu(W)-1361 66092 y Fp(\()p Fo(m)p Fp(\))-1515
66976 y Fo(i)479 66667 y Ft(=)308 b Fu(V)2540 66092 y
Fp(\()p Fo(m)p Fp(\))2294 66976 y Fo(i)4257 65837 y Fm(S)5364
66667 y Fu(U)6241 66092 y Fp(\()p Fo(m)p Fp(\))6120 66976
y Fo(i)8128 66667 y Fy(of)355 b(a)g(f)-11 b(acility)355
b(node)i(consists)d(of)h(its)f Fu(r)31 b Fy(-ball)-2560
67995 y(and)389 b(the)f(surrounding)h(ring.)-1453 69404
y(From)505 b(the)g(pre)-28 b(vious)506 b(de\002nitions)h(it)c(is)h
(easy)i(to)e(see)i(that)e Fu(V)770 b Ft(=)-2560 70800
y Fu(V)-1668 70398 y Fp(\()p Fo(m)p Fp(\))49 69970 y
Fm(S)1156 70800 y Fu(U)2033 70398 y Fp(\()p Fo(m)p Fp(\))3565
70800 y Fy(,)724 b(where)h Fu(V)8886 70398 y Fp(\()p
Fo(m)p Fp(\))11350 70800 y Ft(=)13141 69970 y Fm(S)14064
71132 y Fo(v)14507 71243 y Fk(i)14857 71132 y Fl(2)p
Fo(F)16134 70910 y Fj(\()p Fk(m)p Fj(\))17709 70800 y
Fu(V)18601 70225 y Fp(\()p Fo(m)p Fp(\))18355 71108 y
Fo(i)20133 70800 y Fy(,)f Fu(U)22011 70398 y Fp(\()p
Fo(m)p Fp(\))24474 70800 y Ft(=)-2560 71569 y Fm(S)-1638
72731 y Fo(v)-1195 72842 y Fk(i)-844 72731 y Fl(2)p Fo(F)433
72509 y Fj(\()p Fk(m)p Fj(\))2007 72399 y Fu(U)2884 71824
y Fp(\()p Fo(m)p Fp(\))2763 72707 y Fo(i)4417 72399 y
Fy(.)26664 -672 y Fw(B.)553 b(The)389 b(Distrib)-22 b(uted)388
b(Algorithm)27771 1032 y Fy(Our)615 b(distrib)-22 b(uted)615
b(algorithm)h(starts)e(with)h(an)g(arbitrary)h(initial)26664
2360 y(batch)448 b(of)f(f)-11 b(acilities,)445 b(which)j(are)f(then)h
(re\002ned)g(iterati)-28 b(v)-17 b(ely)448 b(through)26664
3689 y(relocation)367 b(and)h(duplication)g(until)e(a)h(\(locally\))f
(optimal)h(solution)g(is)26664 5017 y(reached.)389 b(It)e(includes)i
(the)f(follo)-28 b(wing)389 b(steps:)26664 6685 y Fx(Initialization:)
603 b Fy(Pick)i(randomly)g(an)f(initial)g(set)f Fu(F)48678
6283 y Fp(\(0\))50573 6685 y Fq(\265)708 b Fu(V)849 b
Fy(of)26664 8013 y Fu(k)27240 8179 y Fp(0)28162 8013
y Ft(=)425 b Fq(j)p Fu(F)30621 7612 y Fp(\(0\))31810
8013 y Fq(j)452 b Fy(nodes)g(to)g(act)f(as)h(f)-11 b(acilities.)450
b(Let)h Fq(F)535 b Ft(=)426 b Fu(F)49969 7612 y Fp(\(0\))51608
8013 y Fy(denote)26664 9342 y(a)506 b(temporary)h(v)-28
b(ariable)508 b(containing)g(the)e(\223unprocessed\224)k(f)-11
b(acilities)26664 10670 y(from)327 b(the)g(current)h(batch.)h(Also,)e
(let)g Fq(F)42321 10268 y Fl(\241)43375 10670 y Ft(=)307
b Fu(F)45409 10268 y Fp(\(0\))46925 10670 y Fy(denote)329
b(a)e(v)-28 b(ariable)26664 11998 y(containing)390 b(this)d(current)h
(batch)h(of)f(f)-11 b(acilities.)26664 13334 y Fx(Iteration)275
b Fu(m)p Fx(:)c Fy(Pick)h(a)g(f)-11 b(acility)271 b Fu(v)39666
13500 y Fo(i)40341 13334 y Fq(2)308 b(F)380 b Fy(and)273
b(process)f(it)e(by)i(e)-17 b(x)g(ecuting)26664 14663
y(the)388 b(follo)-28 b(wing)389 b(steps:)27771 16228
y(1\))664 b(Construct)d(the)h(topology)h(of)d(its)g(surrounding)i
Fu(r)31 b Fy(-ball)661 b(by)29357 17557 y(using)522 b(an)h(appropriate)
h(neighborhood)h(disco)-17 b(v)g(ery)525 b(protocol)29357
18885 y(\(see)388 b([18])f(for)g(such)i(an)f(e)-17 b(xample\).)27771
20213 y(2\))664 b(T)-77 b(est)308 b(whether)j(its)d Fu(r)31
b Fy(-ball)309 b(can)h(be)g(mer)-20 b(ged)311 b(with)e(the)g
Fu(r)31 b Fy(-balls)309 b(of)29357 21542 y(other)290
b(nearby)i(f)-11 b(acilities.)288 b(W)-89 b(e)291 b(say)f(that)g(tw)-11
b(o)290 b(or)g(more)g(f)-11 b(acilities)29357 22870 y(can)443
b(be)f(mer)-20 b(ged)444 b(\(to)d(actually)i(mean)g(that)f(their)f
Fu(r)31 b Fy(-balls)442 b(can)29357 24198 y(be)319 b(mer)-20
b(ged\),)319 b(when)h(their)e Fu(r)31 b Fy(-balls)318
b(intersect,)g Fw(i.e)-17 b(.)p Fy(,)318 b(when)i(there)29357
25527 y(e)-17 b(xists)316 b(at)g(least)g(one)h(node)h(that)e(is)f
(within)h(distance)h Fu(r)347 b Fy(from)316 b(all)29357
26855 y(the)272 b(f)-11 b(acilities)270 b(.)h(Let)h Fu(J)414
b Fq(\265)308 b Fu(F)40411 26453 y Fp(\()p Fo(m)p Fp(\))42214
26855 y Fy(denote)274 b(a)d(set)h(composed)i(of)d Fu(v)54191
27021 y Fo(i)29357 28184 y Fy(and)325 b(the)e(f)-11 b(acilities)323
b(that)g(can)i(be)f(mer)-20 b(ged)325 b(with)f(it.)49098
27782 y Fs(4)50134 28184 y Fu(J)429 b Fy(induces)29357
29512 y(an)358 b Fu(r)31 b Fw(-shape)358 b Fu(G)35467
29678 y Fo(J)36393 29512 y Ft(=)308 b(\()p Fu(V)38638
29678 y Fo(J)39256 29512 y Fu(;)184 b(E)40564 29678 y
Fo(J)41184 29512 y Ft(\))p Fy(,)357 b(de\002ned)j(as)d(the)h(sub-graph)
h(of)29357 30840 y Fu(G)349 b Fy(composed)i(of)e(the)g(f)-11
b(acilities)347 b(of)i Fu(J)106 b Fy(,)349 b(their)f(neighbors)i(up)g
(to)29357 32169 y(distance)423 b Fu(r)31 b Fy(,)422 b(and)h(the)g
(edges)g(between)i(them.)d(W)-89 b(e)423 b(can)g(place)29357
33497 y(constraints)302 b(on)h(the)f(maximal)i(size)e(of)g
Fu(r)31 b Fy(-shapes)302 b(to)g(guarantee)29357 34825
y(that)388 b(it)f(is)f(al)-11 b(w)g(ays)389 b(much)g(smaller)e(than)i
Fu(O)31 b Ft(\()p Fu(n)p Ft(\))p Fy(.)27771 36154 y(3\))664
b(Re-optimize)569 b(the)e Fu(r)31 b Fy(-shape)569 b Fu(G)42173
36320 y Fo(J)42791 36154 y Fy(.)e(If)f(the)i(original)g(problem)29357
37482 y(is)532 b(UKM,)h(solv)-17 b(e)533 b(the)h Fq(j)p
Fu(J)106 b Fq(j)p Fy(-median)535 b(within)e(the)g Fu(r)31
b Fy(-shape)534 b(\227)29357 38810 y(this)432 b(can)i(produce)h(ne)-28
b(w)434 b(locations)g(for)e(the)h Fq(j)p Fu(J)106 b Fq(j)434
b Fy(f)-11 b(acilities.)432 b(If)29357 40139 y(the)408
b(original)g(problem)g(is)f(UFL,)h(solv)-17 b(e)408 b(the)g(UFL)g
(within)f(the)29357 41467 y Fu(r)31 b Fy(-shape)491 b(\227)f(this)g
(can)h(produce)i(ne)-28 b(w)491 b(locations)h(as)e(well)g(as)29357
42795 y(change)280 b(the)e(number)h(of)f(f)-11 b(acilities)276
b(\(mak)-11 b(e)279 b(it)e(smaller)g(or)h(lar)-20 b(ger)29357
44124 y(than)329 b Fq(j)p Fu(J)106 b Fq(j)p Fy(\).)329
b(In)f(both)h(cases)f(the)h(re-optimization)g(is)f(conducted)29357
45452 y(by)318 b(using)g(a)g(centralized)i(algorithm.)44061
45050 y Fs(5)45093 45452 y Fy(The)f(details)e(re)-17
b(g)-6 b(arding)29357 46780 y(the)381 b(optimization)h(of)e
Fu(r)31 b Fy(-shapes)381 b(are)g(gi)-28 b(v)-17 b(en)383
b(in)d(Section)j(III-C.)27771 48109 y(4\))664 b(Remo)-17
b(v)g(e)551 b(processed)f(f)-11 b(acilities,)546 b(both)k(the)e
(original)h Fu(v)52045 48275 y Fo(i)52961 48109 y Fy(and)29357
49437 y(the)504 b(ones)h(mer)-20 b(ged)505 b(with)f(it,)f(from)g(the)h
(set)g(of)f(unprocessed)29357 50766 y(f)-11 b(acilities)348
b(of)i(the)g(latest)f(batch,)i Fw(i.e)-17 b(.)p Fy(,)349
b(set)g Fq(F)417 b Ft(=)307 b Fq(F)110 b(n)184 b Ft(\()q
Fu(J)51092 49935 y Fm(T)52199 50766 y Fq(F)53105 50364
y Fl(\241)53852 50766 y Ft(\))p Fy(.)29357 52094 y(Also)283
b(update)j Fu(F)35832 51692 y Fp(\()p Fo(m)p Fp(\))37648
52094 y Fy(with)d(the)i(ne)-28 b(w)285 b(locations)f(of)g(the)g(f)-11
b(acilities)29357 53422 y(after)387 b(the)h(re-optimization.)27771
54751 y(5\))664 b(T)-77 b(est)561 b(for)h(con)-44 b(v)-17
b(er)d(gence.)566 b(If)561 b Fq(F)739 b(6)p Ft(=)630
b Fq(;)563 b Fy(then)f(some)h(f)-11 b(acilities)29357
56079 y(from)492 b(the)h(latest)f(batch)h(ha)-22 b(v)-17
b(e)495 b(not)e(yet)f(been)i(processed,)g(so)29357 57407
y(perform)266 b(another)h(iteration.)e(Otherwise,)h(if)f(the)h
(con\002guration)29357 58736 y(of)445 b(f)-11 b(acilities)443
b(changed)448 b(with)d(respect)g(to)g(the)g(initial)f(one)i(for)29357
60064 y(the)555 b(latest)g(batch,)g Fw(i.e)-17 b(.)p
Fy(,)555 b Fu(F)40418 59662 y Fp(\()p Fo(m)p Fp(\))42567
60064 y Fq(6)p Ft(=)617 b Fq(F)44951 59662 y Fl(\241)45698
60064 y Fy(,)554 b(then)i(form)f(a)g(ne)-28 b(w)29357
61392 y(batch)586 b(by)f(setting)g Fq(F)782 b Ft(=)672
b Fu(F)41544 60991 y Fp(\()p Fo(m)p Fp(\))43660 61392
y Fy(and)586 b Fq(F)46749 60991 y Fl(\241)48168 61392
y Ft(=)672 b Fu(F)50567 60991 y Fp(\()p Fo(m)p Fp(\))52100
61392 y Fy(,)584 b(and)29357 62721 y(perform)491 b(another)g
(iteration.)g(Else)f(\(if)f Fu(F)46476 62319 y Fp(\()p
Fo(m)p Fp(\))48506 62721 y Ft(=)498 b Fq(F)50771 62319
y Fl(\241)51517 62721 y Fy(\),)490 b(then)29357 64049
y(no)540 b(bene\002cial)h(relocation)g(or)e(elimination)h(is)e
(possible,)h(so)27549 66009 y Fr(4)28103 66322 y Fz(The)357
b(mer)-16 b(ging)356 b(operation)h(is)g(recursi)-22 b(v)-13
b(e.)358 b(When)f(an)f(initial)i Fi(r)26 b Fz(-ball)357
b(mer)-16 b(ges)358 b(with)26664 67318 y(a)f(second)g(one,)h(then)f
(additional)g(f)-9 b(acilities)359 b(that)f(can)f(mer)-16
b(ge)357 b(with)h(the)f(second)g(one)26664 68314 y(mer)-16
b(ge)310 b(as)g(well,)i(and)d(so)i(on.)27549 69097 y
Fr(5)28103 69410 y Fz(The)388 b(numerical)h(results)h(presented)f(in)f
(Sections)i(V)e(and)h(VI)f(are)h(obtained)g(by)26664
70406 y(using)408 b(Inte)-13 b(ger)408 b(Linear)h(Programming)e
(\(ILP\))i(formulations)f([2])g(and)g(local-search)26664
71403 y(heuristics)218 b([16)o(])e(for)g(solving)h(UKM)g(and)g(UFL)g
(within)g Fi(r)26 b Fz(-shapes.)217 b(Since)h(both)e(perform)26664
72399 y(v)-13 b(ery)309 b(closely)i(in)f(all)g(our)g(e)-13
b(xperiments,)310 b(we)h(don')-16 b(t)309 b(discriminate)i(between)g
(the)f(tw)-9 b(o.)p eop end
%%Page: 4 4
TeXDict begin 4 3 bop 133 -672 a Fy(terminate)635 b(by)g(returning)f
(the)h(\(locally\))f(optimal)h(solution)133 657 y Fu(F)999
255 y Fp(\()p Fo(m)p Fp(\))2531 657 y Fy(.)-2560 2913
y Fw(C.)553 b(Optimizing)388 b Fu(r)31 b Fw(-shapes)-1453
4665 y Fy(As)480 b(discussed)i(in)f(Section)h(II,)d(the)j(input)f(of)g
(a)g(UKM)g(problem)-2560 5993 y(is)647 b(de\002ned)j(completely)g(by)f
(a)f(tuple)h Fq(h)p Fu(V)61 b(;)184 b(s;)g(k)35 b Fq(i)p
Fy(,)650 b(containing)h(the)-2560 7322 y(topology)-72
b(,)492 b(the)f(demand,)i(and)f(the)f(number)h(of)e(allo)-28
b(wed)492 b(medians.)-2560 8650 y(A)556 b(UFL)h(problem)h(is)d
(de\002ned)k(by)e(a)g(tuple)g Fq(h)p Fu(V)61 b(;)184
b(s;)g(f)119 b Fq(i)p Fy(,)559 b(similar)c(to)-2560 9978
y(the)507 b(pre)-28 b(vious)509 b(one,)e(b)-22 b(ut)508
b(with)e(f)-11 b(acility)507 b(creation)h(costs)f(instead)g(of)-2560
11307 y(a)365 b(\002x)-17 b(ed)368 b(constraint)d(on)h(the)g(number)g
(of)f(allo)-28 b(wed)367 b(f)-11 b(acilities.)364 b(F)-17
b(or)366 b(the)-2560 12635 y(optimization)389 b(of)f(an)g
Fu(r)31 b Fy(-shape,)389 b(we)f(set:)-1453 14230 y Fl(\262)664
b Fu(V)553 b Ft(=)307 b Fu(V)2678 14396 y Fo(J)3296 14230
y Fy(,)387 b(and)-1453 15558 y Fl(\262)664 b Fu(k)454
b Ft(=)419 b Fq(j)p Fu(J)106 b Fq(j)p Fy(,)449 b(for)f(the)g(case)h(of)
f(UKM,)g(or)g Fu(f)539 b Ft(=)419 b Fq(f)p Fu(f)119 b
Ft(\()p Fu(v)20516 15724 y Fo(j)20983 15558 y Ft(\))420
b(:)g Fq(8)p Fu(v)23712 15724 y Fo(j)24597 15558 y Fq(2)-335
16887 y Fu(V)311 17053 y Fo(J)929 16887 y Fq(g)p Fy(,)387
b(for)g(the)i(case)f(of)g(UFL.)-1453 18481 y(Re)-17 b(g)-6
b(arding)788 b(service)d(demand,)h(a)f(straightforw)-11
b(ard)784 b(approach)-2560 19810 y(w)-11 b(ould)575 b(be)g(to)f(set)g
Fu(s)653 b Ft(=)g Fq(f)p Fu(s)p Ft(\()p Fu(v)10353 19976
y Fo(j)10819 19810 y Ft(\))h(:)f Fq(8)p Fu(v)14015 19976
y Fo(j)15134 19810 y Fq(2)g Fu(V)17171 19976 y Fo(J)17789
19810 y Fq(g)p Fy(,)574 b Fw(i.e)-17 b(.)p Fy(,)574 b(retain)g(in)-2560
21138 y(the)384 b(re-optimization)g(of)f(the)h Fu(r)31
b Fy(-shape)384 b(the)g(original)g(demand)i(of)d(the)-2560
22466 y(nodes)445 b(of)f(the)h Fu(r)31 b Fy(-shape.)445
b(Such)h(an)f(approach)i(w)-11 b(ould,)445 b(nonetheless,)-2560
23795 y(be)344 b(inaccurate)i(since)f(the)f(f)-11 b(acilities)343
b(within)h(an)g Fu(r)31 b Fy(-shape)345 b(service)g(the)-2560
25123 y(demand)436 b(of)d(the)h(nodes)h(of)e(the)h Fu(r)31
b Fy(-shape,)434 b Fw(as)f(well)h(as)f(those)h(in)g(the)-2560
26451 y(corr)-41 b(esponding)489 b(ring)d(of)f(the)i(r)-22
b(-shape)p Fy(.)486 b(Since)h(there)g(are)f(typically)-2560
27780 y(a)518 b(fe)-28 b(w)518 b(f)-11 b(acilities,)517
b(each)j(one)f(has)f(to)g(service)g(a)g(potentially)h(lar)-20
b(ge)-2560 29108 y(number)550 b(of)f(nodes)h(\()p Fw(e)-17
b(.g)g(.)p Fy(,)549 b(of)f(order)h Fu(O)31 b Ft(\()p
Fu(n)p Ft(\))p Fy(\),)550 b(and)g(thus)e(the)h(rings)-2560
30437 y(are)460 b(typically)h(much)g(lar)-20 b(ger)460
b(than)g(the)g(corresponding)j Fu(r)31 b Fy(-shapes.)24621
30035 y Fs(6)-2560 31765 y Fw(Re-optimizing)374 b(the)f(arr)-17
b(ang)-11 b(ement)376 b(of)d(facilities)f(within)h(an)h
Fu(r)31 b Fw(-shape)-2560 33093 y(without)504 b(considering)g(the)g
(demand)h(that)e(\003ows-in)h(fr)-50 b(om)503 b(the)g(ring)-2560
34422 y(would,)268 b(ther)-41 b(efor)g(e)-11 b(,)269
b(amount)g(to)e(disr)-41 b(e)d(gar)j(ding)269 b(too)f(muc)-17
b(h)269 b(information)-2560 35750 y(\(as)424 b(compar)-41
b(ed)428 b(to)d(the)g(information)h(consider)-41 b(ed)427
b(by)f(a)f(centr)-17 b(alized)-2560 37078 y(solution\))p
Fy(.)308 b(Including)i(the)f(nodes)h(of)f(the)f(ring)h(into)g(the)g
(optimization)-2560 38407 y(is,)559 b(of)h(course,)h(not)g(an)g
(option,)g(as)f(the)h(ring)f(can)i(be)f(arbitrarily)-2560
39735 y(lar)-20 b(ge)547 b(\(O\(n\)\))f(and,)h(therefore,)g
(considering)i(its)c(topology)k(w)-11 b(ould)-2560 41063
y(contradict)398 b(our)f(prime)g(objecti)-28 b(v)-17
b(e)399 b(\227)e(to)f(perform)h(f)-11 b(acility)397 b(location)-2560
42392 y(in)388 b(a)g(scalable,)g(distrib)-22 b(uted)388
b(manner)-61 b(.)-1453 43741 y(Our)527 b(solution)g(for)f(this)g(issue)
g(is)g(to)h Fw(consider)h(the)f(demand)i(of)-2560 45070
y(the)k(ring)g(implicitly)g(by)g(mapping)i(it)d(into)h(the)g(local)h
(demand)h(of)-2560 46398 y(the)520 b(nodes)h(that)f(constitute)h(the)f
Fy(skin)g Fw(of)g(the)g Fu(r)31 b Fw(-shape)p Fy(.)521
b(The)g(skin)-2560 47726 y(consists)581 b(of)h(nodes)h(on)g(the)f
(border)h(\(or)e(edge\))i(of)f(the)g Fu(r)31 b Fy(-shape,)-2560
49055 y Fw(i.e)-17 b(.)p Fy(,)478 b(nodes)h(of)f(the)g
Fu(r)31 b Fy(-shape)479 b(that)f(ha)-22 b(v)-17 b(e)480
b(direct)e(links)g(to)g(nodes)h(of)-2560 50383 y(the)380
b(ring.)e(This)h(intermediate)i(approach)h(bridges)e(the)f(g)-6
b(ap)381 b(between)-2560 51711 y(absolute)483 b(disre)-17
b(g)-6 b(ard)484 b(for)e(the)g(ring,)g(and)i(full)d(consideration)j(of)
e(its)-2560 53040 y(e)-17 b(xact)338 b(topology)-72 b(.)337
b(The)g(details)f(of)f(the)i(mapping)h(are)e(as)f(follo)-28
b(ws.)336 b(Let)-2560 54368 y Fu(v)-2023 54534 y Fo(i)-1266
54368 y Fy(denote)390 b(a)f(f)-11 b(acility)389 b(inside)g(an)g
Fu(r)31 b Fy(-shape)390 b Fu(G)15611 54534 y Fo(J)16230
54368 y Fy(.)e(Let)h Fu(v)19296 54534 y Fo(j)20072 54368
y Fq(2)309 b Fu(U)509 b Fy(denote)-2560 55697 y(a)399
b(node)h(in)f(the)g(corresponding)j(ring,)d(ha)-22 b(ving)400
b(the)f(property)h(that)f Fu(v)24967 55863 y Fo(i)-2560
57025 y Fy(is)474 b Fu(v)-810 57191 y Fo(j)-344 57025
y Fy(')-61 b(s)474 b(closest)g(f)-11 b(acility)-72 b(.)475
b(Let)g Fu(v)10648 57191 y Fo(k)11666 57025 y Fy(denote)i(a)e(node)i
(on)e(the)g(skin)g(of)-2560 58353 y Fu(G)-1690 58519
y Fo(J)-1072 58353 y Fy(,)368 b(ha)-22 b(ving)369 b(the)f(property)h
(that)f Fu(v)11334 58519 y Fo(k)12245 58353 y Fy(is)f(included)j(in)d
(a)h(shortest)f(path)-2560 59682 y(from)f Fu(v)495 59848
y Fo(j)1327 59682 y Fy(to)g Fu(v)3091 59848 y Fo(i)3459
59682 y Fy(.)f(T)-89 b(o)367 b(tak)-11 b(e)367 b(into)g(consideration)h
(the)e(demand)j(from)c Fu(v)24869 59848 y Fo(j)-2560
61010 y Fy(while)420 b(optimizing)g(the)g Fu(r)31 b Fy(-shape)420
b Fu(G)12015 61176 y Fo(J)12634 61010 y Fy(,)e(we)i(map)g(that)g
(demand)h(onto)-2560 62338 y(the)388 b(demand)i(of)e
Fu(v)4919 62504 y Fo(k)5463 62338 y Fy(,)f Fw(i.e)-17
b(.)p Fy(,)387 b(we)h(set:)f Fu(s)p Ft(\()p Fu(v)13216
62504 y Fo(k)13761 62338 y Ft(\))308 b(=)f Fu(s)p Ft(\()p
Fu(v)17153 62504 y Fo(k)17698 62338 y Ft(\))247 b(+)e
Fu(s)p Ft(\()p Fu(v)20967 62504 y Fo(j)21434 62338 y
Ft(\))p Fy(.)-1999 64595 y(I)56 b(V)-87 b(.)607 b(A)332
b(M)56 b Fz(O)g(R)e(E)330 b Fy(D)56 b Fz(E)g(T)-26 b(A)56
b(I)g(L)g(E)g(D)324 b Fy(E)56 b Fz(X)g(A)g(M)g(I)g(N)26
b(A)-43 b(T)56 b(I)g(O)g(N)323 b(O)56 b(F)330 b Fy(D)56
b Fz(I)g(S)g(T)g(R)e(I)i(B)45 b(U)56 b(T)g(E)g(D)6534
65923 y Fy(F)-17 b Fz(A)21 b(C)54 b(I)i(L)g(I)g(T)g(Y)325
b Fy(L)56 b Fz(O)g(C)e(A)-43 b(T)56 b(I)g(O)g(N)-1453
67728 y Fy(The)346 b(pre)-28 b(vious)346 b(section)f(has)g(pro)-17
b(vided)347 b(an)e(o)-17 b(v)g(ervie)-28 b(w)348 b(of)c(the)i(basic)
-2560 69057 y(characteristics)638 b(of)g(the)g(proposed)i(distrib)-22
b(uted)638 b(f)-11 b(acility)638 b(location)-1674 71090
y Fr(6)-1121 71403 y Fz(Notice)278 b(that)f Fi(r)303
b Fz(is)278 b(intentionally)f(k)-9 b(ept)277 b(small)i(to)e(limit)g
(the)h(size)g(of)e(the)i(indi)-22 b(vidual)-2560 72399
y(re-optimizations.)26664 -672 y Fy(approach.)319 b(The)f(section)f
(goes)g(be)-17 b(yond)320 b(that)d(to)f(look)i(closer)f(at)f(some)26664
657 y(important)615 b(albeit)g(more)g(comple)-17 b(x)617
b(properties)e(of)g(the)g(proposed)26664 1985 y(solution.)26664
4139 y Fw(A.)553 b(Con)-44 b(ver)j(g)-11 b(ence)392 b(of)387
b(the)h(Iter)-17 b(ative)389 b(Method)27771 5848 y Fy(W)-89
b(e)618 b(start)f(with)h(the)g(issue)f(of)h(con)-44 b(v)-17
b(er)d(gence.)622 b(First)617 b(we)h(sho)-28 b(w)26664
7176 y(that)531 b(the)h(iterati)-28 b(v)-17 b(e)532 b(algorithm)g(of)f
(Section)i(III-B)d(con)-44 b(v)-17 b(er)d(ges)533 b(in)f(a)26664
8504 y(\002nite)382 b(number)h(of)f(iterations.)g(Then)h(we)f(sho)-28
b(w)383 b(ho)-28 b(w)383 b(to)f(control)g(the)26664 9833
y(con)-44 b(v)-17 b(er)d(gence)521 b(speed)d(so)f(as)g(to)f(adapt)j(it)
d(to)h(the)g(requirements)h(of)26664 11161 y(practical)388
b(systems.)27771 12499 y Fw(Pr)-50 b(oposition)388 b(1:)554
b Fy(The)411 b(iterati)-28 b(v)-17 b(e)410 b(local)g(search)g(approach)
j(for)c(dis-)26664 13827 y(trib)-22 b(uted)681 b(f)-11
b(acility)680 b(location)i(con)-44 b(v)-17 b(er)d(ges)683
b(in)e(a)g(\002nite)g(number)h(of)26664 15155 y(iterations.)28878
16493 y Fw(Pr)-50 b(oof:)976 b Fy(Since)490 b(the)f(solution)f(space)i
(is)e(\002nite,)g(it)g(suf)-28 b(\002ces)489 b(to)26664
17821 y(sho)-28 b(w)514 b(that)f(there)g(cannot)i(be)f(loops,)f
Fw(i.e)-17 b(.)p Fy(,)513 b(repeated)i(visits)c(to)i(the)26664
19150 y(same)345 b(con\002guration)i(of)d(f)-11 b(acilities.)344
b(A)g(suf)-28 b(\002cient)345 b(condition)i(for)d(this)26664
20478 y(is)323 b(that)h(the)h(cost)f(\(either)g(Eq.)g(\(1\))g(or)g
(\(2\))g(depending)j(on)e(whether)g(we)26664 21806 y(are)466
b(considering)i(distrib)-22 b(uted)466 b(UKM)g(or)g(UFL\))g(be)h
(monotonically)26664 23135 y(decreasing)390 b(between)g(successi)-28
b(v)-17 b(e)389 b(iterations,)f Fw(i.e)-17 b(.)p Fy(,)387
b Fu(c)48140 22733 y Fp(\()p Fo(m)p Fp(\))49981 23135
y Fq(\270)308 b Fu(c)51629 22733 y Fp(\()p Fo(m)p Fp(+1\))54282
23135 y Fy(.)26664 24463 y(Belo)-28 b(w)-72 b(,)500 b(we)f(sho)-28
b(w)500 b(that)g(this)e(is)g(the)i(case)g(for)e(the)i(UKM)f(applied)
26664 25791 y(to)393 b Fu(r)31 b Fy(-shapes)394 b(with)f(a)g(single)h
(f)-11 b(acility)-72 b(.)393 b(The)h(cases)g(of)f(UKM)g(applied)26664
27120 y(to)425 b Fu(r)31 b Fy(-shapes)425 b(with)g(multiple)g(f)-11
b(acilities,)424 b(and)i(of)e(UFL)i(follo)-28 b(w)425
b(from)26664 28448 y(straightforw)-11 b(ard)387 b(generalizations)j(of)
e(the)g(same)g(proof.)27771 29786 y(Suppose)351 b(that)f(during)h
(iteration)e Fu(m)175 b Ft(+)g(1)351 b Fy(f)-11 b(acility)349
b Fu(v)48257 29952 y Fo(\265)49107 29786 y Fy(is)f(processed)26664
31114 y(and)c(that)g(between)h(iteration)f Fu(m)f Fy(and)h
Fu(m)164 b Ft(+)g(1)p Fy(,)343 b Fu(v)45800 31280 y Fo(\265)46644
31114 y Fy(is)f(located)j(at)e(node)26664 32442 y Fu(x)p
Fy(,)443 b(whereas)i(after)f(iteration)h Fu(m)287 b Ft(+)h(1)p
Fy(,)444 b Fu(v)42912 32608 y Fo(\265)43857 32442 y Fy(is)f(located)j
(at)e(node)i Fu(y)40 b Fy(.)443 b(If)26664 33771 y Fu(x)307
b Fq(\264)g Fu(y)40 b Fy(,)370 b(then)i Fu(c)32758 33369
y Fp(\()p Fo(m)p Fp(\))34598 33771 y Ft(=)308 b Fu(c)36246
33369 y Fp(\()p Fo(m)p Fp(+1\))38899 33771 y Fy(.)371
b(F)-17 b(or)372 b(the)f(case)h(that)f Fu(x)307 b Fq(6)p
Ft(=)h Fu(y)40 b Fy(,)370 b(we)h(need)26664 35099 y(to)387
b(pro)-17 b(v)g(e)390 b(that)e Fu(c)33314 34697 y Fp(\()p
Fo(m)p Fp(\))35154 35099 y Fu(>)308 b(c)36802 34697 y
Fp(\()p Fo(m)p Fp(+1\))39455 35099 y Fy(.)27771 36504
y(F)-17 b(or)362 b(the)g(case)h(in)e(which)i Fu(W)39122
35929 y Fp(\()p Fo(m)p Fp(\))38968 36838 y Fo(\265)40963
36504 y Fq(\264)307 b Fu(W)43330 35929 y Fp(\()p Fo(m)p
Fp(+1\))43176 36838 y Fo(\265)45984 36504 y Fy(,)361
b(it)g(is)g(easy)h(to)g(sho)-28 b(w)26664 37832 y(that)535
b Fu(c)29338 37431 y Fp(\()p Fo(m)p Fp(\))31451 37832
y Fu(>)580 b(c)33371 37431 y Fp(\()p Fo(m)p Fp(+1\))36024
37832 y Fy(.)535 b(Indeed,)h(since)g(the)f(f)-11 b(acility)534
b(mo)-17 b(v)g(es)537 b(from)26664 39161 y Fu(x)527 b
Fy(to)h Fu(y)567 b Fy(it)527 b(must)g(ha)-22 b(v)-17
b(e)530 b(been)f(that)f(this)f(reduces)j(the)e(cost)g(of)f(the)26664
40532 y(domain)535 b(of)f Fu(v)32511 40698 y Fo(\265)33011
40532 y Fy(,)g Fw(i.e)-17 b(.)p Fy(,)533 b Fu(c)p Ft(\()p
Fu(W)38076 39957 y Fp(\()p Fo(m)p Fp(\))37922 40866 y
Fo(\265)39609 40532 y Ft(\))579 b Fu(>)f(c)p Ft(\()p
Fu(W)44165 39957 y Fp(\()p Fo(m)p Fp(+1\))44011 40866
y Fo(\265)46819 40532 y Ft(\))p Fy(,)534 b(which)h(implies)26664
41860 y Fu(c)27143 41459 y Fp(\()p Fo(m)p Fp(\))28983
41860 y Fu(>)307 b(c)30630 41459 y Fp(\()p Fo(m)p Fp(+1\))33284
41860 y Fy(,)387 b(since)h(no)h(other)f(domain)h(is)e(af)-28
b(fected.)27771 43198 y(The)514 b(case)h(in)f(which)g
Fu(W)38216 42623 y Fp(\()p Fo(m)p Fp(\))38062 43532 y
Fo(\265)40290 43198 y Fq(6)p Ft(=)541 b Fu(W)42891 42623
y Fp(\()p Fo(m)p Fp(+1\))42737 43532 y Fo(\265)46058
43198 y Fy(is)513 b(some)-28 b(what)515 b(more)26664
44526 y(in)-44 b(v)-22 b(olv)-17 b(ed.)423 b(It)d(implies)h(that)g
(there)h(e)-17 b(xist)421 b(sets)f(of)h(nodes)i Fu(A)p
Fy(,)d Fu(B)56 b Fy(:)420 b Fu(A)271 b Fq([)26664 45922
y Fu(B)487 b Fq(6)p Ft(=)431 b Fq(;)p Fy(,)455 b Fu(A)432
b Ft(=)g Fq(f)p Fu(z)480 b Fq(2)432 b Fu(V)678 b Ft(:)432
b Fu(z)603 b(=)-676 b Fq(2)432 b Fu(W)41268 45347 y Fp(\()p
Fo(m)p Fp(\))41114 46256 y Fo(\265)42801 45922 y Fu(;)184
b(z)481 b Fq(2)431 b Fu(W)46656 45347 y Fp(\()p Fo(m)p
Fp(+1\))46502 46256 y Fo(\265)49310 45922 y Fq(g)455
b Fy(and)h Fu(B)487 b Ft(=)26664 47412 y Fq(f)p Fu(z)442
b Fq(2)394 b Fu(V)639 b Ft(:)395 b Fu(z)442 b Fq(2)394
b Fu(W)34581 46837 y Fp(\()p Fo(m)p Fp(\))34427 47746
y Fo(\265)36114 47412 y Fu(;)184 b(z)566 b(=)-676 b Fq(2)393
b Fu(W)39893 46837 y Fp(\()p Fo(m)p Fp(+1\))39739 47746
y Fo(\265)42547 47412 y Fq(g)p Fy(.)434 b Fu(A)h Fy(is)e(actually)i
(the)g(set)f(of)26664 48741 y(nodes)477 b(that)f(were)g(not)h(serv)-17
b(ed)477 b(by)f(f)-11 b(acility)476 b Fu(v)45443 48907
y Fo(\265)46419 48741 y Fy(before)h(the)f Fu(m)311 b
Ft(+)h(1)26664 50069 y Fy(iteration)344 b(and)i(are)f(serv)-17
b(ed)345 b(after)f(the)h Fu(m)166 b Ft(+)g(1)344 b Fy(iteration.)h
(Similarly)-72 b(,)344 b Fu(B)26664 51397 y Fy(is)410
b(the)j(set)e(of)g(nodes)i(that)f(were)g(serv)-17 b(ed)413
b(by)g(f)-11 b(acility)411 b Fu(v)49056 51563 y Fo(\265)49968
51397 y Fy(before)h(the)26664 52726 y Fu(m)269 b Ft(+)g(1)420
b Fy(iteration)f(and)i(are)f(not)f(serv)-17 b(ed)421
b(after)e(the)h Fu(m)269 b Ft(+)g(1)420 b Fy(iteration.)26664
54054 y(Let)528 b Fu(C)645 b Ft(=)567 b Fq(f)p Fu(z)615
b Fq(2)567 b Fu(V)812 b Ft(:)567 b Fu(z)615 b Fq(2)566
b Fu(W)40484 53479 y Fp(\()p Fo(m)p Fp(\))40330 54388
y Fo(\265)42017 54054 y Fu(;)184 b(z)616 b Fq(2)567 b
Fu(W)46143 53479 y Fp(\()p Fo(m)p Fp(+1\))45989 54388
y Fo(\265)48796 54054 y Fq(g)528 b Fy(be)g(the)g(set)26664
55382 y(of)510 b(nodes)j(that)e(remained)h(in)f(the)g(domain)i(of)d
Fu(v)47026 55548 y Fo(\265)48037 55382 y Fy(after)h(its)f(mo)-17
b(v)g(e)26664 56711 y(from)365 b Fu(x)g Fy(to)h Fu(y)404
b Fy(\(Figure)367 b(1)e(depicts)i(the)f(aforementioned)i(sets\).)c
(Since)26664 58106 y Fu(W)27863 57531 y Fp(\()p Fo(m)p
Fp(\))27709 58440 y Fo(\265)29927 58106 y Ft(=)531 b
Fu(B)391 b Fq([)335 b Fu(C)588 b Fy(\()p Fu(B)56 b(;)184
b(C)588 b Fy(disjoint\))507 b(and)j(the)f(re-optimization)h(of)26664
59597 y Fu(W)27863 59022 y Fp(\()p Fo(m)p Fp(\))27709
59930 y Fo(\265)29783 59597 y Fy(mo)-17 b(v)g(ed)390
b(the)f(f)-11 b(acility)387 b Fu(v)38940 59763 y Fo(\265)39828
59597 y Fy(from)g Fu(x)g Fy(to)h Fu(y)40 b Fy(,)386 b(it)h(must)h(be)g
(that:)31937 62303 y Fu(c)p Ft(\()p Fu(B)56 b(;)184 b(x)p
Ft(\))247 b(+)f Fu(c)p Ft(\()p Fu(C)18 b(;)184 b(x)p
Ft(\))309 b Fu(>)f(c)p Ft(\()p Fu(B)56 b(;)184 b(y)40
b Ft(\))246 b(+)g Fu(c)p Ft(\()p Fu(C)18 b(;)184 b(y)40
b Ft(\))3984 b Fy(\(3\))26664 64420 y(where)459 b Fu(c)p
Ft(\()p Fu(B)56 b(;)184 b(x)p Ft(\))459 b Fy(denotes)h(the)f(cost)f(of)
g(servicing)h(the)g(nodes)h(of)e Fu(B)26664 65748 y Fy(from)387
b Fu(x)g Fy(\(similar)f(de\002nitions)j(for)e Fu(c)p
Ft(\()p Fu(C)18 b(;)184 b(x)p Ft(\))p Fy(,)389 b Fu(c)p
Ft(\()p Fu(C)18 b(;)184 b(y)40 b Ft(\))p Fy(\).)27771
67085 y(Let)475 b Ft(\251)f Fy(denote)j(the)e(set)f(of)h(f)-11
b(acilities)473 b(that)i(used)h(to)e(service)h(the)26664
68414 y(nodes)448 b(of)e Fu(A)h Fy(before)h(the)-17 b(y)448
b(entered)g(the)f(domain)h(of)f Fu(v)49124 68580 y Fo(\265)50071
68414 y Fy(at)g Fu(m)289 b Ft(+)h(1)p Fy(.)26664 69742
y(Similarly)-72 b(,)394 b(let)g Ft(\252)g Fy(denote)i(the)f(set)f(of)g
(f)-11 b(acilities)394 b(that)g(get)h(to)f(service)26664
71070 y(the)439 b(nodes)h(of)f Fu(B)494 b Fy(after)439
b(the)-17 b(y)440 b(lea)-22 b(v)-17 b(e)441 b(the)e(domain)i(of)e
Fu(v)49151 71236 y Fo(\265)50090 71070 y Fy(at)g Fu(m)284
b Ft(+)g(1)p Fy(.)26664 72399 y(From)388 b(the)g(pre)-28
b(vious)389 b(de\002nitions)g(it)e(follo)-28 b(ws)388
b(that:)p eop end
%%Page: 5 5
TeXDict begin 5 4 bop -2560 10547 a
 /PSfrag where{pop(Wm)[[0(Bl)1 0]](WW1)[[1(Bl)1 0]](CC)[[2(Bl)1 0]](BB)[[3(Bl)1
0]](AA)[[4(Bl)1 0]](XX)[[5(Bl)1 0]](YY)[[6(Bl)1 0]](GG)[[7(Bl)1 0]](Here)[[8(Bl)1
0]]9 0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 -2560 10547 a @beginspecial
0 @llx 0 @lly 480 @urx 363 @ury 1368 @rwi @setspecial
%%BeginDocument: Figs/2eggs.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: dFL_2eggs.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Sat Jul 22 20:22:43 2006
%%For: gsmaragd@cheddar.bu.edu (Smaragdakis, Georgios)
%%BoundingBox: 0 0 480 363
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.000 0.000 0.000 srgb} bind def
/col33 {0.977 0.977 0.996 srgb} bind def

end
save
newpath 0 363 moveto 0 0 lineto 480 0 lineto 480 363 lineto closepath clip newpath
-162.3 472.5 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Ellipse
7.500 slw
n 4710 4986 1186 1186 0 360 DrawEllipse gs col0 s gr

% Ellipse
n 4500 5625 75 75 0 360 DrawEllipse gs 0.00 setgray ef gr gs col0 s gr

% Ellipse
n 4800 4800 75 75 0 360 DrawEllipse gs 0.00 setgray ef gr gs col0 s gr

% Ellipse
n 8550 4350 75 75 0 360 DrawEllipse gs 0.00 setgray ef gr gs col0 s gr

% Ellipse
n 8527 4353 1186 1186 0 360 DrawEllipse gs col0 s gr

% Ellipse
 [15 45] 45 sd
1 slc
n 4500 5625 1174 1174 0 360 DrawEllipse gs col0 s gr
 [] 0 sd
% Polyline
0 slc
gs  clippath
6195 3090 m 6255 3090 l 6255 2939 l 6225 3059 l 6195 2939 l cp
eoclip
n 6225 2175 m
 6225 3075 l gs col0 s gr gr

% arrowhead
n 6195 2939 m 6225 3059 l 6255 2939 l 6195 2939 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 8550 4350 m
 4500 5625 l gs col0 s gr 
% Polyline
gs  clippath
3358 3479 m 3408 3445 l 3324 3320 l 3366 3437 l 3274 3353 l cp
eoclip
n 3075 3000 m
 3375 3450 l gs col0 s gr gr

% arrowhead
n 3274 3353 m 3366 3437 l 3324 3320 l 3274 3353 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 6600 4800 m 6750 4725 l
 6825 4875 l gs col0 s gr 
% Polyline
 [15 75] 75 sd
n 5486 2769 m
 7661 6819 l gs col0 s gr  [] 0 sd
% Polyline
gs  clippath
4484 5484 m 4539 5508 l 4598 5369 l 4524 5468 l 4543 5345 l cp
eoclip
n 4743 4958 m
 4518 5483 l gs col0 s gr gr

% arrowhead
n 4543 5345 m 4524 5468 l 4598 5369 l 4543 5345 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 4800 4797 m
 8550 4347 l gs col0 s gr 
% Polyline
n 6825 4350 m 6975 4350 l
 6975 4500 l gs col0 s gr 
% Polyline
0.000 slw
n 6975 5625 m 7200 6825 l 7275 6825 l 7350 6825 l 7425 6825 l 7650 6825 l

 6975 5625 l  cp gs col33 0.60 shd ef gr 
% Polyline
n 7200 6900 m
 7050 5775 l gs col33 0.50 shd ef gr 
% Polyline
7.500 slw
 [60] 0 sd
n 6583 2778 m
 7183 6903 l gs col0 s gr  [] 0 sd
% Polyline
gs  clippath
7375 6578 m 7317 6592 l 7354 6739 l 7354 6616 l 7412 6725 l cp
eoclip
n 7500 7200 m
 7350 6600 l gs col33 0.00 shd ef gr gs col0 s gr gr

% arrowhead
n 7412 6725 m 7354 6616 l 7354 6739 l 7412 6725 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
4832 6907 m 4786 6869 l 4690 6984 l 4790 6912 l 4736 7023 l cp
eoclip
n 4425 7350 m
 4800 6900 l gs col0 s gr gr

% arrowhead
n 4736 7023 m 4790 6912 l 4690 6984 l 4736 7023 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
5757 7044 m 5707 7078 l 5791 7203 l 5750 7087 l 5841 7170 l cp
eoclip
n 6041 7524 m
 5741 7074 l gs col0 s gr gr

% arrowhead
n 5841 7170 m 5750 7087 l 5791 7203 l 5841 7170 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
2 slj
 [60 30 15 30] 0 sd
n 6225 2775 m 6224 2775 l 6220 2775 l 6215 2775 l 6206 2775 l 6194 2775 l
 6179 2775 l 6161 2775 l 6141 2775 l 6118 2775 l 6094 2775 l
 6068 2775 l 6040 2775 l 6011 2775 l 5980 2775 l 5948 2775 l
 5913 2775 l 5876 2775 l 5836 2775 l 5793 2775 l 5747 2775 l
 5700 2775 l 5653 2775 l 5609 2775 l 5570 2775 l 5537 2776 l
 5511 2776 l 5490 2777 l 5476 2778 l 5465 2778 l 5458 2779 l
 5454 2780 l 5450 2781 l 5446 2782 l 5441 2783 l 5434 2784 l
 5423 2784 l 5407 2784 l 5385 2784 l 5356 2783 l 5320 2782 l
 5277 2781 l 5228 2778 l 5175 2775 l 5129 2772 l 5084 2768 l
 5042 2764 l 5005 2759 l 4972 2754 l 4943 2748 l 4920 2742 l
 4900 2735 l 4884 2729 l 4872 2722 l 4861 2714 l 4852 2707 l
 4844 2700 l 4835 2693 l 4826 2686 l 4816 2680 l 4802 2675 l
 4786 2670 l 4766 2667 l 4742 2665 l 4713 2665 l 4679 2666 l
 4640 2671 l 4596 2677 l 4549 2687 l 4500 2700 l 4452 2716 l
 4406 2733 l 4364 2751 l 4328 2769 l 4297 2786 l 4271 2802 l
 4250 2816 l 4235 2830 l 4223 2841 l 4214 2852 l 4208 2862 l
 4204 2872 l 4200 2881 l 4196 2891 l 4192 2901 l 4186 2912 l
 4177 2925 l 4165 2940 l 4150 2957 l 4129 2976 l 4103 2998 l
 4072 3023 l 4036 3052 l 3994 3082 l 3948 3116 l 3900 3150 l
 3855 3182 l 3811 3212 l 3769 3241 l 3732 3266 l 3698 3288 l
 3669 3306 l 3644 3321 l 3623 3333 l 3605 3342 l 3590 3349 l
 3578 3354 l 3568 3358 l 3558 3360 l 3550 3363 l 3542 3365 l
 3533 3367 l 3523 3371 l 3511 3377 l 3497 3384 l 3480 3394 l
 3460 3407 l 3436 3424 l 3409 3444 l 3378 3468 l 3343 3497 l
 3305 3528 l 3265 3563 l 3225 3600 l 3183 3640 l 3143 3680 l
 3107 3716 l 3075 3749 l 3048 3778 l 3025 3803 l 3005 3823 l
 2990 3840 l 2977 3854 l 2966 3864 l 2958 3873 l 2950 3881 l
 2944 3888 l 2938 3894 l 2931 3902 l 2924 3911 l 2916 3923 l
 2907 3937 l 2896 3955 l 2883 3976 l 2868 4003 l 2851 4034 l
 2832 4070 l 2813 4110 l 2793 4154 l 2775 4200 l 2758 4249 l
 2744 4296 l 2733 4338 l 2726 4375 l 2721 4405 l 2718 4429 l
 2717 4448 l 2718 4462 l 2720 4472 l 2723 4479 l 2727 4484 l
 2731 4488 l 2736 4492 l 2740 4497 l 2745 4504 l 2749 4515 l
 2753 4529 l 2757 4549 l 2761 4575 l 2764 4608 l 2767 4647 l
 2769 4693 l 2772 4745 l 2775 4800 l 2778 4852 l 2781 4902 l
 2784 4948 l 2786 4989 l 2787 5024 l 2788 5053 l 2787 5077 l
 2786 5095 l 2785 5109 l 2783 5119 l 2780 5127 l 2778 5133 l
 2775 5138 l 2773 5143 l 2771 5149 l 2769 5157 l 2769 5169 l
 2769 5185 l 2772 5207 l 2776 5235 l 2782 5269 l 2790 5312 l
 2801 5362 l 2815 5419 l 2831 5482 l 2850 5550 l 2867 5607 l
 2885 5663 l 2902 5717 l 2919 5768 l 2934 5816 l 2948 5859 l
 2961 5899 l 2972 5935 l 2982 5967 l 2990 5996 l 2997 6021 l
 3002 6044 l 3007 6065 l 3011 6084 l 3015 6102 l 3019 6119 l
 3023 6136 l 3027 6153 l 3032 6171 l 3039 6191 l 3046 6212 l
 3056 6235 l 3068 6261 l 3082 6290 l 3099 6321 l 3118 6355 l
 3141 6392 l 3167 6432 l 3196 6474 l 3228 6516 l 3263 6559 l
 3300 6600 l 3347 6646 l 3392 6687 l 3435 6721 l 3473 6748 l
 3505 6768 l 3533 6783 l 3555 6793 l 3572 6798 l 3585 6799 l
 3595 6798 l 3602 6793 l 3608 6788 l 3613 6781 l 3618 6774 l
 3624 6768 l 3633 6762 l 3645 6757 l 3662 6754 l 3685 6753 l
 3714 6755 l 3751 6760 l 3795 6768 l 3848 6779 l 3909 6792 l
 3977 6808 l 4050 6825 l 4108 6838 l 4165 6851 l 4221 6863 l
 4275 6875 l 4324 6886 l 4370 6896 l 4412 6905 l 4449 6914 l
 4482 6922 l 4511 6928 l 4537 6935 l 4560 6940 l 4580 6945 l
 4598 6950 l 4614 6954 l 4629 6959 l 4644 6963 l 4658 6966 l
 4674 6970 l 4690 6974 l 4708 6978 l 4728 6983 l 4751 6987 l
 4777 6992 l 4807 6997 l 4841 7003 l 4879 7008 l 4921 7015 l
 4968 7021 l 5019 7027 l 5073 7033 l 5131 7040 l 5190 7045 l
 5250 7050 l 5321 7055 l 5388 7058 l 5448 7060 l 5502 7060 l
 5548 7060 l 5587 7059 l 5618 7057 l 5643 7054 l 5663 7051 l
 5678 7047 l 5688 7044 l 5696 7040 l 5702 7036 l 5706 7031 l
 5711 7027 l 5716 7022 l 5722 7018 l 5731 7014 l 5744 7009 l
 5760 7005 l 5782 7001 l 5808 6996 l 5840 6992 l 5878 6988 l
 5921 6985 l 5970 6981 l 6021 6978 l 6075 6975 l 6136 6972 l
 6194 6970 l 6245 6969 l 6288 6968 l 6324 6968 l 6352 6969 l
 6373 6970 l 6388 6972 l 6399 6974 l 6405 6976 l 6410 6979 l
 6413 6981 l 6415 6984 l 6420 6986 l 6426 6988 l 6437 6990 l
 6452 6991 l 6473 6992 l 6501 6992 l 6537 6991 l 6580 6989 l
 6631 6985 l 6689 6981 l 6750 6975 l 6804 6969 l 6855 6963 l
 6904 6957 l 6947 6950 l 6985 6944 l 7017 6938 l 7043 6933 l
 7065 6927 l 7081 6922 l 7094 6917 l 7103 6913 l 7109 6908 l
 7114 6904 l 7119 6900 l 7123 6896 l 7129 6892 l 7137 6887 l
 7147 6883 l 7162 6878 l 7182 6873 l 7207 6867 l 7238 6862 l
 7277 6856 l 7323 6850 l 7377 6843 l 7437 6837 l 7504 6831 l
 7575 6825 l 7635 6821 l 7694 6817 l 7752 6814 l 7807 6812 l
 7858 6811 l 7906 6810 l 7949 6810 l 7988 6810 l 8023 6811 l
 8054 6813 l 8082 6815 l 8106 6817 l 8128 6819 l 8148 6822 l
 8166 6825 l 8183 6828 l 8200 6831 l 8216 6834 l 8233 6837 l
 8251 6840 l 8270 6843 l 8292 6845 l 8315 6847 l 8341 6848 l
 8371 6850 l 8404 6850 l 8440 6850 l 8480 6849 l 8523 6847 l
 8570 6844 l 8620 6841 l 8671 6837 l 8723 6831 l 8775 6825 l
 8850 6814 l 8915 6803 l 8970 6793 l 9012 6784 l 9042 6778 l
 9061 6774 l 9071 6772 l 9074 6771 l 9071 6772 l 9065 6773 l
 9056 6775 l 9048 6776 l 9041 6776 l 9037 6774 l 9039 6770 l
 9047 6762 l 9064 6749 l 9091 6732 l 9128 6708 l 9176 6678 l
 9234 6642 l 9300 6600 l 9345 6571 l 9390 6541 l 9434 6511 l
 9476 6482 l 9516 6455 l 9553 6431 l 9587 6408 l 9619 6388 l
 9647 6370 l 9673 6355 l 9696 6341 l 9717 6329 l 9736 6319 l
 9753 6310 l 9770 6302 l 9785 6295 l 9800 6287 l 9815 6280 l
 9830 6272 l 9846 6263 l 9864 6252 l 9882 6240 l 9903 6226 l
 9925 6209 l 9950 6189 l 9977 6166 l 10007 6139 l 10040 6109 l
 10075 6074 l 10113 6036 l 10152 5994 l 10193 5948 l 10234 5900 l
 10275 5850 l 10316 5796 l 10354 5743 l 10388 5692 l 10418 5644 l
 10445 5600 l 10468 5561 l 10487 5526 l 10503 5495 l 10515 5468 l
 10525 5445 l 10533 5425 l 10539 5408 l 10543 5393 l 10546 5380 l
 10548 5368 l 10550 5356 l 10551 5345 l 10552 5333 l 10554 5320 l
 10556 5305 l 10558 5288 l 10562 5269 l 10566 5246 l 10572 5220 l
 10579 5189 l 10587 5155 l 10596 5116 l 10607 5074 l 10618 5027 l
 10629 4978 l 10640 4927 l 10650 4875 l 10660 4813 l 10668 4755 l
 10673 4703 l 10677 4659 l 10679 4622 l 10679 4592 l 10679 4569 l
 10677 4552 l 10675 4540 l 10673 4533 l 10670 4528 l 10666 4526 l
 10662 4525 l 10659 4524 l 10654 4522 l 10650 4518 l 10645 4511 l
 10640 4500 l 10634 4484 l 10628 4462 l 10621 4434 l 10614 4400 l
 10605 4358 l 10596 4310 l 10586 4257 l 10575 4200 l 10564 4146 l
 10553 4094 l 10542 4045 l 10532 3999 l 10523 3958 l 10515 3922 l
 10508 3891 l 10502 3864 l 10497 3840 l 10493 3821 l 10489 3804 l
 10486 3789 l 10484 3775 l 10481 3762 l 10479 3750 l 10476 3737 l
 10472 3723 l 10468 3706 l 10463 3688 l 10457 3666 l 10449 3642 l
 10440 3613 l 10429 3581 l 10416 3544 l 10402 3505 l 10386 3462 l
 10368 3419 l 10350 3375 l 10326 3323 l 10304 3277 l 10285 3238 l
 10270 3207 l 10259 3184 l 10252 3167 l 10248 3156 l 10248 3150 l
 10249 3148 l 10253 3148 l 10256 3150 l 10259 3152 l 10261 3153 l
 10261 3152 l 10257 3149 l 10248 3142 l 10233 3130 l 10212 3113 l
 10183 3092 l 10146 3065 l 10102 3034 l 10050 3000 l 10009 2975 l
 9967 2951 l 9926 2928 l 9887 2907 l 9851 2888 l 9818 2871 l
 9788 2856 l 9762 2843 l 9738 2831 l 9718 2822 l 9700 2813 l
 9684 2806 l 9670 2799 l 9657 2793 l 9644 2787 l 9631 2782 l
 9617 2776 l 9602 2770 l 9584 2764 l 9565 2756 l 9542 2748 l
 9515 2738 l 9485 2728 l 9449 2716 l 9410 2702 l 9365 2688 l
 9316 2673 l 9263 2657 l 9207 2641 l 9150 2625 l 9089 2610 l
 9031 2596 l 8977 2585 l 8929 2575 l 8887 2566 l 8852 2560 l
 8823 2555 l 8800 2551 l 8781 2548 l 8767 2546 l 8757 2545 l
 8749 2544 l 8743 2544 l 8737 2544 l 8732 2544 l 8726 2544 l
 8718 2545 l 8708 2545 l 8694 2545 l 8675 2545 l 8652 2546 l
 8623 2546 l 8588 2546 l 8546 2546 l 8498 2546 l 8444 2547 l
 8386 2548 l 8325 2550 l 8268 2553 l 8212 2557 l 8160 2561 l
 8113 2565 l 8071 2570 l 8035 2575 l 8005 2579 l 7980 2584 l
 7960 2588 l 7944 2593 l 7932 2597 l 7923 2601 l 7916 2605 l
 7911 2609 l 7906 2613 l 7901 2616 l 7896 2620 l 7888 2625 l
 7878 2629 l 7865 2634 l 7847 2639 l 7825 2644 l 7797 2650 l
 7763 2656 l 7722 2663 l 7674 2670 l 7620 2677 l 7559 2685 l
 7494 2692 l 7425 2700 l 7363 2706 l 7301 2713 l 7240 2718 l
 7180 2724 l 7123 2728 l 7067 2733 l 7013 2737 l 6961 2741 l
 6911 2744 l 6862 2747 l 6814 2750 l 6768 2753 l 6723 2755 l
 6679 2758 l 6636 2760 l 6594 2762 l 6553 2763 l 6514 2765 l
 6476 2766 l 6440 2768 l 6406 2769 l 6375 2770 l 6346 2771 l
 6320 2772 l 6297 2773 l 6278 2773 l 6262 2774 l 6249 2774 l
 6239 2775 l 6233 2775 l 6228 2775 l 6226 2775 l
 6225 2775 l  cp gs col0 s gr  [] 0 sd
% Polyline
gs  clippath
8396 4233 m 8428 4182 l 8300 4101 l 8386 4191 l 8268 4152 l cp
eoclip
n 6450 3600 m 6453 3600 l 6460 3600 l 6471 3600 l 6489 3600 l 6513 3601 l
 6541 3601 l 6574 3602 l 6609 3603 l 6645 3603 l 6681 3604 l
 6716 3605 l 6750 3607 l 6782 3608 l 6812 3609 l 6840 3611 l
 6867 3613 l 6892 3615 l 6917 3617 l 6941 3619 l 6964 3622 l
 6988 3625 l 7009 3628 l 7031 3631 l 7053 3635 l 7076 3639 l
 7099 3643 l 7123 3647 l 7148 3652 l 7173 3658 l 7198 3663 l
 7224 3669 l 7250 3675 l 7277 3682 l 7303 3689 l 7330 3696 l
 7356 3703 l 7382 3711 l 7408 3718 l 7433 3726 l 7457 3734 l
 7482 3742 l 7506 3750 l 7529 3758 l 7552 3767 l 7575 3775 l
 7598 3784 l 7621 3793 l 7644 3802 l 7668 3812 l 7692 3822 l
 7716 3832 l 7741 3843 l 7766 3854 l 7791 3865 l 7816 3877 l
 7841 3888 l 7866 3900 l 7891 3912 l 7915 3923 l 7938 3935 l
 7961 3946 l 7983 3957 l 8004 3968 l 8024 3978 l 8044 3988 l
 8062 3998 l 8080 4007 l 8096 4016 l 8113 4025 l 8133 4036 l
 8153 4047 l 8172 4058 l 8191 4069 l 8209 4080 l 8229 4092 l
 8249 4104 l 8270 4117 l 8291 4130 l 8313 4144 l 8334 4157 l
 8353 4170 l 8370 4181 l
 8400 4200 l gs col0 s gr gr

% arrowhead
0 slj
n 8268 4152 m 8386 4191 l 8300 4101 l 8268 4152 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
2 slj
gs  clippath
4651 5741 m 4622 5794 l 4755 5866 l 4664 5783 l 4783 5813 l cp
eoclip
n 7200 6675 m 7197 6675 l 7190 6675 l 7178 6675 l 7160 6674 l 7136 6674 l
 7106 6674 l 7071 6673 l 7032 6672 l 6991 6671 l 6950 6670 l
 6908 6669 l 6867 6667 l 6829 6665 l 6792 6664 l 6757 6662 l
 6725 6660 l 6694 6657 l 6665 6655 l 6638 6652 l 6612 6649 l
 6587 6645 l 6562 6642 l 6538 6638 l 6515 6633 l 6492 6629 l
 6470 6624 l 6447 6619 l 6423 6613 l 6399 6607 l 6374 6600 l
 6348 6592 l 6322 6585 l 6295 6576 l 6268 6567 l 6240 6557 l
 6211 6547 l 6182 6536 l 6153 6525 l 6123 6513 l 6093 6501 l
 6063 6488 l 6032 6475 l 6002 6462 l 5971 6449 l 5940 6435 l
 5909 6420 l 5877 6406 l 5845 6391 l 5813 6375 l 5788 6363 l
 5764 6351 l 5738 6339 l 5712 6326 l 5685 6313 l 5657 6298 l
 5627 6284 l 5596 6268 l 5563 6251 l 5529 6234 l 5493 6215 l
 5455 6196 l 5415 6175 l 5373 6153 l 5329 6130 l 5283 6107 l
 5235 6082 l 5186 6056 l 5136 6030 l 5085 6004 l 5034 5977 l
 4984 5951 l 4935 5925 l 4889 5900 l 4845 5877 l 4804 5856 l
 4768 5837 l 4737 5821 l 4711 5807 l 4690 5796 l 4674 5788 l

 4650 5775 l gs col0 s gr gr

% arrowhead
0 slj
n 4783 5813 m 4664 5783 l 4755 5866 l 4783 5813 l  cp gs 0.00 setgray ef gr  col0 s
/Times-Roman ff 300.00 scf sf
2850 2850 m
gs 1 -1 sc (Wm) col0 sh gr
/Times-Roman ff 300.00 scf sf
8550 4125 m
gs 1 -1 sc (GG) col0 sh gr
/Times-Roman ff 300.00 scf sf
6150 2100 m
gs 1 -1 sc (BB) col0 sh gr
/Times-Roman ff 300.00 scf sf
4500 4650 m
gs 1 -1 sc (XX) col0 sh gr
/Times-Roman ff 300.00 scf sf
4050 5475 m
gs 1 -1 sc (YY) col0 sh gr
/Times-Roman ff 300.00 scf sf
6675 4875 m
gs 1 -1 sc (.) col0 sh gr
/Times-Roman ff 300.00 scf sf
6825 4500 m
gs 1 -1 sc (.) col0 sh gr
/Times-Roman ff 300.00 scf sf
7425 7350 m
gs 1 -1 sc (AA) col0 sh gr
/Times-Roman ff 300.00 scf sf
4050 7650 m
gs 1 -1 sc (CC) col0 sh gr
/Times-Roman ff 270.00 scf sf
8025 2025 m
gs 1 -1 sc (Here) col0 sh gr
/Times-Roman ff 300.00 scf sf
5550 7875 m
gs 1 -1 sc (WW1) col0 sh gr
% here ends figure;
$F2psEnd
rs
showpage

%%EndDocument
 @endspecial -2560 10547 a
 /End PSfrag
 -2560 10547 a -2560 -2947
a
 /Hide PSfrag
 -2560 -2947 a -11801 -2192 a Fy(PSfrag)389 b(replacements)p
-11801 -1776 9241 45 v -2560 -1731 a
 /Unhide PSfrag
 -2560 -1731 a -5292
-575 a
  {
 -5292 -575 a Fu(W)-4093 -1150 y Fp(\()p Fo(m)p
Fp(\))-4247 -241 y Fo(\265)-5292 -575 y
  } 0/Place PSfrag
 -5292 -575 a
-6413 915 a
  {
 -6413 915 a Fu(W)-5214 340 y Fp(\()p Fo(m)p
Fp(+1\))-5368 1249 y Fo(\265)-6413 915 y
  } 1/Place PSfrag
 -6413 915 a
-3298 2562 a
  {
 -3298 2562 a Fy(C)-3298 2562 y
  } 2/Place PSfrag
 -3298 2562
a -3298 3905 a
  {
 -3298 3905 a Fy(B)-3298 3905 y
  } 3/Place PSfrag
 -3298 3905
a -3359 5234 a
  {
 -3359 5234 a Fy(A)-3359 5234 y
  } 4/Place PSfrag
 -3359 5234
a -3359 6562 a
  {
 -3359 6562 a Fy(X)-3359 6562 y
  } 5/Place PSfrag
 -3359 6562
a -3359 7891 a
  {
 -3359 7891 a Fy(Y)-3359 7891 y
  } 6/Place PSfrag
 -3359 7891
a -3195 9004 a
  {
 -3195 9004 a Fu(\260)-3195 9004 y
  } 7/Place PSfrag
 -3195
9004 a -10487 10332 a
  {
 -10487 10332 a Fy(here)g Ft(\251)308
b(=)f(\252)g(=)h Fu(\260)-10487 10332 y
  } 8/Place PSfrag
 -10487 10332
a 13714 -2000 a
 gsave currentpoint currentpoint translate -90 neg rotate neg exch
neg exch translate
 13714 -2000 a @beginspecial 50 @llx 50
@lly 554 @urx 770 @ury 1224 @rwi @setspecial
%%BeginDocument: Figs/Waxman-Inc-m2-a0.15-b0.2.eps
%!PS-Adobe-2.0
%%Title: Waxman-Inc-m2-a0.15-b0.2.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Jul 27 19:09:04 2006
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -76 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 230 scalefont setfont
1.000 UL
LTb
1173 690 M
63 0 V
5573 0 R
-63 0 V
-5711 0 R
gsave 0 setgray
( 0) Rshow
grestore
1.000 UL
LTb
1173 1422 M
63 0 V
5573 0 R
-63 0 V
-5711 0 R
gsave 0 setgray
( 0.2) Rshow
grestore
1.000 UL
LTb
1173 2154 M
63 0 V
5573 0 R
-63 0 V
-5711 0 R
gsave 0 setgray
( 0.4) Rshow
grestore
1.000 UL
LTb
1173 2886 M
63 0 V
5573 0 R
-63 0 V
-5711 0 R
gsave 0 setgray
( 0.6) Rshow
grestore
1.000 UL
LTb
1173 3618 M
63 0 V
5573 0 R
-63 0 V
-5711 0 R
gsave 0 setgray
( 0.8) Rshow
grestore
1.000 UL
LTb
1173 4350 M
63 0 V
5573 0 R
-63 0 V
-5711 0 R
gsave 0 setgray
( 1) Rshow
grestore
1.000 UL
LTb
1173 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 1) Cshow
grestore
1.000 UL
LTb
1978 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 2) Cshow
grestore
1.000 UL
LTb
2783 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 3) Cshow
grestore
1.000 UL
LTb
3588 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 4) Cshow
grestore
1.000 UL
LTb
4394 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 5) Cshow
grestore
1.000 UL
LTb
5199 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 6) Cshow
grestore
1.000 UL
LTb
6004 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 7) Cshow
grestore
1.000 UL
LTb
6809 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 8) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1173 690 M
5636 0 V
0 3660 V
-5636 0 V
0 -3660 V
LTb
230 2520 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 M
(coverage) Cshow
grestore
grestore
LTb
3991 115 M
gsave 0 setgray
(radius r) Cshow
grestore
LTb
3991 4695 M
gsave 0 setgray
(ER) Cshow
grestore
1.000 UP
1.000 UP
1.000 UL
LT0
1173 737 M
0 89 V
-31 -89 R
62 0 V
-62 89 R
62 0 V
774 35 R
0 437 V
1947 861 M
62 0 V
-62 437 R
62 0 V
774 120 R
0 1097 V
2752 1418 M
62 0 V
-62 1097 R
62 0 V
774 312 R
0 1128 V
3557 2827 M
62 0 V
-62 1128 R
62 0 V
775 112 R
0 283 V
-31 -283 R
62 0 V
-62 283 R
62 0 V
774 -22 R
0 22 V
-31 -22 R
62 0 V
-62 22 R
62 0 V
774 0 R
-31 0 R
62 0 V
-62 0 R
62 0 V
1173 782 Pls
1978 1080 Pls
2783 1966 Pls
3588 3391 Pls
4394 4232 Pls
5199 4347 Pls
6004 4350 Pls
1.000 UP
1.000 UL
LT0
LTb
5780 1788 M
gsave 0 setgray
(n=200) Rshow
grestore
LT0
5918 1788 M
615 0 V
1173 782 M
805 298 V
805 886 V
805 1425 V
806 841 V
805 115 V
805 3 V
1173 782 Pls
1978 1080 Pls
2783 1966 Pls
3588 3391 Pls
4394 4232 Pls
5199 4347 Pls
6004 4350 Pls
6225 1788 Pls
1.000 UP
1.000 UL
LT1
1173 713 M
0 45 V
-31 -45 R
62 0 V
-62 45 R
62 0 V
774 5 R
0 259 V
1947 763 M
62 0 V
-62 259 R
62 0 V
774 12 R
0 851 V
-31 -851 R
62 0 V
-62 851 R
62 0 V
774 173 R
0 1332 V
3557 2058 M
62 0 V
-62 1332 R
62 0 V
775 216 R
0 721 V
-31 -721 R
62 0 V
-62 721 R
62 0 V
774 -41 R
0 64 V
-31 -64 R
62 0 V
-62 64 R
62 0 V
774 0 R
-31 0 R
62 0 V
-62 0 R
62 0 V
1173 736 Crs
1978 893 Crs
2783 1459 Crs
3588 2724 Crs
4394 3966 Crs
5199 4330 Crs
6004 4350 Crs
1.000 UP
1.000 UL
LT1
LTb
5780 1558 M
gsave 0 setgray
(n=400) Rshow
grestore
LT1
5918 1558 M
615 0 V
1173 736 M
805 157 V
805 566 V
805 1265 V
806 1242 V
805 364 V
805 20 V
1173 736 Crs
1978 893 Crs
2783 1459 Crs
3588 2724 Crs
4394 3966 Crs
5199 4330 Crs
6004 4350 Crs
6225 1558 Crs
1.000 UP
1.000 UL
LT2
1173 706 M
0 29 V
-31 -29 R
62 0 V
-62 29 R
62 0 V
774 0 R
0 179 V
1947 735 M
62 0 V
-62 179 R
62 0 V
774 -27 R
0 666 V
2752 887 M
62 0 V
-62 666 R
62 0 V
774 58 R
0 1302 V
3557 1611 M
62 0 V
-62 1302 R
62 0 V
775 219 R
0 1022 V
4363 3132 M
62 0 V
-62 1022 R
62 0 V
774 22 R
0 174 V
-31 -174 R
62 0 V
-62 174 R
62 0 V
774 -3 R
0 3 V
-31 -3 R
62 0 V
-62 3 R
62 0 V
774 0 R
-31 0 R
62 0 V
-62 0 R
62 0 V
1173 720 Star
1978 824 Star
2783 1220 Star
3588 2262 Star
4394 3643 Star
5199 4283 Star
6004 4349 Star
6809 4350 Star
1.000 UP
1.000 UL
LT2
LTb
5780 1328 M
gsave 0 setgray
(n=600) Rshow
grestore
LT2
5918 1328 M
615 0 V
1173 720 M
805 104 V
805 396 V
805 1042 V
806 1381 V
805 640 V
805 66 V
805 1 V
1173 720 Star
1978 824 Star
2783 1220 Star
3588 2262 Star
4394 3643 Star
5199 4283 Star
6004 4349 Star
6809 4350 Star
6225 1328 Star
1.000 UP
1.000 UL
LT3
1173 702 M
0 22 V
-31 -22 R
62 0 V
-62 22 R
62 0 V
774 -3 R
0 143 V
1947 721 M
62 0 V
-62 143 R
62 0 V
774 -38 R
0 578 V
2752 826 M
62 0 V
-62 578 R
62 0 V
774 15 R
0 1255 V
3557 1419 M
62 0 V
-62 1255 R
62 0 V
775 194 R
0 1163 V
4363 2868 M
62 0 V
-62 1163 R
62 0 V
774 45 R
0 274 V
-31 -274 R
62 0 V
-62 274 R
62 0 V
774 -10 R
0 10 V
-31 -10 R
62 0 V
-62 10 R
62 0 V
774 0 R
-31 0 R
62 0 V
-62 0 R
62 0 V
1173 713 Box
1978 793 Box
2783 1115 Box
3588 2046 Box
4394 3449 Box
5199 4237 Box
6004 4348 Box
6809 4350 Box
1.000 UP
1.000 UL
LT3
LTb
5780 1098 M
gsave 0 setgray
(n=800) Rshow
grestore
LT3
5918 1098 M
615 0 V
1173 713 M
805 80 V
805 322 V
805 931 V
806 1403 V
805 788 V
805 111 V
805 2 V
1173 713 Box
1978 793 Box
2783 1115 Box
3588 2046 Box
4394 3449 Box
5199 4237 Box
6004 4348 Box
6809 4350 Box
6225 1098 Box
1.000 UP
1.000 UL
LT4
1173 699 M
0 18 V
-31 -18 R
62 0 V
-62 18 R
62 0 V
774 -3 R
0 117 V
1947 714 M
62 0 V
-62 117 R
62 0 V
774 -36 R
0 489 V
2752 795 M
62 0 V
-62 489 R
62 0 V
774 -7 R
0 1172 V
3557 1277 M
62 0 V
-62 1172 R
62 0 V
775 168 R
0 1264 V
4363 2617 M
62 0 V
-62 1264 R
62 0 V
774 76 R
0 393 V
-31 -393 R
62 0 V
-62 393 R
62 0 V
774 -21 R
0 21 V
-31 -21 R
62 0 V
-62 21 R
62 0 V
774 0 R
-31 0 R
62 0 V
-62 0 R
62 0 V
1173 708 BoxF
1978 772 BoxF
2783 1040 BoxF
3588 1863 BoxF
4394 3249 BoxF
5199 4176 BoxF
6004 4345 BoxF
6809 4350 BoxF
1.000 UP
1.000 UL
LT4
LTb
5780 868 M
gsave 0 setgray
(n=1000) Rshow
grestore
LT4
5918 868 M
615 0 V
1173 708 M
805 64 V
805 268 V
805 823 V
806 1386 V
805 927 V
805 169 V
805 5 V
1173 708 BoxF
1978 772 BoxF
2783 1040 BoxF
3588 1863 BoxF
4394 3249 BoxF
5199 4176 BoxF
6004 4345 BoxF
6809 4350 BoxF
6225 868 BoxF
1.000 UL
LTb
1173 690 M
5636 0 V
0 3660 V
-5636 0 V
0 -3660 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 27314 -2000 a
 currentpoint grestore moveto
 27314 -2000 a 34849 -2000
a
 gsave currentpoint currentpoint translate -90 neg rotate neg exch
neg exch translate
 34849 -2000 a @beginspecial 50 @llx 50 @lly 554 @urx
770 @ury 1224 @rwi @setspecial
%%BeginDocument: Figs/BA-Inc-m2.eps
%!PS-Adobe-2.0
%%Title: BA-Inc-m2.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Tue Jul 25 20:29:52 2006
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -76 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 230 scalefont setfont
1.000 UL
LTb
1173 690 M
63 0 V
5573 0 R
-63 0 V
-5711 0 R
gsave 0 setgray
( 0) Rshow
grestore
1.000 UL
LTb
1173 1422 M
63 0 V
5573 0 R
-63 0 V
-5711 0 R
gsave 0 setgray
( 0.2) Rshow
grestore
1.000 UL
LTb
1173 2154 M
63 0 V
5573 0 R
-63 0 V
-5711 0 R
gsave 0 setgray
( 0.4) Rshow
grestore
1.000 UL
LTb
1173 2886 M
63 0 V
5573 0 R
-63 0 V
-5711 0 R
gsave 0 setgray
( 0.6) Rshow
grestore
1.000 UL
LTb
1173 3618 M
63 0 V
5573 0 R
-63 0 V
-5711 0 R
gsave 0 setgray
( 0.8) Rshow
grestore
1.000 UL
LTb
1173 4350 M
63 0 V
5573 0 R
-63 0 V
-5711 0 R
gsave 0 setgray
( 1) Rshow
grestore
1.000 UL
LTb
1173 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 1) Cshow
grestore
1.000 UL
LTb
1978 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 2) Cshow
grestore
1.000 UL
LTb
2783 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 3) Cshow
grestore
1.000 UL
LTb
3588 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 4) Cshow
grestore
1.000 UL
LTb
4394 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 5) Cshow
grestore
1.000 UL
LTb
5199 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 6) Cshow
grestore
1.000 UL
LTb
6004 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 7) Cshow
grestore
1.000 UL
LTb
6809 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 8) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1173 690 M
5636 0 V
0 3660 V
-5636 0 V
0 -3660 V
LTb
230 2520 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 M
(coverage) Cshow
grestore
grestore
LTb
3991 115 M
gsave 0 setgray
(radius r) Cshow
grestore
LTb
3991 4695 M
gsave 0 setgray
(BA) Cshow
grestore
1.000 UP
1.000 UP
1.000 UL
LT0
1173 707 M
0 147 V
1142 707 M
62 0 V
-62 147 R
62 0 V
774 5 R
0 754 V
1947 859 M
62 0 V
-62 754 R
62 0 V
774 241 R
0 1452 V
2752 1854 M
62 0 V
-62 1452 R
62 0 V
774 338 R
0 706 V
-31 -706 R
62 0 V
-62 706 R
62 0 V
775 -32 R
0 32 V
-31 -32 R
62 0 V
-62 32 R
62 0 V
774 0 R
-31 0 R
62 0 V
-62 0 R
62 0 V
1173 781 Pls
1978 1236 Pls
2783 2580 Pls
3588 4021 Pls
4394 4343 Pls
5199 4350 Pls
1.000 UP
1.000 UL
LT0
LTb
5780 1788 M
gsave 0 setgray
(n=200) Rshow
grestore
LT0
5918 1788 M
615 0 V
1173 781 M
805 455 V
805 1344 V
805 1441 V
806 322 V
805 7 V
1173 781 Pls
1978 1236 Pls
2783 2580 Pls
3588 4021 Pls
4394 4343 Pls
5199 4350 Pls
6225 1788 Pls
1.000 UP
1.000 UL
LT1
1173 692 M
0 87 V
-31 -87 R
62 0 V
-62 87 R
62 0 V
774 -26 R
0 549 V
1947 753 M
62 0 V
-62 549 R
62 0 V
774 172 R
0 1383 V
2752 1474 M
62 0 V
-62 1383 R
62 0 V
774 463 R
0 958 V
-31 -958 R
62 0 V
-62 958 R
62 0 V
775 18 R
0 54 V
-31 -54 R
62 0 V
-62 54 R
62 0 V
774 0 R
-31 0 R
62 0 V
-62 0 R
62 0 V
1173 736 Crs
1978 1027 Crs
2783 2166 Crs
3588 3799 Crs
4394 4334 Crs
5199 4350 Crs
1.000 UP
1.000 UL
LT1
LTb
5780 1558 M
gsave 0 setgray
(n=400) Rshow
grestore
LT1
5918 1558 M
615 0 V
1173 736 M
805 291 V
805 1139 V
805 1633 V
806 535 V
805 16 V
1173 736 Crs
1978 1027 Crs
2783 2166 Crs
3588 3799 Crs
4394 4334 Crs
5199 4350 Crs
6225 1558 Crs
1.000 UP
1.000 UL
LT2
1173 690 M
0 61 V
-31 -61 R
62 0 V
-62 61 R
62 0 V
774 -31 R
0 425 V
1947 720 M
62 0 V
-62 425 R
62 0 V
774 84 R
0 1346 V
2752 1229 M
62 0 V
-62 1346 R
62 0 V
774 330 R
0 1260 V
3557 2905 M
62 0 V
-62 1260 R
62 0 V
775 -26 R
0 211 V
-31 -211 R
62 0 V
-62 211 R
62 0 V
774 -7 R
0 7 V
-31 -7 R
62 0 V
-62 7 R
62 0 V
774 0 R
-31 0 R
62 0 V
-62 0 R
62 0 V
1173 720 Star
1978 932 Star
2783 1902 Star
3588 3535 Star
4394 4280 Star
5199 4349 Star
6004 4350 Star
1.000 UP
1.000 UL
LT2
LTb
5780 1328 M
gsave 0 setgray
(n=600) Rshow
grestore
LT2
5918 1328 M
615 0 V
1173 720 M
805 212 V
805 970 V
805 1633 V
806 745 V
805 69 V
805 1 V
1173 720 Star
1978 932 Star
2783 1902 Star
3588 3535 Star
4394 4280 Star
5199 4349 Star
6004 4350 Star
6225 1328 Star
1.000 UP
1.000 UL
LT3
1173 690 M
0 45 V
-31 -45 R
62 0 V
-62 45 R
62 0 V
774 -37 R
0 345 V
1947 698 M
62 0 V
-62 345 R
62 0 V
774 11 R
0 1246 V
2752 1054 M
62 0 V
-62 1246 R
62 0 V
774 302 R
0 1406 V
3557 2602 M
62 0 V
-62 1406 R
62 0 V
775 61 R
0 281 V
-31 -281 R
62 0 V
-62 281 R
62 0 V
774 -6 R
0 6 V
-31 -6 R
62 0 V
-62 6 R
62 0 V
774 0 R
-31 0 R
62 0 V
-62 0 R
62 0 V
1173 713 Box
1978 870 Box
2783 1677 Box
3588 3305 Box
4394 4243 Box
5199 4349 Box
6004 4350 Box
1.000 UP
1.000 UL
LT3
LTb
5780 1098 M
gsave 0 setgray
(n=800) Rshow
grestore
LT3
5918 1098 M
615 0 V
1173 713 M
805 157 V
805 807 V
805 1628 V
806 938 V
805 106 V
805 1 V
1173 713 Box
1978 870 Box
2783 1677 Box
3588 3305 Box
4394 4243 Box
5199 4349 Box
6004 4350 Box
6225 1098 Box
1.000 UP
1.000 UL
LT4
1173 690 M
0 36 V
-31 -36 R
62 0 V
-62 36 R
62 0 V
774 -26 R
0 270 V
1947 700 M
62 0 V
-62 270 R
62 0 V
774 13 R
0 1043 V
2752 983 M
62 0 V
-62 1043 R
62 0 V
774 353 R
0 1441 V
3557 2379 M
62 0 V
-62 1441 R
62 0 V
775 166 R
0 364 V
-31 -364 R
62 0 V
-62 364 R
62 0 V
774 -10 R
0 10 V
-31 -10 R
62 0 V
-62 10 R
62 0 V
774 0 R
-31 0 R
62 0 V
-62 0 R
62 0 V
1173 708 BoxF
1978 835 BoxF
2783 1504 BoxF
3588 3100 BoxF
4394 4203 BoxF
5199 4348 BoxF
6004 4350 BoxF
1.000 UP
1.000 UL
LT4
LTb
5780 868 M
gsave 0 setgray
(n=1000) Rshow
grestore
LT4
5918 868 M
615 0 V
1173 708 M
805 127 V
805 669 V
805 1596 V
806 1103 V
805 145 V
805 2 V
1173 708 BoxF
1978 835 BoxF
2783 1504 BoxF
3588 3100 BoxF
4394 4203 BoxF
5199 4348 BoxF
6004 4350 BoxF
6225 868 BoxF
1.000 UL
LTb
1173 690 M
5636 0 V
0 3660 V
-5636 0 V
0 -3660 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 48449 -2000 a
 currentpoint grestore moveto
 48449 -2000 a -2560 12868
a Fz(Fig.)353 b(1.)1058 b Fs(Depiction)311 b(of)e(the)g(mo)-12
b(v)g(e)310 b(of)f(a)f(f)-8 b(acility)-2560 13754 y(from)271
b(X)h(to)g(Y)g(and)g(of)g(the)g(sets)g(A,)g(B,)e(and)j(C.)13239
12868 y Fz(Fig.)313 b(2.)937 b Fs(A)-57 b(v)-12 b(erage)275
b(co)-12 b(v)g(erage)275 b(of)f(a)f(node)i(for)e(dif)-19
b(ferent)275 b(size)f(of)g(ER)13239 13754 y(graphs.)34180
12868 y Fz(Fig.)308 b(3.)922 b Fs(A)-57 b(v)-12 b(erage)270
b(co)-12 b(v)g(erage)271 b(of)f(a)e(node)j(for)e(dif)-19
b(ferent)270 b(size)g(of)f(B)-27 b(A)34180 13754 y(graphs.)6285
15908 y Fu(c)p Ft(\()p Fu(A;)184 b(y)40 b Ft(\))309 b
Fu(<)f(c)p Ft(\()p Fu(A;)184 b Ft(\251\))9580 b Fy(\(4\))6094
17568 y Fu(c)p Ft(\()p Fu(B)56 b(;)184 b(y)40 b Ft(\))308
b Fu(>)f(c)p Ft(\()p Fu(B)56 b(;)184 b Ft(\252\))9579
b Fy(\(5\))-1453 19407 y(Using)388 b(Eq.)g(\(5\))f(in)h(Eq.)g(\(3\))f
(we)h(obtain:)2574 22021 y Fu(c)p Ft(\()p Fu(B)56 b(;)184
b(x)p Ft(\))247 b(+)f Fu(c)p Ft(\()p Fu(C)18 b(;)184
b(x)p Ft(\))309 b Fu(>)f(c)p Ft(\()p Fu(B)56 b(;)184
b Ft(\252\))247 b(+)f Fu(c)p Ft(\()p Fu(C)18 b(;)184
b(y)40 b Ft(\))3845 b Fy(\(6\))-1453 23791 y(Applying)413
b(Eqs)e(\(6\))f(and)i(\(4\))e(to)h(the)h(dif)-28 b(ference)412
b Fu(c)19006 23389 y Fp(\()p Fo(m)p Fp(\))20802 23791
y Fq(\241)263 b Fu(c)22405 23389 y Fp(\()p Fo(m)p Fp(+1\))25059
23791 y Fy(,)-2560 24898 y(we)388 b(can)h(no)-28 b(w)389
b(sho)-28 b(w)388 b(the)h(follo)-28 b(wing:)-2007 26668
y FA(c)-1564 26190 y Fh(\()p Fg(m)p Fh(\))86 26668 y
Ff(\241)228 b FA(c)1553 26190 y Fh(\()p Fg(m)p Fh(+1\))4286
26668 y Fe(=)-3607 27042 y Fd(\265)-2853 28445 y FA(c)p
Fe(\()p FA(B)50 b(;)171 b(x)p Fe(\))228 b(+)g FA(c)p
Fe(\()p FA(C)14 b(;)172 b(x)p Fe(\))228 b(+)g FA(c)p
Fe(\()p FA(A;)171 b Fe(\251\))8972 27042 y Fd(\266)9953
28445 y Ff(\241)10977 27042 y Fd(\265)11731 28445 y FA(c)p
Fe(\()p FA(A;)g(y)36 b Fe(\))228 b(+)g FA(c)p Fe(\()p
FA(C)14 b(;)171 b(y)36 b Fe(\))228 b(+)g FA(c)p Fe(\()p
FA(B)50 b(;)171 b Fe(\252\))23531 27042 y Fd(\266)24569
28445 y Fe(=)-3607 29987 y Fd(\265)-2853 31389 y FA(c)p
Fe(\()p FA(B)50 b(;)171 b(x)p Fe(\))228 b(+)g FA(c)p
Fe(\()p FA(C)14 b(;)172 b(x)p Fe(\))228 b Ff(\241)g FA(c)p
Fe(\()p FA(B)50 b(;)171 b Fe(\252\))228 b Ff(\241)g FA(c)p
Fe(\()p FA(C)14 b(;)171 b(y)36 b Fe(\))13316 29987 y
Fd(\266)14298 31389 y Fe(+)15322 29987 y Fd(\265)16075
31389 y FA(c)p Fe(\()p FA(A;)172 b Fe(\251\))227 b Ff(\241)h
FA(c)p Fe(\()p FA(A;)171 b(y)36 b Fe(\))23531 29987 y
Fd(\266)24569 31389 y FA(>)285 b Fe(0)-2149 34600 y Fy(which)413
b(pro)-17 b(v)g(es)413 b(the)f(claim)g(also)g(for)f(the)h
Fu(W)15792 34025 y Fp(\()p Fo(m)p Fp(\))15638 34933 y
Fo(\265)17677 34600 y Fq(6)p Ft(=)351 b Fu(W)20088 34025
y Fp(\()p Fo(m)p Fp(+1\))19934 34933 y Fo(\265)23154
34600 y Fy(case,)-2560 35928 y(thus)388 b(completing)h(the)f(proof.)p
24688 35928 648 648 v -1453 37213 a(W)-89 b(e)257 b(can)h(control)f
(the)g(con)-44 b(v)-17 b(er)d(gence)261 b(speed)c(by)h(requiring)f
(each)h(turn)-2560 38541 y(to)456 b(reduce)i(the)f(cost)f(by)h(a)f(f)
-11 b(actor)457 b(of)f Fu(\256)t Fy(,)g(in)g(order)h(for)e(the)i(turn)f
(to)-2560 39869 y(be)420 b(accepted)h(and)g(continue)g(the)e
(optimizing)h(process;)g Fw(i.e)-17 b(.)p Fy(,)418 b(accept)-2560
41198 y(the)541 b(outcome)h(from)f(the)f(re-optimization)i(of)e(an)i
Fu(r)31 b Fy(-shape)541 b(at)g(the)-2560 42526 y Fu(m)p
Fy(th)381 b(iteration,)f(only)i(if)e Fu(c)7885 42124
y Fp(\()p Fo(m)p Fp(\))9725 42526 y Fq(\270)308 b Ft(\(1)234
b(+)f Fu(\256)t Ft(\))p Fu(c)14826 42124 y Fp(\()p Fo(m)p
Fp(+1\))17480 42526 y Fy(.)381 b(In)f(this)g(case,)i(the)-2560
43855 y(follo)-28 b(wing)389 b(proposition)f(describes)h(the)f(con)-44
b(v)-17 b(er)d(gence)392 b(speed.)-1453 45139 y Fw(Pr)-50
b(oposition)389 b(2:)553 b Fy(The)411 b(iterati)-28 b(v)-17
b(e)410 b(local)g(search)h(approach)h(for)d(dis-)-2560
46468 y(trib)-22 b(uted)388 b(f)-11 b(acility)387 b(location)i(con)-44
b(v)-17 b(er)d(ges)391 b(in)c Fu(O)31 b Ft(\(log)17494
46738 y Fp(1+)p Fo(\256)19430 46468 y Fu(n)p Ft(\))388
b Fy(steps.)-346 47770 y Fw(Pr)-50 b(oof:)646 b Fy(Let)323
b Fu(c)5417 47368 y Fp(\(0\))6606 47770 y Fy(,)f Fu(c)7684
47368 y Fp(\()p Fo(M)83 b Fp(\))9359 47770 y Fy(,)322
b Fu(c)10437 47368 y Fl(\244)11269 47770 y Fy(denote)j(the)f(initial)e
(cost,)h(a)g(locally)-2560 49098 y(minimum)511 b(cost)g(obtained)i(at)e
(the)g(last)f(\()p Fu(M)121 b Fy(th\))509 b(iteration,)i(and)h(the)
-2560 50427 y(minimum)471 b(cost)f(of)g(a)h(\(globally\))g(optimal)g
(solution,)f(respecti)-28 b(v)-17 b(ely)-72 b(.)-2560
51755 y(Here)277 b(we)h(consider)g Fu(M)397 b Fy(to)277
b(be)g(the)h(number)g(of)f(\223ef)-28 b(fecti)g(v)-17
b(e\224)280 b(iterations,)-2560 53083 y(i.e.,)351 b(ones)h(that)g
(reduce)i(the)e(cost)g(by)h(the)f(required)h(f)-11 b(actor)-61
b(.)351 b(The)i(total)-2560 54412 y(number)372 b(of)e(iterations)g(can)
i(be)f(a)g(multiple)g(of)f Fu(M)491 b Fy(up)371 b(to)f(a)h(constant)
-2560 55740 y(gi)-28 b(v)-17 b(en)439 b(by)g(the)e(number)i(of)f(f)-11
b(acilities.)436 b(Since)j(we)e(are)h(interested)g(in)-2560
57068 y(asymptotic)332 b(comple)-17 b(xity)333 b(we)e(can)h(disre)-17
b(g)-6 b(ard)332 b(this)e(and)i(focus)g(on)f Fu(M)121
b Fy(.)-1453 58353 y(F)-17 b(or)404 b Fu(m)336 b(<)h(M)523
b Fy(we)404 b(ha)-22 b(v)-17 b(e)406 b(required)e(that)g
Fu(c)15357 57952 y Fp(\()p Fo(m)p Fp(\))17226 58353 y
Fq(\270)336 b Ft(\(1)259 b(+)e Fu(\256)t Ft(\))p Fu(c)22404
57952 y Fp(\()p Fo(m)p Fp(+1\))25059 58353 y Fy(,)-2560
59682 y(or)348 b(equi)-28 b(v)g(alently)-72 b(,)352 b
Fu(c)5160 59280 y Fp(\(0\))6656 59682 y Fq(\270)307 b
Ft(\(1)174 b(+)g Fu(\256)t Ft(\))11158 59280 y Fo(m)12000
59682 y Fu(c)12479 59280 y Fp(\()p Fo(m)p Fp(\))14012
59682 y Fy(.)348 b(Thus)h(when)h(the)f(iteration)-2560
61010 y(con)-44 b(v)-17 b(er)d(ges)390 b(we)e(ha)-22
b(v)-17 b(e:)-3760 63535 y Fu(c)-3281 63078 y Fp(\(0\))-1785
63535 y Fq(\270)307 b Ft(\(1)240 b(+)f Fu(\256)t Ft(\))2848
63078 y Fo(M)3832 63535 y Fu(c)4311 63078 y Fp(\()p Fo(M)83
b Fp(\))6293 63535 y Fq(\))307 b Fu(M)428 b Fq(\267)308
b Ft(log)11807 63806 y Fp(1+)p Fo(\256)14119 62787 y
Fu(c)14598 62385 y Fp(\(0\))p 13876 63281 2154 45 v 13876
64315 a Fu(c)14355 63995 y Fp(\()p Fo(M)83 b Fp(\))16470
63535 y Fq(\267)308 b Ft(log)19068 63806 y Fp(1+)p Fo(\256)21137
62787 y Fu(c)21616 62385 y Fp(\(0\))p 21137 63281 1668
45 v 21477 64295 a Fu(c)21956 63975 y Fl(\244)24045 63535
y Fy(\(7\))-2560 65624 y(Gi)-28 b(v)-17 b(en)369 b(the)e(de\002nition)i
(of)d(the)i(cost)f(and)h(the)f(f)-11 b(act)367 b(that)g(node)h(service)
-2560 66952 y(demands)377 b(\()p Fu(s)p Ft(\()p Fu(v)40
b Ft(\))p Fy(')-61 b(s\))373 b(are)i(constants)g(with)g(respect)g(to)f
(the)h(size)g(of)g(the)-2560 68280 y(input)385 b(\()p
Fu(n)p Fy(\),)f(it)g(is)f(easy)j(to)e(see)h(that)g Fu(c)12204
67879 y Fp(\(0\))13777 68280 y Fy(can)h(be)f(upper)h(bounded)h(by)-2560
69609 y Fu(O)31 b Ft(\()p Fu(n)-591 69207 y Fp(2)-93
69609 y Ft(\))473 b Fy(and)i Fu(c)3361 69207 y Fl(\244)4343
69609 y Fy(be)f(lo)-28 b(wer)474 b(bounded)i(by)e Ft(\255\()p
Fu(n)p Ft(\))p Fy(.)h(This)e(leads)h(to)f(an)-2560 71070
y Fu(O)31 b Ft(\()p Fu(n)p Ft(\))431 b Fy(upper)f(bound)i(for)8268
70635 y Fo(c)8664 70301 y Fj(\(0\))p 8268 70816 1428
45 v 8553 71452 a Fo(c)8949 71231 y Fc(\244)9828 71070
y Fy(.)d(Substituting)h(in)g(Eq.)f(\(7\))g(gi)-28 b(v)-17
b(es)431 b(the)-2560 72399 y(claimed)389 b(upper)g(bound)h(for)d(the)h
(number)h(of)f(iterations.)p 24688 72399 648 648 v 26664
15908 a Fw(B.)553 b(The)980 b(Mapping)g(Err)-50 b(or)978
b(and)i(its)d(Ef)-20 b(fect)979 b(on)g(Local)h(Re-)26664
17236 y(Optimizations)33411 29571 y @beginspecial 88
@llx 154 @lly 622 @urx 609 @ury 1296 @rwi @setspecial
%%BeginDocument: costas_trigonometry.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Microsoft PowerPoint - dfl)
%%Version: 1 4
%%Creator: Adobe Acrobat 6.0
%%CreationDate: 18:45:22 07/31/06
%%For: (okon)
%%DocumentData: Clean7Bit
%%BoundingBox: 88 154 622 609
%%HiResBoundingBox: 88.499329 154.498825 622.495255 608.995346
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L1 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr SEPS ttf hb Printer/PostScript Color Management 0


%%BeginResource: file Pscript_T42Hdr PSVER
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.18 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.18 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset l2compat 6.0 1
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
/getrampcolor {
cvi
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/sssetbackground { L1setcolor } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset sep_ops 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/undefineRes {
null exch
defineRes
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource Times-Italic
[/N13/Times-Italic 1 TZ
%%IncludeResource Times-Bold
[/N15/Times-Bold 1 TZ
%%IncludeResource Times-Roman
[/N16/Times-Roman 1 TZ

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 1205 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<?adobe-xap-filters esc="CRLF"?>
<x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-13, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
<rdf:Description rdf:about='uuid:0b6e02da-57b0-417b-af8b-deeef3159ba9' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='Acrobat Distiller 6.0 (Windows)'></rdf:Description>
<rdf:Description rdf:about='uuid:0b6e02da-57b0-417b-af8b-deeef3159ba9' xmlns:xap='http://ns.adobe.com/xap/1.0/' xap:CreateDate='2006-07-31T18:43:02+03:00' xap:CreatorTool='PScript5.dll Version 5.2.2' xap:ModifyDate='2006-07-31T18:43:02+03:00'></rdf:Description>
<rdf:Description rdf:about='uuid:0b6e02da-57b0-417b-af8b-deeef3159ba9' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:76fdcbfa-08a2-44ff-b4c1-8e112c7c24db'/>
<rdf:Description rdf:about='uuid:0b6e02da-57b0-417b-af8b-deeef3159ba9' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:creator><rdf:Seq><rdf:li>okon</rdf:li></rdf:Seq></dc:creator><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Microsoft PowerPoint - dfl</rdf:li></rdf:Alt></dc:title></rdf:Description>
</rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
88 154 534 454 rectclip
[ 0 -1 1 0 -65.9995 697.49467 ] concat
/N11 [/DeviceRGB] /ColorSpace defineRes pop

%ADOBeginSubsetFont: OEEHJG+Symbol-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (OEEHJG+Symbol)
%%Title: (OEEHJG+Symbol Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /OEEHJG+Symbol def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {0 -220 1113 1005} def
/FontInfo 4 dict dup begin
/FSType 0 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 192 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 1 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B7C3C9ED920C533BFCEF627DC3963E487931C80D1235BDD70
699E096A6312D> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /OEEHJG+Symbol-Identity-H /Identity-H 0 [/OEEHJG+Symbol] ct_ComposeFont pop end end
%ADOEndSubsetFont
%%BeginResource: encoding
% Identity-H
%PDF_BeginEncoding: N14 (OEEHJG+Symbol-Identity-H)
/N14 (OEEHJG+Symbol-Identity-H) /Identity-H [ (OEEHJG+Symbol) ]
 /NoSubstitution [ /Serif ] 0 TZzero
%%EndResource
88.499329 154.498825 454.496521 533.995926 re
W
n
q
n
567.440002 61.039997 -540.0 719.999981 re
27.439999 61.039997 m
eoclip
n
n
27.439999 61.039997 540.000004 719.999981 re
1.0 1.0 1.0 setrgbcolor
f
Q
1 j
2.25 w
[9.0 6.75 ] 0.0 d
n
240.800003 421.039978 m
240.800003 370.880005 274.880005 330.320007 317.359985 330.320007 c
359.600006 330.320007 393.919983 370.880005 393.919983 421.039978 c
393.919983 470.959991 359.600006 511.759979 317.359985 511.759979 c
274.880005 511.759979 240.800003 470.959991 240.800003 421.039978 c
h
0.003922 0.003922 0.003922 setrgbcolor
S
3.0 w
[3.0 3.0 ] 0.0 d
n
93.200005 421.039978 m
93.200005 283.279999 192.319992 171.440002 314.47998 171.440002 c
436.639984 171.440002 535.519958 283.279999 535.519958 421.039978 c
535.519958 558.799988 436.639984 670.640015 314.47998 670.640015 c
192.319992 670.640015 93.200005 558.799988 93.200005 421.039978 c
h
S
0.0 0.0 0.0  setrgbcolor
411.200287 491.360291 m
/N13 [0.0 15.266205 -15.266205 0.0 0.0 0.0] Tf
(i) show
402.080292 480.320282 m
%ADOBeginSubsetFont: OEEHJG+Symbol-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/OEEHJG+Symbol 1 GetGlyphDirectory
88 <001C60D8A8C9B7FBE1CEDC77FC2E11D55DC0B294BFE8EC0A83887BBCA26A
87B703A73316AF952F00C4015D39D2C197CBA7F109C3B7B0A895870FE213ACAB
B557CB4C94EE272786EBA5D8F9F1261D83918005CB08F93619956FED1D315103
9854878121017F4CCA99BB850D4F58B8007F093D4B4710DF0FD1A1514195CEC3
AD7E93EFAB2FAA818E9EB218249FBAE64F6BC2AC9A85B17B618BFAB249CB3CD5
97BBBFDF9BA0F759E8FAA9769E0AF9D7E84B749CD8A4EAADD11015B7B7F2D5> |
!
end
end end
%ADOEndSubsetFont
/N14 [0.0 21.373199 -21.373199 7.309692 0.0 0.0] Tf
(\000X) show
n
389.119995 476.720001 m
338.23999 435.919983 l
336.320007 438.319977 l
387.200012 478.879974 l
h
341.359985 434.47998 m
331.519989 432.319977 l
335.600006 441.440002 l
0.003922 0.003922 0.003922  setrgbcolor
f
0.0 0.0 0.0  setrgbcolor
275.600281 322.640289 m
/N13 [0.0 15.346802 -15.346802 0.0 0.0 0.0] Tf
(j) show
266.480286 310.160278 m
/N14 [0.0 21.485504 -21.485504 7.348099 0.0 0.0] Tf
(\000X) show
n
262.160004 331.279999 m
280.160004 353.839996 l
282.559998 351.919983 l
264.559998 329.359985 l
h
277.040009 354.320007 m
286.160004 358.639984 l
284.0 348.800018 l
0.003922 0.003922 0.003922  setrgbcolor
f
q
n
136.639999 490.879974 26.160004 12.0 re
W
n
0.0 0.0 0.0  setrgbcolor
157.040298 490.88028 m
/N13 [0.0 23.706497 -23.706497 0.0 0.0 0.0] Tf
(u) show
Q
n
151.519989 488.720001 m
147.199997 467.839996 l
144.319992 468.319977 l
148.639999 489.440002 l
h
150.559998 468.800018 m
144.319992 460.880005 l
141.679993 470.47998 l
f
n
320.0 423.679993 m
320.0 422.23999 321.200012 420.800018 322.880005 420.800018 c
324.320007 420.800018 325.759979 422.23999 325.759979 423.679993 c
325.759979 425.359985 324.320007 426.559998 322.880005 426.559998 c
321.200012 426.559998 320.0 425.359985 320.0 423.679993 c
eofill
1 J
0.75 w
[] 0.0 d
n
320.0 423.679993 m
320.0 422.23999 321.200012 420.800018 322.880005 420.800018 c
324.320007 420.800018 325.759979 422.23999 325.759979 423.679993 c
325.759979 425.359985 324.320007 426.559998 322.880005 426.559998 c
321.200012 426.559998 320.0 425.359985 320.0 423.679993 c
h
S
n
286.160004 367.039978 m
286.160004 365.600006 287.359985 364.399994 288.800018 364.399994 c
290.47998 364.399994 291.679993 365.600006 291.679993 367.039978 c
291.679993 368.720001 290.47998 369.919983 288.800018 369.919983 c
287.359985 369.919983 286.160004 368.720001 286.160004 367.039978 c
eofill
n
286.160004 367.039978 m
286.160004 365.600006 287.359985 364.399994 288.800018 364.399994 c
290.47998 364.399994 291.679993 365.600006 291.679993 367.039978 c
291.679993 368.720001 290.47998 369.919983 288.800018 369.919983 c
287.359985 369.919983 286.160004 368.720001 286.160004 367.039978 c
h
S
n
138.800003 452.23999 m
138.800003 450.800018 140.0 449.359985 141.440002 449.359985 c
143.119995 449.359985 144.319992 450.800018 144.319992 452.23999 c
144.319992 453.919983 143.119995 455.119995 141.440002 455.119995 c
140.0 455.119995 138.800003 453.919983 138.800003 452.23999 c
eofill
n
138.800003 452.23999 m
138.800003 450.800018 140.0 449.359985 141.440002 449.359985 c
143.119995 449.359985 144.319992 450.800018 144.319992 452.23999 c
144.319992 453.919983 143.119995 455.119995 141.440002 455.119995 c
140.0 455.119995 138.800003 453.919983 138.800003 452.23999 c
h
S
0 J
2.25 w
n
144.319992 449.359985 m
320.0 421.039978 l
144.319992 449.359985 m
286.160004 369.919983 l
320.0 421.039978 m
286.160004 369.919983 l
240.800003 432.319977 m
286.160004 369.919983 l
314.47998 410.47998 m
310.160004 410.0 306.079987 409.759979 304.639984 411.440002 c
302.959991 413.119995 304.399994 417.200012 305.600006 421.039978 c
S
q
n
277.759979 404.0 23.76001 12.480011 re
W
n
0.0 0.0 0.0  setrgbcolor
296.960297 404.000275 m
%ADOBeginSubsetFont: OEEHJG+Symbol-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/OEEHJG+Symbol 1 GetGlyphDirectory
73 <001C60D8A8C9B7B202AAA6C9674913F00CDD1DF981B6CDDCF1D71490CC8A
21CA8375F493D08916028154773ED2F8F1E7D3BBF35D059590DEC91EA6CBFC7B
E331962771A9BF86DF553480CD1BDF2C778A99C05BB2457FFF92726DA8137DA3
B27603D9245207F1F63D17CCF183891D6DA9CCD30F14C2F1658B5FBCA8D8D23C
DEB6FF8E31EB1E8B0131DCEBDE03B90BE9FAAD9F4D2D689B74DE73AF8C00DC69
6EB49743577AD92F1ED5E9D4EDF3374BC5A99587511794F3F396B3D3710BB872
D37FFE3D81C7170F6104D84D2242CC2A2211C5A7D9843ED8E8110C5DF1> |
!
end
end end
%ADOEndSubsetFont
/N14 [0.0 21.059998 -21.059998 7.202896 0.0 0.0] Tf
(\000I) show
Q
0.13725 0.12549 0.12941  setrgbcolor
284.480286 434.000275 m
/N15 [0.0 18.0 -18.0 0.0 0.0 0.0] Tf
(r) show
318.320282 382.88028 m
(y) show
205.040894 450.799683 m
(x) show
125.601501 445.279083 m
(A) show
238.88089 439.758484 m
(B) show
340.8815 416.957886 m
(C) show
307.041504 354.557281 m
(D) show
0.0 0.0 0.0  setrgbcolor
304.400299 495.920288 m
/N16 [0.0 16.866501 -16.866501 0.0 0.0 0.0] Tf
(\)) show
304.400299 473.840363 m
(\() show
304.400299 481.760864 m
/N13 [0.0 16.866501 -16.866501 0.0 0.0 0.0] Tf
(m) show
332.720825 466.640045 m
(i) show
322.640289 453.680298 m
/N13 [0.0 23.6129 -23.6129 0.0 0.0 0.0] Tf
(V) show
308.240295 611.600281 m
/N16 [0.0 16.866501 -16.866501 0.0 0.0 0.0] Tf
(\)) show
308.240295 589.520325 m
(\() show
308.240295 597.440857 m
/N13 [0.0 16.866501 -16.866501 0.0 0.0 0.0] Tf
(m) show
336.560822 587.36145 m
(i) show
326.480286 567.200256 m
/N13 [0.0 23.6129 -23.6129 0.0 0.0 0.0] Tf
(U) show
n
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%DocumentNeededResources:
%%+ font Times-Italic
%%+ font Times-Roman
%%+ font Times-Bold
%%EOF

%%EndDocument
 @endspecial 26664 31428 a Fz(Fig.)326 b(4.)976 b(Example)325
b(of)g(a)h(possible)g(f)-9 b(acility)326 b(mo)-13 b(v)g(ement)325
b(from)g(node)f Fi(v)49929 31563 y Fg(i)50606 31428 y
Fz(to)h(node)g Fi(v)54125 31563 y Fg(j)26664 32424 y
Fz(with)310 b(respect)h(to)f(a)g(particular)g(node)g
Fi(u)261 b FE(2)h Fi(U)41135 32559 y Fg(i)41486 32424
y Fz(.)27771 34004 y Fy(In)393 b(this)g(section)h(we)g(discuss)f(an)h
(important)g(dif)-28 b(ference)395 b(between)26664 35332
y(solving)532 b(a)h(centralized)g(v)-17 b(ersion)533
b(of)f(UKM)g(or)g(UFL)h(\(Defs)e(1,)h(2\))26664 36661
y(applied)705 b(to)e(the)h(entire)f(netw)-11 b(ork)705
b(and)f(our)g(case)g(where)g(these)26664 37989 y(problems)420
b(are)f(solv)-17 b(ed)421 b(within)f(an)g Fu(r)31 b Fy(-shape)420
b(based)h(on)f(the)f(demand)26664 39317 y(that)341 b(results)e(from)i
(a)g(\002x)-17 b(ed)343 b(mapping)g(of)d(the)i(ring)e(demand)k(onto)d
(the)26664 40646 y(skin.)e(In)h(the)h(centralized)h(case,)e(the)h
(amount)g(of)f(demand)i(generated)26664 41974 y(by)326
b(a)f(node)i(is)e(not)g(af)-28 b(fected)327 b(by)f(the)g(particular)g
(con\002guration)i(of)d(the)26664 43303 y(f)-11 b(acilities)396
b(within)h(the)h(graph,)g(since)f(all)g(nodes)i(in)e(the)g(netw)-11
b(ork)399 b(are)26664 44631 y(included)478 b(and)g(considered)g(with)e
(their)g(original)h(service)g(demand.)26664 45959 y(In)434
b(our)h(case,)g(ho)-28 b(we)g(v)-17 b(er)-44 b(,)437
b(the)e(amount)h(of)e(demand)j(generated)g(by)f(a)26664
47288 y(skin)473 b(node)h(can)g(be)g(af)-28 b(fected)474
b(by)f(the)h(particular)f(con\002guration)j(of)26664
48616 y(f)-11 b(acilities)531 b(within)h(the)g Fu(r)31
b Fy(-shape.)532 b(In)g(Figure)h(4)f(we)h(illustrate)d(wh)-6
b(y)26664 49944 y(this)505 b(is)f(the)j(case.)f(Node)h
Fu(u)e Fy(on)h(the)g(ring)g(has)g(a)g(shortest)f(path)i(to)26664
51273 y(f)-11 b(acility)406 b(node)j Fu(v)33291 51439
y Fo(i)34066 51273 y Fy(that)e(intersects)g(the)g(skin)g(of)g
Fu(v)46598 51439 y Fo(i)46966 51273 y Fy(')-61 b(s)406
b Fu(r)31 b Fy(-ball)407 b(at)g(point)26664 52601 y(B,)278
b(thereby)j(increasing)f(the)g(demand)h(of)e(a)g(local)h(node)g(at)f
Fu(B)334 b Fy(by)280 b Fu(s)p Ft(\()p Fu(u)p Ft(\))p
Fy(.)26664 53929 y(As)272 b(the)h(locations)h(of)e(the)h(f)-11
b(acilities)272 b(may)i(change)h(during)f(the)f(v)-28
b(arious)26664 55258 y(steps)426 b(of)g(the)h(local)g(optimizing)h
(process)f(\(e.g.)f(the)h(f)-11 b(acility)426 b(mo)-17
b(v)g(es)26664 56586 y(from)348 b Fu(C)429 b Fy(to)349
b Fu(D)31 b Fy(,)349 b(Figure)h(4\),)f(the)g(skin)g(node)i(along)g(the)
e(shortest)g(path)26664 57914 y(between)482 b Fu(u)d
Fy(and)j(the)e(ne)-28 b(w)482 b(location)f(of)f(the)g(f)-11
b(acility)480 b(may)h(change)26664 59243 y(\(node/point)351
b Fu(E)414 b Fy(in)350 b(Figure)h(4\).)e(Consequently)-72
b(,)353 b(a)d(demand)i Fw(mapping)26664 60571 y(err)-50
b(or)397 b Fy(is)372 b(introduced)i(by)g(k)-11 b(eeping)374
b(the)f(mapping)i(\002x)-17 b(ed)374 b(\(as)e(initially)26664
61899 y(determined\))351 b(throughout)i(the)e(location)g(optimization)h
(process.)f(Let)26664 63228 y Ft(\242)27586 63394 y Fo(i)27955
63228 y Ft(\()p Fu(r)-31 b(;)184 b(j)r(;)g(u)p Ft(\))446
b Fy(denote)f(the)f(amount)h(of)e(mapping)j(error)d(attrib)-22
b(uted)444 b(to)26664 64556 y(ring)499 b(node)i Fu(u)e
Fy(with)g(respect)g(to)h(a)f(mo)-17 b(v)g(e)502 b(of)d(the)g(f)-11
b(acility)499 b(from)g Fu(v)54191 64722 y Fo(i)26664
65885 y Fy(to)447 b Fu(v)28509 66051 y Fo(j)29423 65885
y Fy(under)i(the)g(aforementioned)h(\002x)-17 b(ed)450
b(mapping)g(and)f(radius)f Fu(r)31 b Fy(.)26664 67213
y(Then)357 b(the)f Fw(total)g(mapping)i(err)-50 b(or)381
b Fy(introduced)358 b(in)e(domain)h Fu(W)51314 67379
y Fo(i)52039 67213 y Fy(under)26664 68541 y(radius)388
b Fu(r)418 b Fy(is)387 b(gi)-28 b(v)-17 b(en)390 b(by:)32439
70490 y Ft(\242)33361 70656 y Fo(i)33730 70490 y Ft(\()p
Fu(r)31 b Ft(\))309 b(=)37003 69439 y Fm(X)36730 71662
y Fk(v)37130 71840 y(j)37544 71662 y Fc(2)p Fk(V)38525
71840 y(i)36736 72445 y(v)37136 72623 y(j)37550 72445
y Fc(6)p Fj(=)p Fk(v)38519 72623 y(i)40594 69439 y Fm(X)39192
71822 y Fo(u)p Fl(2)p Fo(U)40915 71933 y Fk(i)41266 71822
y Fo(v)41709 71933 y Fk(j)42122 71822 y Fl(6)p Fp(=)p
Fo(v)43245 71933 y Fk(i)43780 70490 y Ft(\242)44702 70656
y Fo(i)45071 70490 y Ft(\()p Fu(r)-31 b(;)184 b(j)r(;)g(u)p
Ft(\))p Fu(:)4488 b Fy(\(8\))p eop end
%%Page: 6 6
TeXDict begin 6 5 bop -2560 -672 a Fy(The)599 b(mapping)h(error)d(in)h
(Eq.)h(\(8\))e(could)i(be)g(eliminated)g(by)g(re-)-2560
657 y(computing)437 b(the)f(skin)f(mapping)i(at)e(each)i(stage)e(of)g
(the)h(optimizing)-2560 1985 y(process)320 b(\(i.e.,)e(for)h(each)j(ne)
-28 b(w)320 b(intermediate)h(f)-11 b(acility)320 b(con\002guration\).)
-2560 3313 y(Such)479 b(an)f(approach)i(not)e(only)g(w)-11
b(ould)479 b(add)f(to)g(the)f(computational)-2560 4642
y(cost)e(b)-22 b(ut)475 b(\226)g(most)f(important)i(\226)f(w)-11
b(ould)476 b(be)f(practically)h(e)-17 b(xtremely)-2560
5970 y(dif)-28 b(\002cult)529 b(to)f(implement)h(as)f(it)g(w)-11
b(ould)529 b(require)g(the)g(collection)g(of)-2560 7298
y(demand)352 b(statistics)d(under)i(each)h(ne)-28 b(w)351
b(f)-11 b(acility)350 b(placement,)i(delaying)-2560 8627
y(the)520 b(optimization)h(process)g(and)g(inducing)h(substantial)e(o)
-17 b(v)g(erhead.)-2560 9955 y(Instead)525 b(of)f(trying)g(to)g
(eliminate)h(the)g(mapping)h(error)d(one)j(could)-2560
11284 y(try)633 b(to)g(assess)f(its)g(magnitude)k(\(and)e(potential)g
(impact\))g(on)g(the)-2560 12612 y(ef)-28 b(fecti)g(v)-17
b(eness)485 b(of)e(the)h(distrib)-22 b(uted)483 b(UKM/UFL.)h(This)f(is)
f(e)-17 b(xplored)-2560 13940 y(ne)g(xt.)-1453 15265
y(The)274 b(e)-17 b(xample)276 b(depicted)f(in)e(Figure)h(4)g(helps)g
(deri)-28 b(v)-17 b(e)275 b(an)f(e)-17 b(xpression)-2560
16593 y(for)307 b(the)h(mapping)h(error)e Ft(\242)8259
16759 y Fo(i)8628 16593 y Ft(\()p Fu(r)-31 b(;)184 b(j)r(;)g(u)p
Ft(\))p Fy(,)310 b(assuming)f(a)f(tw)-11 b(o-dimensional)-2560
17921 y(plane)396 b(where)g(nodes)f(are)g(scattered)h(in)e(a)h(uniform)
g(and)h(continuous)-2560 19250 y(manner)435 b(o)-17 b(v)g(er)436
b(the)e(depicted)i(domain.)f Ft(\242)14484 19416 y Fo(i)14853
19250 y Ft(\()p Fu(r)-31 b(;)184 b(j)r(;)g(u)p Ft(\))437
b Fy(corresponds)e(to)-2560 20578 y(the)341 b(length)h(dif)-28
b(ference)342 b(of)e(the)h(tw)-11 b(o)341 b(dif)-28 b(ferent)341
b(routes)g(between)h(node)-2560 21906 y Fu(u)387 b Fy(\(point)h
Fu(A)p Fy(\))f(and)i(node)h Fu(v)8142 22072 y Fo(j)8995
21906 y Fy(\(point)e Fu(D)31 b Fy(\).)387 b(Therefore,)4122
23965 y Ft(\242)5044 24131 y Fo(i)5413 23965 y Ft(\()p
Fu(r)-31 b(;)184 b(j)r(;)g(u)p Ft(\))311 b(=)c Fu(AB)302
b Ft(+)246 b Fu(B)56 b(D)276 b Fq(\241)246 b Fu(AD)31
b(:)5393 b Fy(\(9\))-2560 26033 y(Note)264 b(that)f(for)g(those)h
(cases)f(in)h(which)g(the)g(angle)17045 25740 y Ft(^)16899
26033 y Fu(\301)f Fy(between)i Fu(AC)343 b Fy(and)-2560
27361 y Fu(C)79 b(D)31 b Fy(,)333 b(is)e Ft(0)i Fy(or)f
Fu(\274)40 b Fy(,)332 b Fu(AB)199 b Ft(+)144 b Fu(B)56
b(D)338 b Ft(=)308 b Fu(AD)31 b Fy(,)332 b(and)i(therefore,)f
Ft(\242)20393 27527 y Fo(i)20762 27361 y Ft(\()p Fu(r)-31
b(;)184 b(j)r(;)g(u)p Ft(\))310 b(=)-2560 28699 y(0)p
Fy(.)484 b(F)-17 b(or)485 b(an)-17 b(y)485 b(other)g(v)-28
b(alue)485 b(of)9987 28406 y Ft(^)9842 28699 y Fu(\301)p
Fy(,)e Fu(AB)56 b Fy(,)483 b Fu(B)56 b(D)514 b Fy(and)485
b Fu(AD)515 b Fy(correspond)-2560 30027 y(to)377 b(the)g(edges)i(of)e
(the)g(same)h(triangle)f(and)h(therefore,)g Fu(AB)281
b Ft(+)227 b Fu(B)56 b(D)256 b Fq(\241)-2560 31355 y
Fu(AD)339 b(>)307 b Ft(0)388 b Fy(or)g Ft(\242)3866 31521
y Fo(i)4235 31355 y Ft(\()p Fu(r)-31 b(;)184 b(j)r(;)g(u)p
Ft(\))310 b Fu(>)e Ft(0)p Fy(.)-1453 32680 y(Based)572
b(on)g(Eq.)f(\(9\),)f(it)g(is)g(possible)h(to)g(deri)-28
b(v)-17 b(e)573 b(the)e(follo)-28 b(wing)-2560 34008
y(upper)387 b(bound)h(re)-17 b(g)-6 b(arding)388 b(the)e(total)g
(mapping)i(error)d Ft(\242)19914 34174 y Fo(i)20283 34008
y Ft(\()p Fu(r)31 b Ft(\))387 b Fy(for)e(this)-2560 35336
y(particular)j(en)-44 b(vironment)390 b(\(see)e(Appendix)i(I)d(for)g
(the)h(deri)-28 b(v)g(ation\):)5488 37395 y Ft(\242)6410
37561 y Fo(i)6779 37395 y Ft(\()p Fu(r)31 b Ft(\))309
b Fq(\267)e Ft(2)p Fu(\274)10870 36938 y Fp(2)11367 37395
y Fu(r)11897 36938 y Fp(3)12394 37395 y Ft(\()p Fu(R)13674
36938 y Fp(2)14416 37395 y Fq(\241)246 b Fu(r)16053 36938
y Fp(2)16549 37395 y Ft(\))p Fu(;)6205 b Fy(\(10\))-2560
39453 y(where)665 b Fu(R)671 b Fy(is)663 b(the)h(radius)g(of)g(the)g
(particular)g(domain)i Fu(W)22644 39619 y Fo(i)23676
39453 y Fy(\(for)-2560 40782 y(simplicity)387 b(we)h(assume)h(that)f
(the)g(domain)h(is)e(also)g(a)h(circle\).)-1453 42106
y(According)402 b(to)f(Eq.)f(\(10\),)g(the)h(upper)h(bound)g(for)e
Ft(\242)19762 42272 y Fo(i)20131 42106 y Ft(\()p Fu(r)31
b Ft(\))401 b Fy(is)f(close)-2560 43434 y(to)370 b Ft(0)p
Fy(,)f(when)i Fu(r)339 b Fq(!)307 b Ft(0)370 b Fy(or)g
Fu(r)339 b Fq(!)307 b Fu(R)9 b Fy(.)368 b(W)-89 b(e)371
b(are)f(interested)g(in)f(those)i(cases)-2560 44763 y(where)277
b(the)g Fu(r)31 b Fy(-ball)276 b(is)f(small.)h(This)g(corresponds)i(to)
e(small)g(v)-28 b(alues)277 b(of)f Fu(r)-2560 46091 y
Fy(for)431 b(the)h(particular)g(\(tw)-11 b(o-dimensional)433
b(continuous\))g(en)-44 b(vironment.)-2560 47420 y(Therefore,)355
b(a)g(small)f(radius)g Fu(r)386 b Fy(in)354 b(addition)i(to)e(being)i
(preferable)g(for)-2560 48748 y(scalability)380 b(reasons)g(has)f(the)h
(added)i(adv)-28 b(antage)383 b(of)c(f)-11 b(acilitating)380
b(the)-2560 50076 y(use)466 b(of)f(a)h(simple)g(and)h(practical)f
(mapping)i(with)e(small)f(error)g(and)-2560 51405 y(e)-17
b(xpected)391 b(performance)f(penalty)-72 b(.)-418 53457
y(V)-87 b(.)609 b(S)56 b Fz(Y)g(N)g(T)g(H)g(E)g(T)g(I)g(C)322
b Fy(R)56 b Fz(E)g(S)g(U)g(L)-25 b(T)56 b(S)325 b(O)56
b(N)331 b Fy(E)56 b(R)332 b Fz(A)56 b(N)g(D)330 b Fy(B)17
b(A)332 b(G)56 b Fz(R)e(A)i(P)g(H)g(S)-1453 55130 y Fy(In)416
b(this)f(section)i(we)g(e)-28 b(v)g(aluate)418 b(our)f(distrib)-22
b(uted)416 b(f)-11 b(acility)416 b(location)-2560 56459
y(approach)556 b(on)e(synthetic)h(Erd)9951 56453 y(\250)9859
56459 y(os-R)12011 56453 y(\264)11950 56459 y(en)-17
b(yi)555 b(\(ER\))e([3])g(and)i(Barab)23797 56453 y(\264)23736
56459 y(asi-)-2560 57787 y(Albert)503 b(\(B)-39 b(A\))502
b([4])g(graphs)h(generated)i(using)e(the)h(BRITE)f(genera-)-2560
59115 y(tor)340 b([19)q(].)g(F)-17 b(or)341 b(ER)g(graphs,)h(BRITE)f
(uses)g(the)g(W)-89 b(axman)343 b(model)f([20)q(])-2560
60444 y(in)544 b(which)i(the)e(probability)i(that)e(tw)-11
b(o)544 b(nodes)i(ha)-22 b(v)-17 b(e)546 b(a)e(direct)h(link)-2560
61772 y(is)448 b Fu(P)154 b Ft(\()p Fu(u;)184 b(v)40
b Ft(\))422 b(=)g Fu(\256)453 b(e)5435 61370 y Fl(\241)p
Fo(d=)p Fp(\()p Fo(\257)40 b(L)p Fp(\))8938 61772 y Fy(,)449
b(where)i Fu(d)e Fy(is)f(the)i(Euclidean)i(distance)-2560
63100 y(between)490 b Fu(u)d Fy(and)h Fu(v)40 b Fy(,)487
b(and)i Fu(L)e Fy(is)g(the)h(maximum)h(distance)g(between)-2560
64429 y(an)-17 b(y)574 b(tw)-11 b(o)572 b(nodes.)h(W)-89
b(e)573 b(maintain)g(the)f(def)-11 b(ault)573 b(v)-28
b(alues)573 b(of)f(BRITE)-2560 65757 y Fu(\256)585 b
Ft(=)580 b(0)p Fu(:)p Ft(15)p Fu(;)722 b(\257)638 b Ft(=)581
b(0)p Fu(:)p Ft(2)536 b Fy(combined)i(with)d(an)g(incremental)i(model)
-2560 67085 y(in)566 b(which)i(each)g(node)g(connects)h(to)d
Fu(m)639 b Ft(=)f(2)567 b Fy(other)g(nodes.)g(F)-17 b(or)-2560
68414 y(B)-39 b(A)577 b(graphs)h(we)g(also)f(use)g(incremental)i(gro)
-28 b(wth)578 b(with)f Fu(m)658 b Ft(=)g(2)p Fy(.)-2560
69742 y(This)405 b(parameterization)j(creates)e(graphs)g(in)g(which)g
(the)g(number)h(of)-2560 71070 y(\(undirected\))363 b(links)f(is)f
(almost)h(double)i(the)f(number)g(of)f(v)-17 b(ertices)363
b(\(as)-2560 72399 y(also)326 b(observ)-17 b(ed)327 b(in)f(real)g(AS)g
(traces)g(that)f(we)h(use)g(later)g(in)f(the)h(paper\).)26664
-672 y Fw(A.)553 b(Node)389 b(Co)-11 b(ver)-17 b(a)-11
b(g)g(e)391 b(with)d(Radius)g Fu(r)27771 1828 y Fy(Figures)687
b(2)g(and)h(3)g(depict)g(the)f(fraction)g(of)g(the)g(total)g(node)26664
3157 y(population)277 b(that)d(can)i(be)f(reached)i(in)e
Fu(r)305 b Fy(hops)276 b(starting)e(from)g(a)h(certain)26664
4485 y(node)473 b(in)e(ER)h(and)h(B)-39 b(A)472 b(graphs,)g(respecti)
-28 b(v)-17 b(ely)-72 b(.)474 b(W)-89 b(e)472 b(plot)f(the)h(mean)26664
5813 y(and)374 b(the)g Ft(95\045)h Fy(con\002dence)j(interv)-28
b(al)374 b(of)f(each)j(node)f(under)g(dif)-28 b(ferent)26664
7142 y(netw)-11 b(ork)320 b(sizes)f Fu(n)308 b Ft(=)627
b(400)p Fu(;)506 b Ft(600)p Fu(;)f Ft(800)p Fu(;)h Ft(1000)p
Fy(,)321 b(representing)g(typical)26664 8470 y(populations)442
b(of)e(core)g(ASes)h(on)g(the)f(Internet)h(as)f(ar)-20
b(gued)442 b(later)d(on.)26664 9799 y(The)276 b(\002gures)g(sho)-28
b(w)276 b(that)f(a)g(node)i(can)f(reach)h(a)e(substantial)h(fraction)f
(of)26664 11127 y(the)365 b(total)g(node)h(population)h(by)f(using)f(a)
h(relati)-28 b(v)-17 b(ely)366 b(small)e Fu(r)31 b Fy(.)365
b(In)f(ER)26664 12455 y(graphs,)386 b Fu(r)338 b Ft(=)308
b(2)386 b Fy(co)-17 b(v)g(ers)387 b Ft(2\045)243 b Fq(\241)e
Ft(10\045)387 b Fy(of)e(the)h(nodes,)h(whereas)f Fu(r)339
b Ft(=)308 b(3)26664 13784 y Fy(increases)381 b(the)h(co)-17
b(v)g(erage)384 b(to)d Ft(10\045)235 b Fq(\241)e Ft(32\045)p
Fy(,)382 b(depending)i(on)e(netw)-11 b(ork)26664 15112
y(size.)375 b(The)h(co)-17 b(v)g(erage)379 b(is)374 b(e)-28
b(v)-17 b(en)378 b(higher)e(in)f(B)-39 b(A)376 b(graphs,)g(where)h
Fu(r)338 b Ft(=)308 b(2)26664 16440 y Fy(co)-17 b(v)g(ers)258
b Ft(4\045)s Fq(\241)s Ft(15\045)p Fy(,)f(whereas)g Fu(r)339
b Ft(=)307 b(3)257 b Fy(co)-17 b(v)g(ers)258 b Ft(20\045)s
Fq(\241)s Ft(50\045)p Fy(,)g(depending)26664 17769 y(ag)-6
b(ain)480 b(on)f(netw)-11 b(ork)479 b(size.)g(These)g(observ)-28
b(ations)480 b(are)f(e)-17 b(xplained)481 b(by)26664
19097 y(the)620 b(f)-11 b(act)620 b(that)g(lar)-20 b(ger)621
b(netw)-11 b(orks)620 b(e)-17 b(xhibit)622 b(longer)f(shortest)e(paths)
26664 20425 y(and)529 b(diameters)g(and)g(also)f(because)j(B)-39
b(A)528 b(graphs,)h(o)-28 b(wing)530 b(to)e(their)26664
21754 y(highly)283 b(sk)-11 b(e)-28 b(wed)284 b(\(po)-28
b(wer)-22 b(-la)-17 b(w\))284 b(de)-17 b(gree)284 b(distrib)-22
b(ution,)282 b(possess)g(shorter)26664 23082 y(shortest)335
b(paths)i(and)g(diameters)f(than)h(corresponding)i(ER)d(graphs)h(of)
26664 24410 y(the)388 b(same)g(link)g(density)-72 b(.)26664
28485 y Fw(B.)553 b(P)-89 b(erformance)391 b(of)c(distrib)-22
b(uted)388 b(UKM)27771 30985 y Fy(In)567 b(this)f(section)i(we)g(e)-17
b(xamine)569 b(the)f(performance)h(of)e(our)h(dis-)26664
32313 y(trib)-22 b(uted)396 b(UKM)f(of)h(radius)g Fu(r)31
b Fy(,)395 b(hereafter)h(referred)g(to)g(as)f(dUKM\()p
Fu(r)31 b Fy(\),)26664 33641 y(when)394 b(compared)i(to)d(the)h
(centralized)h(UKM)f(utilizing)f(full)g(kno)-28 b(wl-)26664
34970 y(edge.)728 b(W)-89 b(e)728 b(\002x)f(the)h(netw)-11
b(ork)728 b(size)f(to)g Fu(n)936 b Ft(=)g(400)728 b Fy(\(matching)26664
36298 y(measurement)553 b(data)g(on)g(core)f(Internet)g(ASes)h(that)f
(we)g(use)g(later)26664 37626 y(on\))460 b(and)g(assume)g(that)g(all)f
(nodes)i(generate)h(the)e(same)g(amount)h(of)26664 38955
y(service)438 b(demand)h Fu(s)p Ft(\()p Fu(v)40 b Ft(\))400
b(=)f(1)p Fu(;)184 b Fq(8)p Fu(v)440 b Fq(2)399 b Fu(V)246
b Fy(.)437 b(T)-89 b(o)438 b(ensure)g(scalability)-72
b(,)437 b(we)26664 40283 y(don')-20 b(t)369 b(w)-11 b(ant)369
b(our)f(distrib)-22 b(uted)369 b(solution)g(to)f(encounter)j
Fu(r)31 b Fy(-shapes)369 b(that)26664 41612 y(in)-44
b(v)-22 b(olv)-17 b(e)530 b(more)f(that)g Ft(10\045)g
Fy(of)g(the)g(total)f(nodes,)i(and)g(for)e(this)f(we)26664
42940 y(limit)362 b(the)h(radius)g(to)g Fu(r)339 b Ft(=)307
b(1)363 b Fy(and)i Fu(r)338 b Ft(=)308 b(2)p Fy(,)363
b(as)f(suggested)j(by)f(the)f(node)26664 44268 y(co)-17
b(v)g(erage)472 b(results)d(of)g(the)h(pre)-28 b(vious)470
b(section.)g(W)-89 b(e)470 b(let)f(the)g(fraction)26664
45597 y(of)445 b(nodes)i(that)f(are)g(able)g(to)g(act)g(as)f(f)-11
b(acilities)445 b(\()p Fw(i.e)-17 b(.)p Fy(,)444 b(service)j(hosts\))
26664 46925 y(tak)-11 b(e)365 b(v)-28 b(alues)365 b Fu(k)35
b(=n)309 b Ft(=)e(0)p Fu(:)p Ft(1\045)p Fu(;)184 b Ft(0)p
Fu(:)p Ft(5\045)p Fu(;)g Ft(1\045)p Fu(;)g Ft(2\045)p
Fu(;)373 b Fy(and)365 b Ft(5\045)p Fy(.)g(W)-89 b(e)365
b(perform)26664 48253 y(each)346 b(e)-17 b(xperiment)347
b(10)e(times)f(to)g(reduce)i(the)f(uncertainty)h(due)g(to)e(the)26664
49582 y(initial)387 b(random)i(placement)h(of)d(the)i
Fu(k)422 b Fy(f)-11 b(acilities.)27771 51145 y(The)290
b(plots)f(on)g(the)h(left-hand-side)g(of)f(Figure)h(5)f(depict)h(the)g
(cost)f(of)26664 52474 y(our)416 b(dUKM\()p Fu(r)31 b
Fy(\))416 b(approach)j(normalized)f(to)e(that)g(of)g(the)h(centralized)
26664 53802 y(UKM,)503 b(with)g(the)g(plot)h(on)f(top)h(for)f(ER)g
(graphs)h(and)g(the)g(plot)f(on)26664 55130 y(the)437
b(bottom)h(for)f(B)-39 b(A)438 b(graphs.)g(F)-17 b(or)438
b(both)g(ER)f(and)i(B)-39 b(A)438 b(graphs,)f(the)26664
56459 y(performance)410 b(of)e(our)g(distrib)-22 b(uted)408
b(solution)g(tracks)g(closely)h(that)f(of)26664 57787
y(the)529 b(centralized)j(one,)e(with)f(the)h(dif)-28
b(ference)531 b(diminishing)f(f)-11 b(ast)528 b(as)26664
59115 y Fu(r)505 b Fy(and)475 b Fu(k)508 b Fy(are)475
b(increased.)g(The)g(normalized)h(performance)g(for)d(B)-39
b(A)26664 60444 y(graphs)499 b(con)-44 b(v)-17 b(er)d(ges)501
b(f)-11 b(aster)498 b(\()p Fw(i.e)-17 b(.)p Fy(,)498
b(at)g(smaller)h Fu(k)533 b Fy(for)498 b(a)h(gi)-28 b(v)-17
b(en)501 b Fu(r)31 b Fy(\))498 b(to)26664 61772 y(ratios)423
b(that)h(approach)j(1.)d(This)f(o)-28 b(wes)425 b(to)f(the)g(e)-17
b(xistence)426 b(of)e(highly-)26664 63100 y(connected)303
b(nodes)d(\(the)g(so)f(call)h(\223hubs\224\))h(in)e(B)-39
b(A)300 b(graphs)g(\227)g(b)-22 b(uilding)26664 64429
y(f)-11 b(acilities)516 b(in)i(fe)-28 b(w)518 b(of)g(the)g(hubs)g(is)f
(suf)-28 b(\002cient)519 b(for)e(approximating)26664
65757 y(closely)557 b(the)g(performance)i(of)e(the)g(centralized)i
(UKM.)e(The)h(tw)-11 b(o)26664 67085 y(plots)379 b(on)h(the)g
(right-hand-side)g(of)g(Figure)g(5)g(depict)g(the)g(number)h(of)26664
68414 y(iterations)425 b(needed)k(for)c(dUKM\()p Fu(r)31
b Fy(\))426 b(to)g(con)-44 b(v)-17 b(er)d(ge.)428 b(A)e(smaller)f(v)-28
b(alue)26664 69742 y(of)456 b Fu(r)488 b Fy(requires)457
b(more)g(iterations)g(as)f(it)g(leads)h(to)g(the)g(creation)h(of)f(a)
26664 71070 y(lar)-20 b(ge)284 b(number)h(of)f(small)f(sub-problems)h
(\(re-optimizations)h(of)e(man)-17 b(y)26664 72399 y(small)318
b Fu(r)31 b Fy(-shapes\).)319 b(B)-39 b(A)320 b(graphs)g(con)-44
b(v)-17 b(er)d(ge)322 b(in)d(fe)-28 b(wer)320 b(iterations,)e(since)p
eop end
%%Page: 7 7
TeXDict begin 7 6 bop -2560 -2000 a
 gsave currentpoint currentpoint translate -90 neg rotate neg exch
neg exch translate
 -2560 -2000 a @beginspecial
50 @llx 50 @lly 554 @urx 770 @ury 1080 @rwi @setspecial
%%BeginDocument: Figs/ER-400-kmedian.eps
%!PS-Adobe-2.0
%%Title: ER-400-kmedian.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Jul 27 19:02:59 2006
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -76 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 230 scalefont setfont
1.000 UL
LTb
1311 690 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 1) Rshow
grestore
1.000 UL
LTb
1311 1148 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 1.05) Rshow
grestore
1.000 UL
LTb
1311 1605 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 1.1) Rshow
grestore
1.000 UL
LTb
1311 2063 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 1.15) Rshow
grestore
1.000 UL
LTb
1311 2520 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 1.2) Rshow
grestore
1.000 UL
LTb
1311 2978 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 1.25) Rshow
grestore
1.000 UL
LTb
1311 3435 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 1.3) Rshow
grestore
1.000 UL
LTb
1311 3893 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 1.35) Rshow
grestore
1.000 UL
LTb
1311 4350 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 1.4) Rshow
grestore
1.000 UL
LTb
1311 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 0) Cshow
grestore
1.000 UL
LTb
2427 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 5) Cshow
grestore
1.000 UL
LTb
3542 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 10) Cshow
grestore
1.000 UL
LTb
4658 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 15) Cshow
grestore
1.000 UL
LTb
5773 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 20) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1311 690 M
4574 0 V
0 3660 V
-4574 0 V
0 -3660 V
LTb
230 2520 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 M
(cost ratio with respect to UKM) Cshow
grestore
grestore
LTb
3598 115 M
gsave 0 setgray
(k) Cshow
grestore
LTb
3598 4695 M
gsave 0 setgray
(dUKM - ER n=400) Cshow
grestore
1.000 UP
1.500 UP
1.000 UL
LT1
1534 1513 M
0 1983 V
1503 1513 M
62 0 V
-62 1983 R
62 0 V
1757 1631 M
0 1511 V
1726 1631 M
62 0 V
-62 1511 R
62 0 V
2203 1449 M
0 1242 V
2172 1449 M
62 0 V
-62 1242 R
62 0 V
3096 1499 M
0 581 V
-31 -581 R
62 0 V
-62 581 R
62 0 V
5773 1333 M
0 526 V
-31 -526 R
62 0 V
-62 526 R
62 0 V
1534 2505 BoxF
1757 2386 BoxF
2203 2070 BoxF
3096 1790 BoxF
5773 1596 BoxF
1.500 UP
1.000 UL
LT1
LTb
4856 4172 M
gsave 0 setgray
(c\(dUKM\(1\)\)/c\(UKM\)) Rshow
grestore
LT1
4994 4172 M
615 0 V
1534 2505 M
223 -119 V
446 -316 V
893 -280 V
5773 1596 L
1534 2505 BoxF
1757 2386 BoxF
2203 2070 BoxF
3096 1790 BoxF
5773 1596 BoxF
5301 4172 BoxF
1.500 UP
1.000 UL
LT3
1534 1621 M
0 2252 V
1503 1621 M
62 0 V
-62 2252 R
62 0 V
1757 1153 M
0 1125 V
1726 1153 M
62 0 V
-62 1125 R
62 0 V
2203 870 M
0 627 V
2172 870 M
62 0 V
-62 627 R
62 0 V
3096 825 M
0 205 V
3065 825 M
62 0 V
-62 205 R
62 0 V
5773 715 M
0 59 V
-31 -59 R
62 0 V
-62 59 R
62 0 V
1534 2747 TriU
1757 1715 TriU
2203 1184 TriU
3096 927 TriU
5773 745 TriU
1.500 UP
1.000 UL
LT3
LTb
4856 3942 M
gsave 0 setgray
(c\(dUKM\(2\)\)/c\(UKM\)) Rshow
grestore
LT3
4994 3942 M
615 0 V
1534 2747 M
1757 1715 L
446 -531 V
3096 927 L
5773 745 L
1534 2747 TriU
1757 1715 TriU
2203 1184 TriU
3096 927 TriU
5773 745 TriU
5301 3942 TriU
1.000 UL
LTb
1311 690 M
4574 0 V
0 3660 V
-4574 0 V
0 -3660 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 9440 -2000 a
 currentpoint grestore moveto
 9440 -2000 a 11626 -2000 a
 gsave currentpoint currentpoint translate -90 neg rotate neg exch
neg exch translate

11626 -2000 a @beginspecial 50 @llx 50 @lly 554 @urx
770 @ury 1080 @rwi @setspecial
%%BeginDocument: Figs/ER-400-iterations.eps
%!PS-Adobe-2.0
%%Title: ER-400-iterations.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Jul 27 19:03:04 2006
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -76 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 230 scalefont setfont
1.000 UL
LTb
1035 690 M
63 0 V
4511 0 R
-63 0 V
897 690 M
gsave 0 setgray
( 0) Rshow
grestore
1.000 UL
LTb
1035 1148 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 10) Rshow
grestore
1.000 UL
LTb
1035 1605 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 20) Rshow
grestore
1.000 UL
LTb
1035 2063 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 30) Rshow
grestore
1.000 UL
LTb
1035 2520 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 40) Rshow
grestore
1.000 UL
LTb
1035 2978 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 50) Rshow
grestore
1.000 UL
LTb
1035 3435 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 60) Rshow
grestore
1.000 UL
LTb
1035 3893 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 70) Rshow
grestore
1.000 UL
LTb
1035 4350 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 80) Rshow
grestore
1.000 UL
LTb
1035 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 0) Cshow
grestore
1.000 UL
LTb
2151 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 5) Cshow
grestore
1.000 UL
LTb
3266 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 10) Cshow
grestore
1.000 UL
LTb
4382 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 15) Cshow
grestore
1.000 UL
LTb
5497 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 20) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1035 690 M
4574 0 V
0 3660 V
-4574 0 V
0 -3660 V
LTb
230 2520 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 M
(number of iterations) Cshow
grestore
grestore
LTb
3322 115 M
gsave 0 setgray
(k) Cshow
grestore
LTb
3322 4695 M
gsave 0 setgray
(dUKM, iterations - ER n=400) Cshow
grestore
1.000 UP
1.500 UP
1.000 UL
LT1
1258 740 M
0 47 V
-31 -47 R
62 0 V
-62 47 R
62 0 V
192 56 R
0 87 V
-31 -87 R
62 0 V
-62 87 R
62 0 V
415 -83 R
0 428 V
1896 847 M
62 0 V
-62 428 R
62 0 V
862 82 R
0 706 V
-31 -706 R
62 0 V
-62 706 R
62 0 V
2646 225 R
0 1635 V
5466 2288 M
62 0 V
-62 1635 R
62 0 V
1258 763 BoxF
1481 887 BoxF
1927 1061 BoxF
2820 1710 BoxF
5497 3106 BoxF
1.500 UP
1.000 UL
LT1
LTb
2139 4172 M
gsave 0 setgray
(dUKM\(1\)) Rshow
grestore
LT1
2277 4172 M
615 0 V
1258 763 M
223 124 V
446 174 V
893 649 V
5497 3106 L
1258 763 BoxF
1481 887 BoxF
1927 1061 BoxF
2820 1710 BoxF
5497 3106 BoxF
2584 4172 BoxF
1.500 UP
1.000 UL
LT3
1258 730 M
0 75 V
-31 -75 R
62 0 V
-62 75 R
62 0 V
192 -33 R
0 65 V
-31 -65 R
62 0 V
-62 65 R
62 0 V
415 -15 R
0 47 V
-31 -47 R
62 0 V
-62 47 R
62 0 V
862 -31 R
0 161 V
2789 838 M
62 0 V
-62 161 R
62 0 V
2646 53 R
0 291 V
-31 -291 R
62 0 V
-62 291 R
62 0 V
1258 768 TriU
1481 804 TriU
1927 846 TriU
2820 919 TriU
5497 1198 TriU
1.500 UP
1.000 UL
LT3
LTb
2139 3942 M
gsave 0 setgray
(dUKM\(2\)) Rshow
grestore
LT3
2277 3942 M
615 0 V
1258 768 M
223 36 V
446 42 V
893 73 V
2677 279 V
1258 768 TriU
1481 804 TriU
1927 846 TriU
2820 919 TriU
5497 1198 TriU
2584 3942 TriU
1.000 UL
LTb
1035 690 M
4574 0 V
0 3660 V
-4574 0 V
0 -3660 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 23626 -2000 a
 currentpoint grestore moveto
 23626 -2000 a -2560 10000
a
 gsave currentpoint currentpoint translate -90 neg rotate neg exch
neg exch translate
 -2560 10000 a @beginspecial 50 @llx 50 @lly 554 @urx
770 @ury 1080 @rwi @setspecial
%%BeginDocument: Figs/BA-400-kmedian.eps
%!PS-Adobe-2.0
%%Title: BA-400-kmedian.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Jul 27 19:05:05 2006
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -76 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 230 scalefont setfont
1.000 UL
LTb
1311 690 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 1) Rshow
grestore
1.000 UL
LTb
1311 1148 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 1.05) Rshow
grestore
1.000 UL
LTb
1311 1605 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 1.1) Rshow
grestore
1.000 UL
LTb
1311 2063 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 1.15) Rshow
grestore
1.000 UL
LTb
1311 2520 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 1.2) Rshow
grestore
1.000 UL
LTb
1311 2978 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 1.25) Rshow
grestore
1.000 UL
LTb
1311 3435 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 1.3) Rshow
grestore
1.000 UL
LTb
1311 3893 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 1.35) Rshow
grestore
1.000 UL
LTb
1311 4350 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 1.4) Rshow
grestore
1.000 UL
LTb
1311 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 0) Cshow
grestore
1.000 UL
LTb
2427 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 5) Cshow
grestore
1.000 UL
LTb
3542 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 10) Cshow
grestore
1.000 UL
LTb
4658 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 15) Cshow
grestore
1.000 UL
LTb
5773 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 20) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1311 690 M
4574 0 V
0 3660 V
-4574 0 V
0 -3660 V
LTb
230 2520 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 M
(cost ratio with respect to UKM) Cshow
grestore
grestore
LTb
3598 115 M
gsave 0 setgray
(k) Cshow
grestore
LTb
3598 4695 M
gsave 0 setgray
(dUKM - BA n=400) Cshow
grestore
1.000 UP
1.500 UP
1.000 UL
LT1
1534 690 M
0 3660 V
1503 690 M
62 0 V
-62 3660 R
62 0 V
1757 690 M
0 1143 V
1726 690 M
62 0 V
-62 1143 R
62 0 V
2203 690 M
0 1170 V
2172 690 M
62 0 V
-62 1170 R
62 0 V
3096 841 M
0 326 V
3065 841 M
62 0 V
-62 326 R
62 0 V
5773 755 M
0 96 V
-31 -96 R
62 0 V
-62 96 R
62 0 V
1534 2462 BoxF
1757 1209 BoxF
2203 1135 BoxF
3096 1004 BoxF
5773 803 BoxF
1.500 UP
1.000 UL
LT1
LTb
4856 4172 M
gsave 0 setgray
(c\(dUKM\(1\)\)/c\(UKM\)) Rshow
grestore
LT1
4994 4172 M
615 0 V
1534 2462 M
1757 1209 L
446 -74 V
893 -131 V
5773 803 L
1534 2462 BoxF
1757 1209 BoxF
2203 1135 BoxF
3096 1004 BoxF
5773 803 BoxF
5301 4172 BoxF
1.500 UP
1.000 UL
LT3
1534 690 M
0 728 V
1503 690 M
62 0 V
-62 728 R
62 0 V
1757 690 M
0 159 V
1726 690 M
62 0 V
-62 159 R
62 0 V
2203 699 M
0 63 V
-31 -63 R
62 0 V
-62 63 R
62 0 V
862 -72 R
0 23 V
-31 -23 R
62 0 V
-62 23 R
62 0 V
5773 690 M
-31 0 R
62 0 V
-62 0 R
62 0 V
1534 1011 TriU
1757 767 TriU
2203 731 TriU
3096 700 TriU
5773 690 TriU
1.500 UP
1.000 UL
LT3
LTb
4856 3942 M
gsave 0 setgray
(c\(dUKM\(2\)\)/c\(UKM\)) Rshow
grestore
LT3
4994 3942 M
615 0 V
1534 1011 M
1757 767 L
446 -36 V
893 -31 V
5773 690 L
1534 1011 TriU
1757 767 TriU
2203 731 TriU
3096 700 TriU
5773 690 TriU
5301 3942 TriU
1.000 UL
LTb
1311 690 M
4574 0 V
0 3660 V
-4574 0 V
0 -3660 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 9440 10000 a
 currentpoint grestore moveto
 9440 10000 a 11626 10000 a
 gsave currentpoint currentpoint translate -90 neg rotate neg exch
neg exch translate

11626 10000 a @beginspecial 50 @llx 50 @lly 554 @urx
770 @ury 1080 @rwi @setspecial
%%BeginDocument: Figs/BA-400-iterations.eps
%!PS-Adobe-2.0
%%Title: BA-400-iterations.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Jul 27 19:05:31 2006
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -76 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 230 scalefont setfont
1.000 UL
LTb
1035 1107 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 10) Rshow
grestore
1.000 UL
LTb
1035 1570 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 20) Rshow
grestore
1.000 UL
LTb
1035 2034 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 30) Rshow
grestore
1.000 UL
LTb
1035 2497 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 40) Rshow
grestore
1.000 UL
LTb
1035 2960 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 50) Rshow
grestore
1.000 UL
LTb
1035 3423 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 60) Rshow
grestore
1.000 UL
LTb
1035 3887 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 70) Rshow
grestore
1.000 UL
LTb
1035 4350 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 80) Rshow
grestore
1.000 UL
LTb
1035 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 0) Cshow
grestore
1.000 UL
LTb
2151 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 5) Cshow
grestore
1.000 UL
LTb
3266 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 10) Cshow
grestore
1.000 UL
LTb
4382 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 15) Cshow
grestore
1.000 UL
LTb
5497 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 20) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1035 690 M
4574 0 V
0 3660 V
-4574 0 V
0 -3660 V
LTb
230 2520 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 M
(number of iterations) Cshow
grestore
grestore
LTb
3322 115 M
gsave 0 setgray
(k) Cshow
grestore
LTb
3322 4695 M
gsave 0 setgray
(dUKM, iterations - BA n=400) Cshow
grestore
1.000 UP
1.500 UP
1.000 UL
LT1
1258 705 M
0 53 V
-31 -53 R
62 0 V
-62 53 R
62 0 V
192 11 R
0 111 V
1450 769 M
62 0 V
-62 111 R
62 0 V
415 -56 R
0 362 V
1896 824 M
62 0 V
-62 362 R
62 0 V
862 -154 R
0 270 V
-31 -270 R
62 0 V
-62 270 R
62 0 V
2646 176 R
0 536 V
-31 -536 R
62 0 V
-62 536 R
62 0 V
1258 732 BoxF
1481 824 BoxF
1927 1005 BoxF
2820 1167 BoxF
5497 1746 BoxF
1.500 UP
1.000 UL
LT1
LTb
2139 4172 M
gsave 0 setgray
(dUKM\(1\)) Rshow
grestore
LT1
2277 4172 M
615 0 V
1258 732 M
223 92 V
446 181 V
893 162 V
2677 579 V
1258 732 BoxF
1481 824 BoxF
1927 1005 BoxF
2820 1167 BoxF
5497 1746 BoxF
2584 4172 BoxF
1.500 UP
1.000 UL
LT3
1258 722 M
0 65 V
-31 -65 R
62 0 V
-62 65 R
62 0 V
192 -47 R
0 48 V
-31 -48 R
62 0 V
-62 48 R
62 0 V
415 -48 R
0 48 V
-31 -48 R
62 0 V
-62 48 R
62 0 V
862 -36 R
0 52 V
-31 -52 R
62 0 V
-62 52 R
62 0 V
5497 766 M
0 98 V
-31 -98 R
62 0 V
-62 98 R
62 0 V
1258 755 TriU
1481 764 TriU
1927 764 TriU
2820 778 TriU
5497 815 TriU
1.500 UP
1.000 UL
LT3
LTb
2139 3942 M
gsave 0 setgray
(dUKM\(2\)) Rshow
grestore
LT3
2277 3942 M
615 0 V
1258 755 M
223 9 V
446 0 V
893 14 V
2677 37 V
1258 755 TriU
1481 764 TriU
1927 764 TriU
2820 778 TriU
5497 815 TriU
2584 3942 TriU
1.000 UL
LTb
1035 690 M
4574 0 V
0 3660 V
-4574 0 V
0 -3660 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 23626 10000 a
 currentpoint grestore moveto
 23626 10000 a -2560 23268
a Fz(Fig.)353 b(5.)1056 b Fs(The)309 b(relati)-19 b(v)-12
b(e)310 b(performance)f(between)h(dUKM\()p Fo(r)24 b
Fs(\))309 b(and)g(UKM,)g(and)g(the)g(number)g(of)-2560
24154 y(iterations)245 b(for)e(the)g(con)-31 b(v)-12
b(er)e(gence)245 b(of)e(the)g(former)-31 b(,)242 b(for)h
Fo(r)276 b Fp(=)251 b(1)243 b Fs(and)g Fo(r)275 b Fp(=)252
b(2)p Fs(,)242 b(and)h(dif)-19 b(ferent)244 b(f)-8 b(acility)-2560
25039 y(densities)274 b Fo(k)19 b(=n)251 b Fp(=)h(0)p
Fo(:)p Fp(1\045)p Fo(;)151 b Fp(0)p Fo(:)p Fp(5\045)p
Fo(;)h Fp(1\045)p Fo(;)g Fp(2\045)p Fo(;)271 b Fs(and)h
Fp(5\045)g Fs(under)h(ER)e(and)h(B)-27 b(A)272 b(graphs.)-2560
27292 y Fy(for)463 b(the)g(same)h(v)-28 b(alue)465 b(of)d
Fu(r)495 b Fy(B)-39 b(A)463 b(graphs)h(induce)h(lar)-20
b(ger)463 b Fu(r)31 b Fy(-shapes)24620 26891 y Fs(7)-2560
28621 y Fy(and,)389 b(thus,)e(fe)-28 b(wer)388 b(re-optimizations.)
-2560 30928 y Fw(C.)553 b(P)-89 b(erformance)391 b(of)c(distrib)-22
b(uted)388 b(UFL)-1453 32700 y Fy(In)400 b(order)g(to)h(e)-28
b(v)g(aluate)402 b(the)f(performance)h(of)e(dUFL\()p
Fu(r)31 b Fy(\),)401 b(we)f(need)-2560 34029 y(to)647
b(decide)i(ho)-28 b(w)649 b(to)e(set)g(the)h(f)-11 b(acility)647
b(acquisition)i(costs)e Fu(f)119 b Ft(\()p Fu(v)24162
34195 y Fo(j)24628 34029 y Ft(\))p Fy(,)-2560 35357 y(which)565
b(constitute)g(part)f(of)f(the)i(input)f(of)g(a)g(UFL)h(problem)g
(\(see)-2560 36685 y(De\002nition)446 b(2\).)f(This)g(is)f(a)h(non-tri)
-28 b(vial)445 b(task,)g(essentially)g(a)g(pricing)-2560
38014 y(problem)373 b(for)f(netw)-11 b(ork)373 b(services.)f(Although)h
(pricing)g(is)e(clearly)i(out)-2560 39342 y(of)g(scope)i(for)e(this)g
(paper)-44 b(,)374 b(we)g(need)i(to)d(use)h(some)g(form)f(of)h
Fu(f)119 b Ft(\()p Fu(v)23700 39508 y Fo(j)24167 39342
y Ft(\))p Fy(')-61 b(s)-2560 40671 y(to)360 b(demonstrate)i(our)e
(point)h(that,)f(as)g(with)g(UKM,)g(the)h(performance)-2560
41999 y(of)494 b(the)g(distrib)-22 b(uted)494 b(v)-17
b(ersion)495 b(of)f(UFL)h(tracks)f(closely)h(that)f(of)g(the)-2560
43327 y(centralized)290 b(one.)f(T)-89 b(o)289 b(that)f(end,)h(we)g
(use)f(tw)-11 b(o)288 b(types)h(of)f(f)-11 b(acility)288
b(costs:)-2560 44656 y Fw(uniform)p Fy(,)487 b(where)i(all)d(f)-11
b(acilities)487 b(cost)g(the)h(same)f(independently)k(of)-2560
45984 y(location)423 b(\()p Fw(i.e)-17 b(.)p Fy(,)422
b Fu(f)119 b Ft(\()p Fu(v)5460 46150 y Fo(j)5926 45984
y Ft(\))372 b(=)f Fu(f)119 b Fy(,)422 b Fq(8)p Fu(v)10472
46150 y Fo(j)11309 45984 y Fq(2)371 b Fu(V)246 b Fy(\))422
b(and,)h Fw(non-uniform)p Fy(,)g(where)-2560 47312 y(the)393
b(cost)g(of)f(a)h(f)-11 b(acility)393 b(at)f(a)h(gi)-28
b(v)-17 b(en)395 b(node)f(depends)h(on)f(the)f(location)-2560
48641 y(of)413 b(that)f(node.)j(The)e(uniform)g(cost)g(model)h(is)e
(more)h(rele)-28 b(v)g(ant)415 b(when)-2560 49969 y(the)345
b(dominant)h(cost)e(is)f(that)i(of)f(setting)g(up)h(the)g(service)g(on)
g(the)f(host,)-2560 51297 y(whereas)482 b(the)g(non-uniform)h(cost)e
(model)i(is)d(more)i(rele)-28 b(v)g(ant)484 b(when)-2560
52626 y(the)471 b(dominant)h(cost)e(is)g(that)g(of)h(operating)h(the)e
(f)-11 b(acility)470 b(\(implying)-2560 53954 y(that)483
b(this)f(operating)i(cost)f(is)f(proportional)i(to)f(the)g
(desirability)g(of)-2560 55282 y(the)388 b(host,)g(which)g(depends)i
(on)f(topological)g(location\).)-1453 56638 y(F)-17 b(or)475
b(the)g(non-uniform)g(case)g(we)g(will)f(use)g(the)h(follo)-28
b(wing)475 b(rule:)-2560 57966 y(we)431 b(will)f(mak)-11
b(e)433 b(the)e(cost)g(of)g(acquiring)h(a)f(f)-11 b(acility)431
b(proportional)h(to)-2560 59295 y(its)474 b(de)-17 b(gree,)477
b Fw(i.e)-17 b(.)p Fy(,)474 b(proportional)j(to)d(the)i(number)g(of)f
(direct)g(links)g(it)-2560 60623 y(has)420 b(to)g(other)h(nodes.)g(The)
g(intuition)g(behind)h(this)d(is)g(that)i(a)f(highly)-2560
61951 y(connected)525 b(node)f(will)c(most)i(lik)-11
b(ely)522 b(attract)g(more)g(demand)i(from)-2560 63280
y(clients,)500 b(as)f(more)i(shortest-paths)e(will)g(go)i(through)g(it)
e(and,)i(thus,)-2560 64608 y(b)-22 b(uilding)580 b(a)g(f)-11
b(acility)578 b(there)i(will)e(create)i(a)g(bigger)g(hot-spot,)f(and)
-2560 65936 y(therefore)342 b(the)g(node)h(should)g(char)-20
b(ge)343 b(more)f(for)f(hosting)h(a)g(service.)24621
65535 y Fs(8)-1674 68002 y Fr(7)-1121 68314 y Fz(Ag)l(ain)c(it)g(is)h
(the)g(hubs)e(that)i(create)g(lar)-16 b(ge)338 b Fi(r)26
b Fz(-shapes.)339 b(Ev)-13 b(en)338 b(under)g(a)g(small)h
Fi(r)26 b Fz(,)338 b(a)-2560 69310 y(hub)358 b(will)h(be)f(close)i(to)e
(the)h(f)-9 b(acility)359 b(that)g(re-optimizes)g(its)g(location,)g
(and)f(this)h(will)-2560 70307 y(bring)309 b(man)-13
b(y)310 b(of)f(the)h(hub')-49 b(s)310 b(immediate)h(neighbors)f(into)g
(the)g Fi(r)26 b Fz(-shape.)-1674 71090 y Fr(8)-1121
71403 y Fz(As)376 b(sk)-9 b(etched)376 b(in)f(the)g(introduction,)g(a)h
(node)e(may)h(correspond)g(to)g(an)g(AS)h(that)-2560
72399 y(char)-16 b(ges)310 b(for)g(allo)-22 b(wing)310
b(netw)-9 b(ork)310 b(services)i(to)e(be)g(installed)h(on)e(its)i
(local)f(GSH.)26664 -2000 y
 gsave currentpoint currentpoint translate -90 neg rotate neg exch
neg exch translate
 26664 -2000 a @beginspecial
50 @llx 50 @lly 554 @urx 770 @ury 1080 @rwi @setspecial
%%BeginDocument: Figs/ER-UFL.eps
%!PS-Adobe-2.0
%%Title: ER-UFL.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Jul 27 23:25:32 2006
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -76 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 230 scalefont setfont
1.000 UL
LTb
1311 690 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 1000) Rshow
grestore
1.000 UL
LTb
1311 1300 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 1500) Rshow
grestore
1.000 UL
LTb
1311 1910 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 2000) Rshow
grestore
1.000 UL
LTb
1311 2520 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 2500) Rshow
grestore
1.000 UL
LTb
1311 3130 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 3000) Rshow
grestore
1.000 UL
LTb
1311 3740 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 3500) Rshow
grestore
1.000 UL
LTb
1311 4350 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 4000) Rshow
grestore
1.000 UL
LTb
1311 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 400) Cshow
grestore
1.000 UL
LTb
2073 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 500) Cshow
grestore
1.000 UL
LTb
2836 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 600) Cshow
grestore
1.000 UL
LTb
3598 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 700) Cshow
grestore
1.000 UL
LTb
4360 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 800) Cshow
grestore
1.000 UL
LTb
5123 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 900) Cshow
grestore
1.000 UL
LTb
5885 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 1000) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1311 690 M
4574 0 V
0 3660 V
-4574 0 V
0 -3660 V
LTb
230 2520 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 M
(cost) Cshow
grestore
grestore
LTb
3598 115 M
gsave 0 setgray
(n) Cshow
grestore
LTb
3598 4695 M
gsave 0 setgray
(dUFL - ER) Cshow
grestore
1.000 UP
1.000 UP
1.000 UL
LT1
1311 1252 M
-31 0 R
62 0 V
-62 0 R
62 0 V
1494 904 R
-31 0 R
62 0 V
-62 0 R
62 0 V
1493 872 R
-31 0 R
62 0 V
-62 0 R
62 0 V
1494 963 R
-31 0 R
62 0 V
-62 0 R
62 0 V
1311 1252 Crs
2836 2156 Crs
4360 3028 Crs
5885 3991 Crs
1.000 UP
1.000 UL
LT1
LTb
3243 4172 M
gsave 0 setgray
(dUFL\(1\), 0.5F) Rshow
grestore
LT1
3381 4172 M
615 0 V
1311 1252 M
1525 904 V
1524 872 V
1525 963 V
1311 1252 Crs
2836 2156 Crs
4360 3028 Crs
5885 3991 Crs
3688 4172 Crs
1.000 UP
1.000 UL
LT2
1311 1200 M
-31 0 R
62 0 V
-62 0 R
62 0 V
1494 883 R
0 10 V
-31 -10 R
62 0 V
-62 10 R
62 0 V
1493 715 R
-31 0 R
62 0 V
-62 0 R
62 0 V
1494 885 R
0 2 V
-31 -2 R
62 0 V
-62 2 R
62 0 V
1311 1200 Star
2836 2088 Star
4360 2808 Star
5885 3694 Star
1.000 UP
1.000 UL
LT2
LTb
3243 3942 M
gsave 0 setgray
(dUFL\(1\), F) Rshow
grestore
LT2
3381 3942 M
615 0 V
1311 1200 M
1525 888 V
1524 720 V
1525 886 V
1311 1200 Star
2836 2088 Star
4360 2808 Star
5885 3694 Star
3688 3942 Star
1.000 UP
1.000 UL
LT3
1311 1186 M
-31 0 R
62 0 V
-62 0 R
62 0 V
1494 939 R
0 11 V
-31 -11 R
62 0 V
-62 11 R
62 0 V
1493 712 R
0 6 V
-31 -6 R
62 0 V
-62 6 R
62 0 V
5885 3991 M
-31 0 R
62 0 V
-62 0 R
62 0 V
1311 1186 Box
2836 2130 Box
4360 2851 Box
5885 3991 Box
1.000 UP
1.000 UL
LT3
LTb
3243 3712 M
gsave 0 setgray
(dUFL\(1\), 2F) Rshow
grestore
LT3
3381 3712 M
615 0 V
1311 1186 M
1525 944 V
1524 721 V
5885 3991 L
1311 1186 Box
2836 2130 Box
4360 2851 Box
5885 3991 Box
3688 3712 Box
1.000 UP
1.000 UL
LT4
1311 1250 M
-31 0 R
62 0 V
-62 0 R
62 0 V
1494 906 R
-31 0 R
62 0 V
-62 0 R
62 0 V
1493 824 R
-31 0 R
62 0 V
-62 0 R
62 0 V
5885 3985 M
0 9 V
-31 -9 R
62 0 V
-62 9 R
62 0 V
1311 1250 BoxF
2836 2156 BoxF
4360 2980 BoxF
5885 3990 BoxF
1.000 UP
1.000 UL
LT4
LTb
3243 3482 M
gsave 0 setgray
(dUFL\(2\), 0.5F) Rshow
grestore
LT4
3381 3482 M
615 0 V
1311 1250 M
1525 906 V
1524 824 V
5885 3990 L
1311 1250 BoxF
2836 2156 BoxF
4360 2980 BoxF
5885 3990 BoxF
3688 3482 BoxF
1.000 UP
1.000 UL
LT5
1311 1169 M
0 7 V
-31 -7 R
62 0 V
-62 7 R
62 0 V
1494 872 R
0 41 V
-31 -41 R
62 0 V
-62 41 R
62 0 V
1493 685 R
0 30 V
-31 -30 R
62 0 V
-62 30 R
62 0 V
1494 826 R
0 26 V
-31 -26 R
62 0 V
-62 26 R
62 0 V
1311 1173 Circle
2836 2069 Circle
4360 2789 Circle
5885 3643 Circle
1.000 UP
1.000 UL
LT5
LTb
3243 3252 M
gsave 0 setgray
(dUFL\(2\), F) Rshow
grestore
LT5
3381 3252 M
615 0 V
1311 1173 M
1525 896 V
1524 720 V
1525 854 V
1311 1173 Circle
2836 2069 Circle
4360 2789 Circle
5885 3643 Circle
3688 3252 Circle
1.000 UP
1.000 UL
LT6
1311 1052 M
0 23 V
-31 -23 R
62 0 V
-62 23 R
62 0 V
1494 902 R
0 29 V
-31 -29 R
62 0 V
-62 29 R
62 0 V
1493 689 R
0 26 V
-31 -26 R
62 0 V
-62 26 R
62 0 V
5885 3985 M
0 9 V
-31 -9 R
62 0 V
-62 9 R
62 0 V
1311 1064 CircleF
2836 1992 CircleF
4360 2708 CircleF
5885 3990 CircleF
1.000 UP
1.000 UL
LT6
LTb
3243 3022 M
gsave 0 setgray
(dUFL\(2\), 2F) Rshow
grestore
LT6
3381 3022 M
615 0 V
1311 1064 M
1525 928 V
1524 716 V
5885 3990 L
1311 1064 CircleF
2836 1992 CircleF
4360 2708 CircleF
5885 3990 CircleF
3688 3022 CircleF
1.000 UP
1.000 UL
LT0
LTb
3243 2792 M
gsave 0 setgray
(UFL) Rshow
grestore
LT0
3381 2792 M
615 0 V
1311 971 M
1525 888 V
1524 660 V
1525 714 V
1311 971 Pls
2836 1859 Pls
4360 2519 Pls
5885 3233 Pls
3688 2792 Pls
1.000 UL
LTb
1311 690 M
4574 0 V
0 3660 V
-4574 0 V
0 -3660 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 38664 -2000 a
 currentpoint grestore moveto
 38664 -2000 a 40850 -2000
a
 gsave currentpoint currentpoint translate -90 neg rotate neg exch
neg exch translate
 40850 -2000 a @beginspecial 50 @llx 50 @lly 554 @urx
770 @ury 1080 @rwi @setspecial
%%BeginDocument: Figs/BA-UFL.eps
%!PS-Adobe-2.0
%%Title: BA-UFL.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Jul 27 23:27:24 2006
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -76 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 230 scalefont setfont
1.000 UL
LTb
1311 1023 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 1000) Rshow
grestore
1.000 UL
LTb
1311 1855 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 1500) Rshow
grestore
1.000 UL
LTb
1311 2686 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 2000) Rshow
grestore
1.000 UL
LTb
1311 3518 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 2500) Rshow
grestore
1.000 UL
LTb
1311 4350 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 3000) Rshow
grestore
1.000 UL
LTb
1311 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 400) Cshow
grestore
1.000 UL
LTb
2073 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 500) Cshow
grestore
1.000 UL
LTb
2836 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 600) Cshow
grestore
1.000 UL
LTb
3598 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 700) Cshow
grestore
1.000 UL
LTb
4360 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 800) Cshow
grestore
1.000 UL
LTb
5123 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 900) Cshow
grestore
1.000 UL
LTb
5885 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 1000) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1311 690 M
4574 0 V
0 3660 V
-4574 0 V
0 -3660 V
LTb
230 2520 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 M
(cost) Cshow
grestore
grestore
LTb
3598 115 M
gsave 0 setgray
(n) Cshow
grestore
LTb
3598 4695 M
gsave 0 setgray
(dUFL - BA) Cshow
grestore
1.000 UP
1.000 UP
1.000 UL
LT1
1311 1124 M
0 6 V
-31 -6 R
62 0 V
-62 6 R
62 0 V
1494 953 R
-31 0 R
62 0 V
-62 0 R
62 0 V
1493 892 R
-31 0 R
62 0 V
-62 0 R
62 0 V
1494 683 R
0 2 V
-31 -2 R
62 0 V
-62 2 R
62 0 V
1311 1127 Crs
2836 2083 Crs
4360 2975 Crs
5885 3659 Crs
1.000 UP
1.000 UL
LT1
LTb
3243 4172 M
gsave 0 setgray
(dUFL\(1\), 0.5F) Rshow
grestore
LT1
3381 4172 M
615 0 V
1311 1127 M
1525 956 V
1524 892 V
1525 684 V
1311 1127 Crs
2836 2083 Crs
4360 2975 Crs
5885 3659 Crs
3688 4172 Crs
1.000 UP
1.000 UL
LT2
1311 1028 M
0 18 V
-31 -18 R
62 0 V
-62 18 R
62 0 V
1494 866 R
0 7 V
-31 -7 R
62 0 V
-62 7 R
62 0 V
1493 739 R
0 9 V
-31 -9 R
62 0 V
-62 9 R
62 0 V
1494 767 R
0 8 V
-31 -8 R
62 0 V
-62 8 R
62 0 V
1311 1037 Star
2836 1915 Star
4360 2663 Star
5885 3438 Star
1.000 UP
1.000 UL
LT2
LTb
3243 3942 M
gsave 0 setgray
(dUFL\(1\), F) Rshow
grestore
LT2
3381 3942 M
615 0 V
1311 1037 M
1525 878 V
1524 748 V
1525 775 V
1311 1037 Star
2836 1915 Star
4360 2663 Star
5885 3438 Star
3688 3942 Star
1.000 UP
1.000 UL
LT3
1311 964 M
0 10 V
-31 -10 R
62 0 V
-62 10 R
62 0 V
1494 820 R
0 9 V
-31 -9 R
62 0 V
-62 9 R
62 0 V
1493 781 R
0 16 V
-31 -16 R
62 0 V
-62 16 R
62 0 V
1494 715 R
0 12 V
-31 -12 R
62 0 V
-62 12 R
62 0 V
1311 969 Box
2836 1798 Box
4360 2592 Box
5885 3321 Box
1.000 UP
1.000 UL
LT3
LTb
3243 3712 M
gsave 0 setgray
(dUFL\(1\), 2F) Rshow
grestore
LT3
3381 3712 M
615 0 V
1311 969 M
1525 829 V
1524 794 V
1525 729 V
1311 969 Box
2836 1798 Box
4360 2592 Box
5885 3321 Box
3688 3712 Box
1.000 UP
1.000 UL
LT4
1311 887 M
0 4 V
-31 -4 R
62 0 V
-62 4 R
62 0 V
1494 782 R
0 13 V
-31 -13 R
62 0 V
-62 13 R
62 0 V
1493 768 R
0 24 V
-31 -24 R
62 0 V
-62 24 R
62 0 V
1494 657 R
-31 0 R
62 0 V
-62 0 R
62 0 V
1311 889 BoxF
2836 1679 BoxF
4360 2466 BoxF
5885 3135 BoxF
1.000 UP
1.000 UL
LT4
LTb
3243 3482 M
gsave 0 setgray
(dUFL\(2\), 0.5F) Rshow
grestore
LT4
3381 3482 M
615 0 V
1311 889 M
1525 790 V
1524 787 V
1525 669 V
1311 889 BoxF
2836 1679 BoxF
4360 2466 BoxF
5885 3135 BoxF
3688 3482 BoxF
1.000 UP
1.000 UL
LT5
1311 887 M
0 4 V
-31 -4 R
62 0 V
-62 4 R
62 0 V
1494 782 R
0 13 V
-31 -13 R
62 0 V
-62 13 R
62 0 V
1493 768 R
0 24 V
-31 -24 R
62 0 V
-62 24 R
62 0 V
1494 657 R
-31 0 R
62 0 V
-62 0 R
62 0 V
1311 889 Circle
2836 1679 Circle
4360 2466 Circle
5885 3135 Circle
1.000 UP
1.000 UL
LT5
LTb
3243 3252 M
gsave 0 setgray
(dUFL\(2\), F) Rshow
grestore
LT5
3381 3252 M
615 0 V
1311 889 M
1525 790 V
1524 787 V
1525 669 V
1311 889 Circle
2836 1679 Circle
4360 2466 Circle
5885 3135 Circle
3688 3252 Circle
1.000 UP
1.000 UL
LT6
1311 887 M
0 4 V
-31 -4 R
62 0 V
-62 4 R
62 0 V
1494 782 R
0 13 V
-31 -13 R
62 0 V
-62 13 R
62 0 V
1493 768 R
0 24 V
-31 -24 R
62 0 V
-62 24 R
62 0 V
1494 657 R
-31 0 R
62 0 V
-62 0 R
62 0 V
1311 889 CircleF
2836 1679 CircleF
4360 2466 CircleF
5885 3135 CircleF
1.000 UP
1.000 UL
LT6
LTb
3243 3022 M
gsave 0 setgray
(dUFL\(2\), 2F) Rshow
grestore
LT6
3381 3022 M
615 0 V
1311 889 M
1525 790 V
1524 787 V
1525 669 V
1311 889 CircleF
2836 1679 CircleF
4360 2466 CircleF
5885 3135 CircleF
3688 3022 CircleF
1.000 UP
1.000 UL
LT0
LTb
3243 2792 M
gsave 0 setgray
(UFL) Rshow
grestore
LT0
3381 2792 M
615 0 V
1311 884 M
1525 766 V
1524 784 V
1525 665 V
1311 884 Pls
2836 1650 Pls
4360 2434 Pls
5885 3099 Pls
3688 2792 Pls
1.000 UL
LTb
1311 690 M
4574 0 V
0 3660 V
-4574 0 V
0 -3660 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 52850 -2000 a
 currentpoint grestore moveto
 52850 -2000 a 26664 11268
a Fz(Fig.)371 b(6.)1110 b Fs(Cost)325 b(comparison)i(between)f(dUFL\()p
Fo(r)24 b Fs(\))325 b(and)g(UFL,)f(for)g Fo(r)390 b Fp(=)366
b(1)324 b Fs(and)h Fo(r)390 b Fp(=)366 b(2)p Fs(,)324
b(and)26664 12154 y(dif)-19 b(ferent)217 b(netw)-8 b(ork)219
b(sizes)e(under)g(ER)g(and)g(B)-27 b(A)216 b(graphs)h(and)g(de)-12
b(gree-based)219 b(f)-8 b(acility)219 b(cost)e Fo(f)87
b Fp(\()p Fo(v)52869 12265 y Fk(j)53282 12154 y Fp(\))252
b(=)26664 13075 y Fo(d)p Fp(\()p Fo(v)27914 13186 y Fk(j)28327
13075 y Fp(\))28673 12741 y Fj(1+)p Fk(\256)30125 12929
y(G)30823 13075 y Fs(.)26664 13073 y
 gsave currentpoint currentpoint translate -90 neg rotate neg exch
neg exch translate
 26664 13073 a @beginspecial
50 @llx 50 @lly 554 @urx 770 @ury 1080 @rwi @setspecial
%%BeginDocument: Figs/ER-UFL_FIND_FACILITY_COST.eps
%!PS-Adobe-2.0
%%Title: ER-UFL_FIND_FACILITY_COST.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Sun Jul 30 13:24:26 2006
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -76 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 230 scalefont setfont
1.000 UL
LTb
1311 690 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 800) Rshow
grestore
1.000 UL
LTb
1311 1056 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 1000) Rshow
grestore
1.000 UL
LTb
1311 1422 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 1200) Rshow
grestore
1.000 UL
LTb
1311 1788 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 1400) Rshow
grestore
1.000 UL
LTb
1311 2154 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 1600) Rshow
grestore
1.000 UL
LTb
1311 2520 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 1800) Rshow
grestore
1.000 UL
LTb
1311 2886 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 2000) Rshow
grestore
1.000 UL
LTb
1311 3252 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 2200) Rshow
grestore
1.000 UL
LTb
1311 3618 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 2400) Rshow
grestore
1.000 UL
LTb
1311 3984 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 2600) Rshow
grestore
1.000 UL
LTb
1311 4350 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 2800) Rshow
grestore
1.000 UL
LTb
1311 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 400) Cshow
grestore
1.000 UL
LTb
2073 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 500) Cshow
grestore
1.000 UL
LTb
2836 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 600) Cshow
grestore
1.000 UL
LTb
3598 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 700) Cshow
grestore
1.000 UL
LTb
4360 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 800) Cshow
grestore
1.000 UL
LTb
5123 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 900) Cshow
grestore
1.000 UL
LTb
5885 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 1000) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1311 690 M
4574 0 V
0 3660 V
-4574 0 V
0 -3660 V
LTb
230 2520 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 M
(cost) Cshow
grestore
grestore
LTb
3598 115 M
gsave 0 setgray
(n) Cshow
grestore
LTb
3598 4695 M
gsave 0 setgray
(dUFL, uniform facility cost - ER) Cshow
grestore
1.000 UP
1.000 UP
1.000 UL
LT4
1311 1170 M
0 46 V
-31 -46 R
62 0 V
-62 46 R
62 0 V
1494 845 R
0 55 V
-31 -55 R
62 0 V
-62 55 R
62 0 V
1493 889 R
0 107 V
-31 -107 R
62 0 V
-62 107 R
62 0 V
1494 798 R
0 121 V
-31 -121 R
62 0 V
-62 121 R
62 0 V
1311 1193 BoxF
2836 2088 BoxF
4360 3058 BoxF
5885 3971 BoxF
1.000 UP
1.000 UL
LT4
LTb
2415 4172 M
gsave 0 setgray
(dUFL\(1\)) Rshow
grestore
LT4
2553 4172 M
615 0 V
1311 1193 M
1525 895 V
1524 970 V
1525 913 V
1311 1193 BoxF
2836 2088 BoxF
4360 3058 BoxF
5885 3971 BoxF
2860 4172 BoxF
1.000 UP
1.000 UL
LT7
1311 1007 M
0 25 V
-31 -25 R
62 0 V
-62 25 R
62 0 V
1494 852 R
0 18 V
-31 -18 R
62 0 V
-62 18 R
62 0 V
1493 969 R
-31 0 R
62 0 V
-62 0 R
62 0 V
1494 802 R
-31 0 R
62 0 V
-62 0 R
62 0 V
1311 1020 TriU
2836 1893 TriU
4360 2871 TriU
5885 3673 TriU
1.000 UP
1.000 UL
LT7
LTb
2415 3942 M
gsave 0 setgray
(dUFL\(2\)) Rshow
grestore
LT7
2553 3942 M
615 0 V
1311 1020 M
1525 873 V
1524 978 V
1525 802 V
1311 1020 TriU
2836 1893 TriU
4360 2871 TriU
5885 3673 TriU
2860 3942 TriU
1.000 UP
1.000 UL
LT0
LTb
2415 3712 M
gsave 0 setgray
(UFL) Rshow
grestore
LT0
2553 3712 M
615 0 V
1311 997 M
1525 881 V
1524 898 V
1525 860 V
1311 997 Pls
2836 1878 Pls
4360 2776 Pls
5885 3636 Pls
2860 3712 Pls
1.000 UL
LTb
1311 690 M
4574 0 V
0 3660 V
-4574 0 V
0 -3660 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 38664 13073 a
 currentpoint grestore moveto
 38664 13073 a 40850 13073
a
 gsave currentpoint currentpoint translate -90 neg rotate neg exch
neg exch translate
 40850 13073 a @beginspecial 50 @llx 50 @lly 554 @urx
770 @ury 1080 @rwi @setspecial
%%BeginDocument: Figs/BA-UFL_FIND_FACILITY_COST.eps
%!PS-Adobe-2.0
%%Title: BA-UFL_FIND_FACILITY_COST.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Sun Jul 30 13:25:26 2006
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -76 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 230 scalefont setfont
1.000 UL
LTb
1311 690 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 600) Rshow
grestore
1.000 UL
LTb
1311 1213 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 800) Rshow
grestore
1.000 UL
LTb
1311 1736 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 1000) Rshow
grestore
1.000 UL
LTb
1311 2259 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 1200) Rshow
grestore
1.000 UL
LTb
1311 2781 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 1400) Rshow
grestore
1.000 UL
LTb
1311 3304 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 1600) Rshow
grestore
1.000 UL
LTb
1311 3827 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 1800) Rshow
grestore
1.000 UL
LTb
1311 4350 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 2000) Rshow
grestore
1.000 UL
LTb
1311 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 400) Cshow
grestore
1.000 UL
LTb
2073 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 500) Cshow
grestore
1.000 UL
LTb
2836 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 600) Cshow
grestore
1.000 UL
LTb
3598 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 700) Cshow
grestore
1.000 UL
LTb
4360 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 800) Cshow
grestore
1.000 UL
LTb
5123 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 900) Cshow
grestore
1.000 UL
LTb
5885 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 1000) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1311 690 M
4574 0 V
0 3660 V
-4574 0 V
0 -3660 V
LTb
230 2520 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 M
(cost) Cshow
grestore
grestore
LTb
3598 115 M
gsave 0 setgray
(n) Cshow
grestore
LTb
3598 4695 M
gsave 0 setgray
(dUFL, uniform facility cost - BA) Cshow
grestore
1.000 UP
1.000 UP
1.000 UL
LT4
1311 1218 M
-31 0 R
62 0 V
-62 0 R
62 0 V
1494 983 R
-31 0 R
62 0 V
-62 0 R
62 0 V
4360 3310 M
-31 0 R
62 0 V
-62 0 R
62 0 V
1494 941 R
-31 0 R
62 0 V
-62 0 R
62 0 V
1311 1218 BoxF
2836 2201 BoxF
4360 3310 BoxF
5885 4251 BoxF
1.000 UP
1.000 UL
LT4
LTb
2415 4172 M
gsave 0 setgray
(dUFL\(1\)) Rshow
grestore
LT4
2553 4172 M
615 0 V
1311 1218 M
1525 983 V
4360 3310 L
1525 941 V
1311 1218 BoxF
2836 2201 BoxF
4360 3310 BoxF
5885 4251 BoxF
2860 4172 BoxF
1.000 UP
1.000 UL
LT7
1311 1142 M
-31 0 R
62 0 V
-62 0 R
62 0 V
1494 983 R
-31 0 R
62 0 V
-62 0 R
62 0 V
4360 3176 M
-31 0 R
62 0 V
-62 0 R
62 0 V
1494 965 R
-31 0 R
62 0 V
-62 0 R
62 0 V
1311 1142 TriU
2836 2125 TriU
4360 3176 TriU
5885 4141 TriU
1.000 UP
1.000 UL
LT7
LTb
2415 3942 M
gsave 0 setgray
(dUFL\(2\)) Rshow
grestore
LT7
2553 3942 M
615 0 V
1311 1142 M
1525 983 V
4360 3176 L
1525 965 V
1311 1142 TriU
2836 2125 TriU
4360 3176 TriU
5885 4141 TriU
2860 3942 TriU
1.000 UP
1.000 UL
LT0
LTb
2415 3712 M
gsave 0 setgray
(UFL) Rshow
grestore
LT0
2553 3712 M
615 0 V
1311 1142 M
1525 981 V
4360 3176 L
1525 965 V
1311 1142 Pls
2836 2123 Pls
4360 3176 Pls
5885 4141 Pls
2860 3712 Pls
1.000 UL
LTb
1311 690 M
4574 0 V
0 3660 V
-4574 0 V
0 -3660 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 52850 13073 a
 currentpoint grestore moveto
 52850 13073 a 26664 26341
a Fz(Fig.)371 b(7.)1110 b Fs(Cost)325 b(comparison)i(between)f(dUFL\()p
Fo(r)24 b Fs(\))325 b(and)g(UFL,)f(for)g Fo(r)390 b Fp(=)366
b(1)324 b Fs(and)h Fo(r)390 b Fp(=)366 b(2)p Fs(,)324
b(and)26664 27226 y(dif)-19 b(ferent)272 b(netw)-8 b(ork)274
b(sizes)f(under)f(ER)g(and)g(B)-27 b(A)271 b(graphs)i(and)f(uniform)h
(f)-8 b(acility)274 b(cost.)26664 29432 y Fy(In)352 b([21],[22])g(the)g
(authors)h(sho)-28 b(wed)354 b(that)e(the)h(\223co)-17
b(v)g(erage\224)357 b(of)352 b(a)g(node)26664 30760 y(increases)490
b(super)-22 b(-linearly)491 b(with)f(its)e(de)-17 b(gree)492
b(\(or)e(alternati)-28 b(v)-17 b(ely)-72 b(,)491 b(the)26664
32088 y(number)484 b(of)f(shortest)f(paths)h(that)g(go)h(through)g
(it\).)d(W)-89 b(e,)483 b(therefore,)26664 33417 y(use)i(as)g(f)-11
b(acility)485 b(cost)g Fu(f)119 b Ft(\()p Fu(v)37537
33583 y Fo(j)38004 33417 y Ft(\))488 b(=)g Fu(d)p Ft(\()p
Fu(v)41814 33583 y Fo(j)42281 33417 y Ft(\))42711 33015
y Fp(1+)p Fo(\256)44407 33126 y Fk(G)45107 33417 y Fy(,)d(where)h
Fu(d)p Ft(\()p Fu(v)50601 33583 y Fo(j)51068 33417 y
Ft(\))f Fy(is)f(the)26664 34745 y(de)-17 b(gree)379 b(of)e(node)i
Fu(v)34339 34911 y Fo(j)35113 34745 y Fq(2)307 b Fu(V)623
b Fy(and)379 b Fu(\256)40111 34911 y Fo(G)41232 34745
y Fy(is)e(the)g(sk)-11 b(e)-28 b(wness)379 b(of)e(the)h(de)-17
b(gree)26664 36073 y(distrib)-22 b(ution)534 b(of)g(the)g(graph)i
Fu(G)p Fy(.)e(In)g(order)g(to)g(estimate)h(the)f(v)-28
b(alue)26664 37469 y(of)448 b Fu(\256)28742 37635 y Fo(G)29487
37469 y Fy(,)g(we)h(use)f(the)h(Hill)f(estimator:)558
b Ft(^)-663 b Fu(\256)43434 36894 y Fp(\()p Fo(H)59 b(il)t(l)t
Fp(\))43430 37803 y Fo(k)19 b(;m)46268 37469 y Ft(=)420
b(1)p Fu(=)41 b Ft(^)-594 b Fu(\260)49228 37635 y Fo(k)19
b(;m)50822 37469 y Fy(,)448 b(where:)26704 39113 y Ft(^)-593
b Fu(\260)27237 39279 y Fo(k)19 b(;m)29178 39113 y Ft(=)30543
38677 y Fp(1)p 30519 38858 490 45 v 30519 39495 a Fo(k)31326
38283 y Fm(P)32494 38557 y Fo(k)32494 39445 y(i)p Fp(=1)34168
39113 y Ft(log)36155 38483 y Fo(X)36881 38631 y Fj(\()p
Fk(i)p Fj(\))p 35915 38859 2156 45 v 35915 39495 a Fo(X)36641
39612 y Fk(k)9 b Fj(+1)38203 39113 y Fy(,)409 b Fu(X)39806
39313 y Fp(\()p Fo(i)p Fp(\))41276 39113 y Fy(denotes)i(the)e
Fu(i)p Fy(-th)h(lar)-20 b(gest)409 b(v)-28 b(alue)26664
40461 y(in)430 b(the)g(sample)h Fu(X)34220 40627 y Fp(1)34717
40461 y Fu(;)184 b(:::;)g(X)37537 40627 y Fo(n)38143
40461 y Fy(.)430 b(W)-89 b(e)430 b(prefer)h(the)f(Hill)f(estimator)h
(since)26664 41789 y(it)387 b(is)f(less)h(biased)i(than)f(linear)g(re)
-17 b(gression.)27771 43137 y(In)311 b(Figure)i(6)e(we)h(plot)g(the)g
(cost)f(of)h(dUFL\(1\),)g(dUFL\(2\),)g(and)h(cen-)26664
44465 y(tralized)341 b(UFL,)g(in)f(ER)h(and)h(B)-39 b(A)341
b(graphs)h(under)g(the)f(aforementioned)26664 45794 y(de)-17
b(gree-based)460 b(f)-11 b(acility)457 b(cost.)g(F)-17
b(or)457 b(dUFL,)h(we)g(present)f(three)h(lines)26664
47122 y(for)515 b(each)i(radius)e Fu(r)31 b Fy(,)515
b(corresponding)j(to)e(dif)-28 b(ferent)516 b(initial)e(number)26664
48450 y(of)479 b(f)-11 b(acilities)477 b(used)j(in)f(the)h(iterati)-28
b(v)-17 b(e)480 b(algorithm)f(of)g(Section)i(III-B.)26664
49779 y(W)-89 b(e)518 b(use)g Fu(k)31198 49945 y Fp(0)32244
49779 y Ft(=)548 b(0)p Fu(:)p Ft(5)344 b Fq(\242)f Fu(F)154
b Fy(,)517 b Fu(F)154 b Fy(,)517 b(and)i Ft(2)343 b Fq(\242)g
Fu(F)154 b Fy(,)517 b(where)i Fu(F)671 b Fy(denotes)519
b(the)26664 51107 y(number)422 b(of)f(f)-11 b(acilities)420
b(opened)j(by)f(the)f(corresponding)j(centralized)26664
52435 y(UFL.)i(As)f(e)-28 b(vident)428 b(from)d(the)h(results,)e(the)j
(cost)e(of)h(dUFL)h(is)d(close)26664 53764 y(to)c(that)h(of)f(UFL)h
(\(around)h(5-15\045)g(for)e(both)h(types)g(of)g(graphs\).)f(As)26664
55092 y(with)369 b(dUKM,)h(the)g(performance)i(impro)-17
b(v)g(es)372 b(with)d Fu(r)401 b Fy(and)370 b(is)f(slightly)26664
56420 y(better)526 b(for)f(B)-39 b(A)526 b(graphs)g(\(see)g(the)g(e)-17
b(xplanation)529 b(in)c(Section)i(V)-111 b(-B\).)26664
57749 y(Also)355 b(we)g(observ)-17 b(e)357 b(a)e(tendenc)-17
b(y)358 b(for)d(lo)-28 b(wer)356 b(costs)e(when)j(starting)d(the)26664
59077 y(distrib)-22 b(uted)328 b(algorithm)h(with)f(a)h(higher)g
(number)g(of)g(initial)e(f)-11 b(acilities.)26664 60405
y(Under)313 b(the)f(non-uniform)h(\(de)-17 b(gree-based\))314
b(cost)e(model,)h(both)g(dUFL)26664 61734 y(and)329 b(UFL)g(open)h(f)
-11 b(acilities)327 b(in)i(2-8\045)f(of)g(the)h(total)f(nodes,)i
(depending)26664 63062 y(on)388 b(the)g(e)-17 b(xample.)27771
64410 y(W)-89 b(e)416 b(also)g(e)-28 b(v)g(aluate)418
b(the)f(performance)h(of)d(dUFL)i(under)g(uniform)26664
65738 y(f)-11 b(acility)368 b(cost)h Fu(f)119 b Fy(;)368
b(the)h(cost)g(is)e(set)h(at)h(a)g(v)-28 b(alue)370 b(that)f(leads)g
(to)g(b)-22 b(uilding)26664 67066 y(the)532 b(same)g(number)i(of)e(f)
-11 b(acilities)530 b(as)i(the)h(corresponding)h(de)-17
b(gree-)26664 68395 y(based)294 b(e)-17 b(xample.)296
b(Both)e(the)g(distrib)-22 b(uted)294 b(and)h(centralized)g(UFL)f(b)-22
b(uild)26664 69723 y(the)420 b(same)g(number)h(of)f(f)-11
b(acilities,)418 b(and)j(the)f(performance)i(of)e(dUFL)26664
71051 y(is)370 b(v)-17 b(ery)373 b(close)f(to)f(the)h(centralized)h
(one,)f(as)g(is)e(illustrated)h(in)g(Fig.)h(7.)27771
72399 y(Ag)-6 b(ain,)427 b(we)f(emphasize)i(that)d(our)i(goal)f(here)h
(is)d(not)i(to)g(e)-28 b(v)g(aluate)p eop end
%%Page: 8 8
TeXDict begin 8 7 bop -2560 -672 a Fy(performance)268
b(under)e(dif)-28 b(ferent)266 b(pricing)g(scheme,)h(b)-22
b(ut)265 b(rather)h(to)f(sho)-28 b(w)-2560 657 y(that)308
b(the)h(performance)h(of)e(distrib)-22 b(uted)308 b(UFL)h(tracks)f
(well)g(that)g(of)g(the)-2560 1985 y(centralized,)389
b(optimal)g(approach.)-221 4242 y(V)56 b(I)g(.)607 b(R)56
b Fz(E)g(S)g(U)g(L)-25 b(T)56 b(S)325 b(F)56 b(O)g(R)329
b Fy(R)56 b Fz(E)g(A)g(L)328 b Fy(A)56 b(S)g(-)g Fz(L)g(E)g(V)g(E)g(L)
325 b Fy(T)38 b Fz(O)56 b(P)g(O)g(L)g(O)g(G)g(I)g(E)g(S)-1453
6047 y Fy(T)-89 b(o)551 b(further)f(in)-44 b(v)-17 b(estig)-6
b(ate)551 b(the)g(performance)h(of)e(our)g(distrib)-22
b(uted)-2560 7375 y(approach,)467 b(as)d(well)g(as)g(better)h(support)g
(our)g(sk)-11 b(etched)466 b(application)-2560 8703 y(scenario)633
b(described)g(in)f(the)g(introduction,)h(we)g(include)g(in)f(this)-2560
10032 y(section)342 b(performance)i(results)d(on)i(real)e(AS-le)-28
b(v)-17 b(el)344 b(maps)e(under)h(non-)-2560 11360 y(uniform)388
b(service)g(demand)i(from)e(dif)-28 b(ferent)388 b(clients.)-2560
13617 y Fw(A.)554 b(Description)388 b(of)g(the)g(AS-le)-17
b(vel)389 b(Dataset)-1453 15368 y Fy(W)-89 b(e)562 b(use)g(the)g
(relation-based)h(AS)f(map)g(of)g(the)g(Internet)f(from)-2560
16697 y(December)631 b(2001)f(\(data)f(a)-22 b(v)-28
b(ailable)631 b(from)d([23]\))g(obtained)j(using)-2560
18025 y(the)477 b(measurement)h(methodology)h(described)f(in)f([5].)e
(The)i(dataset)-2560 19354 y(includes)389 b(tw)-11 b(o)388
b(kinds)g(of)f(relationships)h(between)i(ASes.)-1453
20948 y Fl(\262)664 b Fy(Costumer)-22 b(-Pro)-17 b(vider:)464
b(The)f(costumer)h(is)d(typically)j(a)f(smaller)-335
22277 y(AS)511 b(that)g(pays)h(a)g(lar)-20 b(ger)511
b(AS)h(for)e(pro)-17 b(viding)514 b(it)c(with)h(access)-335
23605 y(to)394 b(the)g(rest)f(of)h(the)h(Internet.)f(The)h(pro)-17
b(vider)396 b(may)-72 b(,)394 b(in)h(turn,)e(be)-335
24933 y(a)490 b(costumer)h(of)f(an)g(e)-28 b(v)-17 b(en)493
b(lar)-20 b(ger)490 b(AS.)g(A)g(costumer)-22 b(-pro)-17
b(vider)-335 26262 y(relationship)527 b(is)f(modeled)i(using)f(a)g
(directed)h(link)e(from)h(the)-335 27590 y(pro)-17 b(vider)389
b(to)e(the)i(costumer)-61 b(.)-1453 28918 y Fl(\262)664
b Fy(Peer)-22 b(-Peer:)474 b(Peer)h(ASes)f(are)h(typically)f(of)g
(comparable)i(sizes)-335 30247 y(and)556 b(ha)-22 b(v)-17
b(e)557 b(mutual)f(agreements)h(for)e(carrying)h(each)h(other')-61
b(s)-335 31575 y(traf)-28 b(\002c.)501 b(Peer)-22 b(-peer)502
b(relationships)f(are)g(modeled)h(using)g(undi-)-335
32903 y(rected)388 b(links.)-1453 34498 y(Ov)-17 b(erall)602
b(the)g(dataset)g(includes)h(12,779)g(unique)g(ASes,)f(1,076)-2560
35827 y(peers)564 b(and)i(11,703)g(costumers,)e(connected)j(through)f
(26,387)g(di-)-2560 37155 y(rected)586 b(and)h(1,336)g(undirected)h
(links.)d(Since)i(this)d(AS)i(graph)h(is)-2560 38483
y(not)699 b(connected,)i(we)e(chose)h(to)e(present)h(results)f(based)h
(on)g(its)-2560 39812 y(lar)-20 b(gest)422 b(connected)k(component)
10619 39410 y Fs(9)11336 39812 y Fy(,)c(which)h(we)g(found)h(to)e
(include)i(a)-2560 41140 y(substantial)338 b(part)g(of)f(the)h(total)g
(AS)g(topology)i(at)d(the)i(peer)f(le)-28 b(v)-17 b(el:)339
b(497)-2560 42468 y(peer)366 b(ASes)f(connected)k(with)c(1,012)h
(undirected)h(links;)e(we)g(v)-17 b(eri\002ed)-2560 43797
y(that)588 b(this)f(component)k(contains)d(all)g(the)g(20)g(lar)-20
b(gest)588 b(peer)h(ASes)-2560 45125 y(reported)358 b(in)e([5].)g(F)-17
b(or)357 b(comparison)h(purposes,)f(we)g(plot)g(in)f(Figure)i(8)-2560
46453 y(the)311 b(node)h(co)-17 b(v)g(erage)314 b(of)d(AS)f(ne)-17
b(xt)312 b(to)f(the)g(ones)g(corresponding)i(to)e(the)-2560
47782 y(ER)274 b(and)h(B)-39 b(A)274 b(models)h(with)e
Fu(n)308 b Ft(=)g(497)275 b Fy(and)g(around)g(the)f(same)h(number)-2560
49110 y(of)292 b(links)g(\()p Ft(1)p Fu(;)184 b Ft(000)p
Fy(\).)295 b(The)e(fraction)g(of)f(co)-17 b(v)g(ered)296
b(nodes)d(increases)h(more)-2560 50438 y(smoothly)334
b(with)g Fu(r)364 b Fy(in)333 b(the)h(AS)g(graph)g(as)g(compared)h(to)f
(both)g(ER)g(and)-2560 51767 y(B)-39 b(A.)518 b(This)g(is)g(because)i
(the)e(AS)h(graph)g(includes)h(longer)f(shortest)-2560
53095 y(paths)308 b(and)h(has)g(lar)-20 b(ger)308 b(diameter)h(than)f
(the)h(corresponding)h(synthetic)-2560 54423 y(ER)388
b(and)h(B)-39 b(A)388 b(graphs)h(of)e(similar)g(size)h(and)g(link)g
(density)-72 b(.)-1453 55773 y(W)-89 b(e)275 b(e)-17
b(xploit)275 b(the)g(relationships)g(between)h(ASes)f(in)f(order)h(to)f
(deri)-28 b(v)-17 b(e)-2560 57102 y(a)513 b(more)h(realistic)f
(\(non-uniform\))h(service)f(demand)j(for)d(the)g(peer)-2560
58430 y(ASes)326 b(that)g(we)g(consider)-61 b(.)327 b(Our)f(approach)i
(is)d(to)h(count)h(for)e(each)i(peer)-2560 59758 y(AS)522
b(the)g(number)h(of)f(costumer)g(ASes)g(that)g(ha)-22
b(v)-17 b(e)524 b(it)d(as)g(pro)-17 b(vider)-44 b(,)-2560
61087 y(either)467 b(directly)f(or)g(through)i(other)f(intermediary)h
(ASes.)e(W)-89 b(e)467 b(then)-2560 62415 y(set)656 b(the)h(service)g
(demand)h(of)f(a)f(peer)i(AS)e(to)g(be)i(proportional)-2560
63743 y(to)526 b(this)g(number)-61 b(.)528 b(In)e(Figure)i(9)e(we)h
(plot)g(the)g(demand)i(pro\002le)e(of)-2560 65072 y(peer)618
b(ASes)f(\(in)f(decreasing)j(order)f(using)f(Log-Log)i(scale\).)e(As)
-2560 66400 y(e)-28 b(vident)589 b(from)d(this)g(plot,)h(the)g
(pro\002le)h(is)e(po)-28 b(wer)-22 b(-la)-17 b(w)589
b(lik)-11 b(e)587 b(\(with)-2560 67728 y(slight)346 b(de)-28
b(viation)349 b(to)-28 b(w)-11 b(ards)347 b(the)g(tail\),)f(meaning)i
(that)f(fe)-28 b(w)347 b(core)h(ASes)-2560 69057 y(carry)h(the)g
(majority)f(of)g(the)h(demand)i(that)e(\003o)-28 b(ws)349
b(from)f(client)h(ASes.)-1674 71090 y Fr(9)-1121 71403
y Fz(There)329 b(are)f(smaller)i(connected)f(components)f(\()p
Fb(2)p Fz(-)p Fb(8)h Fz(ASes\))h(that)f(are)g(formed)f(by)-2560
72399 y(small)311 b(re)-13 b(gional)310 b(ISPs)h(with)f(peering)g
(relationships.)26664 -2000 y
 gsave currentpoint currentpoint translate -90 neg rotate neg exch
neg exch translate
 26664 -2000 a @beginspecial
50 @llx 50 @lly 554 @urx 770 @ury 1080 @rwi @setspecial
%%BeginDocument: Figs/ER-BA-AS.eps
%!PS-Adobe-2.0
%%Title: ER-BA-AS.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Jul 27 19:17:09 2006
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -76 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 230 scalefont setfont
1.000 UL
LTb
1173 690 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 0) Rshow
grestore
1.000 UL
LTb
1173 1422 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 0.2) Rshow
grestore
1.000 UL
LTb
1173 2154 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 0.4) Rshow
grestore
1.000 UL
LTb
1173 2886 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 0.6) Rshow
grestore
1.000 UL
LTb
1173 3618 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 0.8) Rshow
grestore
1.000 UL
LTb
1173 4350 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 1) Rshow
grestore
1.000 UL
LTb
1500 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 2) Cshow
grestore
1.000 UL
LTb
2153 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 4) Cshow
grestore
1.000 UL
LTb
2807 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 6) Cshow
grestore
1.000 UL
LTb
3460 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 8) Cshow
grestore
1.000 UL
LTb
4113 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 10) Cshow
grestore
1.000 UL
LTb
4767 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 12) Cshow
grestore
1.000 UL
LTb
5420 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 14) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1173 690 M
4574 0 V
0 3660 V
-4574 0 V
0 -3660 V
LTb
230 2520 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 M
(coverage) Cshow
grestore
grestore
LTb
3460 115 M
gsave 0 setgray
(radius r) Cshow
grestore
LTb
3460 4695 M
gsave 0 setgray
(ER, BA and AS-level coverage with n=497 nodes) Cshow
grestore
1.000 UP
1.500 UP
1.000 UL
LT1
1173 691 M
0 71 V
-31 -71 R
62 0 V
-62 71 R
62 0 V
296 -39 R
0 489 V
1469 723 M
62 0 V
-62 489 R
62 0 V
295 92 R
0 1423 V
1795 1304 M
62 0 V
-62 1423 R
62 0 V
296 309 R
0 1208 V
2122 3036 M
62 0 V
-62 1208 R
62 0 V
296 -77 R
0 183 V
-31 -183 R
62 0 V
-62 183 R
62 0 V
296 -9 R
0 9 V
-31 -9 R
62 0 V
-62 9 R
62 0 V
295 0 R
-31 0 R
62 0 V
-62 0 R
62 0 V
1173 727 BoxF
1500 967 BoxF
1826 2015 BoxF
2153 3640 BoxF
2480 4294 BoxF
2807 4349 BoxF
3133 4350 BoxF
1.500 UP
1.000 UL
LT1
LTb
4718 1328 M
gsave 0 setgray
(BA) Rshow
grestore
LT1
4856 1328 M
615 0 V
1173 727 M
327 240 V
326 1048 V
327 1625 V
327 654 V
327 55 V
326 1 V
1173 727 BoxF
1500 967 BoxF
1826 2015 BoxF
2153 3640 BoxF
2480 4294 BoxF
2807 4349 BoxF
3133 4350 BoxF
5163 1328 BoxF
1.500 UP
1.000 UL
LT3
1173 709 M
0 36 V
-31 -36 R
62 0 V
-62 36 R
62 0 V
296 -2 R
0 221 V
1469 743 M
62 0 V
-62 221 R
62 0 V
295 -26 R
0 779 V
1795 938 M
62 0 V
-62 779 R
62 0 V
296 71 R
0 1369 V
2122 1788 M
62 0 V
-62 1369 R
62 0 V
296 163 R
0 933 V
-31 -933 R
62 0 V
-62 933 R
62 0 V
296 -37 R
0 134 V
-31 -134 R
62 0 V
-62 134 R
62 0 V
295 -4 R
0 4 V
-31 -4 R
62 0 V
-62 4 R
62 0 V
296 0 R
-31 0 R
62 0 V
-62 0 R
62 0 V
1173 727 TriU
1500 853 TriU
1826 1327 TriU
2153 2472 TriU
2480 3786 TriU
2807 4303 TriU
3133 4349 TriU
3460 4350 TriU
1.500 UP
1.000 UL
LT3
LTb
4718 1098 M
gsave 0 setgray
(ER) Rshow
grestore
LT3
4856 1098 M
615 0 V
1173 727 M
327 126 V
326 474 V
327 1145 V
327 1314 V
327 517 V
326 46 V
327 1 V
1173 727 TriU
1500 853 TriU
1826 1327 TriU
2153 2472 TriU
2480 3786 TriU
2807 4303 TriU
3133 4349 TriU
3460 4350 TriU
5163 1098 TriU
1.500 UP
1.000 UL
LT3
1173 690 M
0 86 V
-31 -86 R
62 0 V
-62 86 R
62 0 V
296 -39 R
0 415 V
1469 737 M
62 0 V
-62 415 R
62 0 V
1826 891 M
0 845 V
1795 891 M
62 0 V
-62 845 R
62 0 V
296 -380 R
0 1106 V
2122 1356 M
62 0 V
-62 1106 R
62 0 V
296 -578 R
0 994 V
-31 -994 R
62 0 V
-62 994 R
62 0 V
296 -641 R
0 943 V
-31 -943 R
62 0 V
-62 943 R
62 0 V
295 -648 R
0 1081 V
3102 2532 M
62 0 V
-62 1081 R
62 0 V
296 -485 R
0 1095 V
3429 3128 M
62 0 V
-62 1095 R
62 0 V
296 -469 R
0 596 V
-31 -596 R
62 0 V
-62 596 R
62 0 V
295 -231 R
0 231 V
-31 -231 R
62 0 V
-62 231 R
62 0 V
296 -88 R
0 88 V
-31 -88 R
62 0 V
-62 88 R
62 0 V
296 -30 R
0 30 V
-31 -30 R
62 0 V
-62 30 R
62 0 V
296 -6 R
0 6 V
-31 -6 R
62 0 V
-62 6 R
62 0 V
295 0 R
-31 0 R
62 0 V
-62 0 R
62 0 V
296 0 R
-31 0 R
62 0 V
-62 0 R
62 0 V
1173 727 Circle
1500 944 Circle
1826 1314 Circle
2153 1909 Circle
2480 2381 Circle
2807 2709 Circle
3133 3073 Circle
3460 3676 Circle
3787 4106 Circle
4113 4284 Circle
4440 4333 Circle
4767 4346 Circle
5094 4349 Circle
5420 4350 Circle
5747 4350 Circle
1.500 UP
1.000 UL
LT3
LTb
4718 868 M
gsave 0 setgray
(AS-level) Rshow
grestore
LT3
4856 868 M
615 0 V
1173 727 M
327 217 V
326 370 V
327 595 V
327 472 V
327 328 V
326 364 V
327 603 V
327 430 V
326 178 V
327 49 V
327 13 V
327 3 V
326 1 V
327 0 V
1173 727 Circle
1500 944 Circle
1826 1314 Circle
2153 1909 Circle
2480 2381 Circle
2807 2709 Circle
3133 3073 Circle
3460 3676 Circle
3787 4106 Circle
4113 4284 Circle
4440 4333 Circle
4767 4346 Circle
5094 4349 Circle
5420 4350 Circle
5747 4350 Circle
5163 868 Circle
1.000 UL
LTb
1173 690 M
4574 0 V
0 3660 V
-4574 0 V
0 -3660 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 38664 -2000 a
 currentpoint grestore moveto
 38664 -2000 a 40850 -2000
a
 gsave currentpoint currentpoint translate -90 neg rotate neg exch
neg exch translate
 40850 -2000 a @beginspecial 50 @llx 50 @lly 554 @urx
770 @ury 1080 @rwi @setspecial
%%BeginDocument: Figs/loglog_demand.eps
%!PS-Adobe-2.0
%%Title: loglog_demand.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Jul 27 19:20:18 2006
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -76 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 230 scalefont setfont
1.000 UL
LTb
1449 690 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 1) Rshow
grestore
1.000 UL
LTb
1449 965 M
31 0 V
4543 0 R
-31 0 V
1449 1127 M
31 0 V
4543 0 R
-31 0 V
1449 1241 M
31 0 V
4543 0 R
-31 0 V
-4543 89 R
31 0 V
4543 0 R
-31 0 V
-4543 72 R
31 0 V
4543 0 R
-31 0 V
-4543 61 R
31 0 V
4543 0 R
-31 0 V
-4543 53 R
31 0 V
4543 0 R
-31 0 V
-4543 47 R
31 0 V
4543 0 R
-31 0 V
-4543 42 R
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 10) Rshow
grestore
1.000 UL
LTb
1449 1880 M
31 0 V
4543 0 R
-31 0 V
1449 2042 M
31 0 V
4543 0 R
-31 0 V
1449 2156 M
31 0 V
4543 0 R
-31 0 V
-4543 89 R
31 0 V
4543 0 R
-31 0 V
-4543 72 R
31 0 V
4543 0 R
-31 0 V
-4543 61 R
31 0 V
4543 0 R
-31 0 V
-4543 53 R
31 0 V
4543 0 R
-31 0 V
-4543 47 R
31 0 V
4543 0 R
-31 0 V
-4543 42 R
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 100) Rshow
grestore
1.000 UL
LTb
1449 2795 M
31 0 V
4543 0 R
-31 0 V
1449 2957 M
31 0 V
4543 0 R
-31 0 V
1449 3071 M
31 0 V
4543 0 R
-31 0 V
-4543 89 R
31 0 V
4543 0 R
-31 0 V
-4543 72 R
31 0 V
4543 0 R
-31 0 V
-4543 61 R
31 0 V
4543 0 R
-31 0 V
-4543 53 R
31 0 V
4543 0 R
-31 0 V
-4543 47 R
31 0 V
4543 0 R
-31 0 V
-4543 42 R
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 1000) Rshow
grestore
1.000 UL
LTb
1449 3710 M
31 0 V
4543 0 R
-31 0 V
1449 3872 M
31 0 V
4543 0 R
-31 0 V
1449 3986 M
31 0 V
4543 0 R
-31 0 V
-4543 89 R
31 0 V
4543 0 R
-31 0 V
-4543 72 R
31 0 V
4543 0 R
-31 0 V
-4543 61 R
31 0 V
4543 0 R
-31 0 V
-4543 53 R
31 0 V
4543 0 R
-31 0 V
-4543 47 R
31 0 V
4543 0 R
-31 0 V
-4543 42 R
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 10000) Rshow
grestore
1.000 UL
LTb
1449 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 1) Cshow
grestore
1.000 UL
LTb
1908 690 M
0 31 V
0 3629 R
0 -31 V
2176 690 M
0 31 V
0 3629 R
0 -31 V
2367 690 M
0 31 V
0 3629 R
0 -31 V
2515 690 M
0 31 V
0 3629 R
0 -31 V
2635 690 M
0 31 V
0 3629 R
0 -31 V
2737 690 M
0 31 V
0 3629 R
0 -31 V
2826 690 M
0 31 V
0 3629 R
0 -31 V
2904 690 M
0 31 V
0 3629 R
0 -31 V
2974 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 10) Cshow
grestore
1.000 UL
LTb
3433 690 M
0 31 V
0 3629 R
0 -31 V
3701 690 M
0 31 V
0 3629 R
0 -31 V
3892 690 M
0 31 V
0 3629 R
0 -31 V
4039 690 M
0 31 V
0 3629 R
0 -31 V
4160 690 M
0 31 V
0 3629 R
0 -31 V
4262 690 M
0 31 V
0 3629 R
0 -31 V
4351 690 M
0 31 V
0 3629 R
0 -31 V
4429 690 M
0 31 V
0 3629 R
0 -31 V
4498 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 100) Cshow
grestore
1.000 UL
LTb
4957 690 M
0 31 V
0 3629 R
0 -31 V
5226 690 M
0 31 V
0 3629 R
0 -31 V
5416 690 M
0 31 V
0 3629 R
0 -31 V
5564 690 M
0 31 V
0 3629 R
0 -31 V
5685 690 M
0 31 V
0 3629 R
0 -31 V
5787 690 M
0 31 V
0 3629 R
0 -31 V
5875 690 M
0 31 V
0 3629 R
0 -31 V
5953 690 M
0 31 V
0 3629 R
0 -31 V
6023 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 1000) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1449 690 M
4574 0 V
0 3660 V
-4574 0 V
0 -3660 V
LTb
230 2520 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 M
(# costumer ASes) Cshow
grestore
grestore
LTb
3736 115 M
gsave 0 setgray
(rank of peer-AS) Cshow
grestore
LTb
3736 4695 M
gsave 0 setgray
(#costumer ASes for a peer-AS) Cshow
grestore
1.000 UP
1.000 UP
1.000 UL
LT0
1449 3773 M
459 -216 V
268 -69 V
191 -159 V
148 -48 V
120 -76 V
102 -22 V
89 -9 V
78 -15 V
70 -89 V
63 -11 V
57 -79 V
53 -36 V
49 -35 V
46 -8 V
43 -43 V
40 -5 V
38 -29 V
36 -21 V
34 -24 V
32 -39 V
31 -21 V
29 -7 V
28 -23 V
27 -27 V
26 -3 V
25 -5 V
24 -15 V
24 -34 V
22 -16 V
22 0 V
21 -20 V
20 -33 V
20 -4 V
19 0 V
19 -8 V
18 0 V
18 -29 V
17 -4 V
17 -40 V
16 0 V
16 -5 V
15 -5 V
16 -15 V
15 -20 V
14 -17 V
14 -22 V
14 -6 V
14 -6 V
13 0 V
13 -31 V
13 -14 V
13 -13 V
12 0 V
12 -7 V
12 0 V
12 -15 V
12 -7 V
11 -16 V
11 -7 V
11 -8 V
11 0 V
10 -9 V
11 -8 V
10 -17 V
10 -28 V
10 0 V
10 0 V
10 -9 V
9 -20 V
10 0 V
9 -10 V
9 -11 V
9 -22 V
9 0 V
9 0 V
8 0 V
9 -12 V
8 0 V
9 0 V
8 0 V
8 -24 V
8 0 V
8 0 V
8 -12 V
7 0 V
8 -13 V
8 -28 V
7 0 V
8 0 V
7 -14 V
7 -15 V
7 0 V
7 0 V
7 -16 V
7 0 V
7 -16 V
7 0 V
7 0 V
6 0 V
7 0 V
6 -17 V
7 0 V
6 0 V
7 0 V
stroke
4531 1936 M
6 0 V
6 -18 V
6 0 V
6 -18 V
6 0 V
6 0 V
6 -20 V
6 0 V
6 0 V
6 0 V
6 0 V
5 0 V
6 -20 V
6 0 V
5 -21 V
6 0 V
5 0 V
5 -23 V
6 0 V
5 0 V
5 0 V
6 0 V
5 0 V
5 -24 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 0 V
5 -26 V
5 0 V
4 0 V
5 -27 V
5 0 V
5 0 V
4 0 V
5 0 V
4 0 V
5 -30 V
4 0 V
5 0 V
4 0 V
5 0 V
4 0 V
5 -32 V
4 0 V
4 0 V
5 0 V
4 0 V
4 -34 V
4 0 V
4 0 V
5 0 V
4 0 V
4 0 V
4 0 V
4 0 V
4 0 V
4 0 V
4 0 V
4 0 V
4 0 V
4 -38 V
4 0 V
3 0 V
4 0 V
4 0 V
4 0 V
4 -42 V
3 0 V
4 0 V
4 0 V
4 0 V
3 0 V
4 0 V
3 0 V
4 0 V
4 0 V
3 0 V
4 0 V
3 0 V
4 -47 V
3 0 V
4 0 V
3 0 V
4 0 V
3 0 V
4 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
4 -53 V
3 0 V
3 0 V
3 0 V
4 0 V
3 0 V
3 0 V
3 0 V
3 0 V
stroke
4986 1463 M
4 -61 V
3 0 V
3 0 V
3 0 V
3 0 V
3 0 V
3 0 V
3 0 V
3 0 V
3 0 V
3 0 V
3 0 V
3 0 V
3 -72 V
3 0 V
3 0 V
3 0 V
3 0 V
3 0 V
3 0 V
3 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 -89 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 -114 V
3 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
3 0 V
2 0 V
2 0 V
3 0 V
2 0 V
3 -162 V
2 0 V
3 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 -275 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
stroke
5254 690 M
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
3 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
stroke
5444 690 M
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
1 0 V
2 0 V
1 0 V
1 0 V
2 0 V
1 0 V
2 0 V
1 0 V
1 0 V
2 0 V
1 0 V
1 0 V
2 0 V
1 0 V
1 0 V
2 0 V
1 0 V
1.000 UL
LTb
1449 690 M
4574 0 V
0 3660 V
-4574 0 V
0 -3660 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 52850 -2000 a
 currentpoint grestore moveto
 52850 -2000 a 26664 11268
a Fz(Fig.)371 b(8.)1110 b Fs(Node)326 b(co)-12 b(v)g(erage)326
b(in)f(AS,)f(ER,)g(and)26664 12154 y(B)-27 b(A)348 b(topologies)j(with)
f Fo(n)419 b Fp(=)e(497)349 b Fs(nodes)h(and)26664 13039
y(similar)272 b(number)h(of)f(links.)40850 11268 y Fz(Fig.)411
b(9.)1231 b Fs(Number)361 b(of)e(costumer)i(ASes)f(for)40850
12154 y(each)224 b(peer)-15 b(-AS)224 b(in)g(decreasing)h(order)g
(according)40850 13039 y(to)272 b(rank.)26664 14413 y
 gsave currentpoint currentpoint translate -90 neg rotate neg exch
neg exch translate

26664 14413 a @beginspecial 50 @llx 50 @lly 554 @urx
770 @ury 1080 @rwi @setspecial
%%BeginDocument: Figs/AS-kmedian-non_normalized.eps
%!PS-Adobe-2.0
%%Title: AS-kmedian-non_normalized.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Jul 27 19:25:27 2006
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -76 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 230 scalefont setfont
1.000 UL
LTb
1449 690 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 5000) Rshow
grestore
1.000 UL
LTb
1449 1147 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 10000) Rshow
grestore
1.000 UL
LTb
1449 1605 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 15000) Rshow
grestore
1.000 UL
LTb
1449 2062 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 20000) Rshow
grestore
1.000 UL
LTb
1449 2520 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 25000) Rshow
grestore
1.000 UL
LTb
1449 2977 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 30000) Rshow
grestore
1.000 UL
LTb
1449 3435 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 35000) Rshow
grestore
1.000 UL
LTb
1449 3892 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 40000) Rshow
grestore
1.000 UL
LTb
1449 4350 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 45000) Rshow
grestore
1.000 UL
LTb
1449 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 0) Cshow
grestore
1.000 UL
LTb
2346 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 5) Cshow
grestore
1.000 UL
LTb
3243 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 10) Cshow
grestore
1.000 UL
LTb
4140 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 15) Cshow
grestore
1.000 UL
LTb
5036 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 20) Cshow
grestore
1.000 UL
LTb
5933 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 25) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1449 690 M
4574 0 V
0 3660 V
-4574 0 V
0 -3660 V
LTb
230 2520 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 M
(social cost) Cshow
grestore
grestore
LTb
3736 115 M
gsave 0 setgray
(k) Cshow
grestore
LTb
3736 4695 M
gsave 0 setgray
(dUKM - AS-level) Cshow
grestore
1.000 UP
1.500 UP
1.000 UL
LT1
1628 3454 M
0 890 V
-31 -890 R
62 0 V
-62 890 R
62 0 V
1987 2252 M
0 826 V
-31 -826 R
62 0 V
-62 826 R
62 0 V
2346 2077 M
0 314 V
-31 -314 R
62 0 V
-62 314 R
62 0 V
866 -674 R
0 164 V
-31 -164 R
62 0 V
-62 164 R
62 0 V
5933 1240 M
0 143 V
-31 -143 R
62 0 V
-62 143 R
62 0 V
1628 3899 BoxF
1987 2665 BoxF
2346 2234 BoxF
3243 1799 BoxF
5933 1312 BoxF
1.500 UP
1.000 UL
LT1
LTb
4994 4172 M
gsave 0 setgray
(dUKM\(1\)) Rshow
grestore
LT1
5132 4172 M
615 0 V
1628 3899 M
1987 2665 L
359 -431 V
897 -435 V
5933 1312 L
1628 3899 BoxF
1987 2665 BoxF
2346 2234 BoxF
3243 1799 BoxF
5933 1312 BoxF
5439 4172 BoxF
1.500 UP
1.000 UL
LT3
1628 3318 M
0 40 V
-31 -40 R
62 0 V
-62 40 R
62 0 V
1987 2246 M
0 66 V
-31 -66 R
62 0 V
-62 66 R
62 0 V
328 -355 R
0 208 V
-31 -208 R
62 0 V
-62 208 R
62 0 V
866 -513 R
0 209 V
-31 -209 R
62 0 V
-62 209 R
62 0 V
5933 1213 M
-31 0 R
62 0 V
-62 0 R
62 0 V
1628 3338 TriU
1987 2279 TriU
2346 2061 TriU
3243 1757 TriU
5933 1213 TriU
1.500 UP
1.000 UL
LT3
LTb
4994 3942 M
gsave 0 setgray
(dUKM\(2\)) Rshow
grestore
LT3
5132 3942 M
615 0 V
1628 3338 M
1987 2279 L
359 -218 V
897 -304 V
5933 1213 L
1628 3338 TriU
1987 2279 TriU
2346 2061 TriU
3243 1757 TriU
5933 1213 TriU
5439 3942 TriU
1.500 UP
1.000 UL
LT0
LTb
4994 3712 M
gsave 0 setgray
(UKM) Rshow
grestore
LT0
5132 3712 M
615 0 V
1628 3325 M
1987 2253 L
359 -250 V
897 -421 V
5933 1038 L
1628 3325 Star
1987 2253 Star
2346 2003 Star
3243 1582 Star
5933 1038 Star
5439 3712 Star
1.000 UL
LTb
1449 690 M
4574 0 V
0 3660 V
-4574 0 V
0 -3660 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 38664 14413 a
 currentpoint grestore moveto
 38664 14413 a 40850 14413
a
 gsave currentpoint currentpoint translate -90 neg rotate neg exch
neg exch translate
 40850 14413 a @beginspecial 50 @llx 50 @lly 554 @urx
770 @ury 1080 @rwi @setspecial
%%BeginDocument: Figs/AS-iterations.eps
%!PS-Adobe-2.0
%%Title: AS-iterations.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Thu Jul 27 19:26:56 2006
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -76 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 230 scalefont setfont
1.000 UL
LTb
1173 690 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 0) Rshow
grestore
1.000 UL
LTb
1173 1300 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 20) Rshow
grestore
1.000 UL
LTb
1173 1910 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 40) Rshow
grestore
1.000 UL
LTb
1173 2520 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 60) Rshow
grestore
1.000 UL
LTb
1173 3130 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 80) Rshow
grestore
1.000 UL
LTb
1173 3740 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 100) Rshow
grestore
1.000 UL
LTb
1173 4350 M
63 0 V
4511 0 R
-63 0 V
-4649 0 R
gsave 0 setgray
( 120) Rshow
grestore
1.000 UL
LTb
1173 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 0) Cshow
grestore
1.000 UL
LTb
2070 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 5) Cshow
grestore
1.000 UL
LTb
2967 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 10) Cshow
grestore
1.000 UL
LTb
3864 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 15) Cshow
grestore
1.000 UL
LTb
4760 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 20) Cshow
grestore
1.000 UL
LTb
5657 690 M
0 63 V
0 3597 R
0 -63 V
0 -3827 R
gsave 0 setgray
( 25) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1173 690 M
4574 0 V
0 3660 V
-4574 0 V
0 -3660 V
LTb
230 2520 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 M
(number of iterations) Cshow
grestore
grestore
LTb
3460 115 M
gsave 0 setgray
(k) Cshow
grestore
LTb
3460 4695 M
gsave 0 setgray
(dUKM, iterations - AS-level) Cshow
grestore
1.000 UP
1.500 UP
1.000 UL
LT1
1352 745 M
0 177 V
1321 745 M
62 0 V
-62 177 R
62 0 V
328 -84 R
0 357 V
1680 838 M
62 0 V
-62 357 R
62 0 V
2070 893 M
0 424 V
2039 893 M
62 0 V
-62 424 R
62 0 V
866 -154 R
0 274 V
-31 -274 R
62 0 V
-62 274 R
62 0 V
2659 43 R
0 2415 V
5626 1480 M
62 0 V
-62 2415 R
62 0 V
1352 833 BoxF
1711 1016 BoxF
2070 1105 BoxF
2967 1300 BoxF
5657 2688 BoxF
1.500 UP
1.000 UL
LT1
LTb
2277 4172 M
gsave 0 setgray
(dUKM\(1\)) Rshow
grestore
LT1
2415 4172 M
615 0 V
1352 833 M
359 183 V
359 89 V
897 195 V
5657 2688 L
1352 833 BoxF
1711 1016 BoxF
2070 1105 BoxF
2967 1300 BoxF
5657 2688 BoxF
2722 4172 BoxF
1.500 UP
1.000 UL
LT3
1352 772 M
0 73 V
-31 -73 R
62 0 V
-62 73 R
62 0 V
328 -56 R
0 107 V
1680 789 M
62 0 V
-62 107 R
62 0 V
328 -21 R
0 82 V
-31 -82 R
62 0 V
-62 82 R
62 0 V
866 -77 R
0 102 V
2936 880 M
62 0 V
-62 102 R
62 0 V
2659 87 R
0 96 V
-31 -96 R
62 0 V
-62 96 R
62 0 V
1352 809 TriU
1711 843 TriU
2070 916 TriU
2967 931 TriU
5657 1117 TriU
1.500 UP
1.000 UL
LT3
LTb
2277 3942 M
gsave 0 setgray
(dUKM\(2\)) Rshow
grestore
LT3
2415 3942 M
615 0 V
1352 809 M
359 34 V
359 73 V
897 15 V
2690 186 V
1352 809 TriU
1711 843 TriU
2070 916 TriU
2967 931 TriU
5657 1117 TriU
2722 3942 TriU
1.000 UL
LTb
1173 690 M
4574 0 V
0 3660 V
-4574 0 V
0 -3660 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 52850 14413 a
 currentpoint grestore moveto
 52850 14413 a 26664 27681
a Fz(Fig.)429 b(10.)1284 b Fs(The)375 b(cost)h(of)f(dUKM\()p
Fo(r)24 b Fs(\))376 b(and)g(UKM,)f(and)g(the)h(number)f(of)g
(iterations)j(for)d(the)26664 28566 y(con)-31 b(v)-12
b(er)e(gence)385 b(of)e(the)g(former)-31 b(,)383 b(for)g
Fo(r)517 b Fp(=)492 b(1)383 b Fs(and)g Fo(r)517 b Fp(=)493
b(2)p Fs(,)382 b(and)h(dif)-19 b(ferent)384 b(f)-8 b(acility)385
b(densities)26664 29452 y Fo(k)19 b(=n)251 b Fp(=)g(0)p
Fo(:)p Fp(1\045)p Fo(;)152 b Fp(0)p Fo(:)p Fp(5\045)p
Fo(;)g Fp(1\045)p Fo(;)f Fp(2\045)p Fo(;)272 b Fs(and)g
Fp(5\045)g Fs(under)g(the)g(AS)g(graph.)26664 31668 y
Fy(In)408 b(the)g(sequel)i(we)e(present)h(performance)i(results)c(in)h
(which)i(nodes)26664 32997 y(correspond)351 b(to)f(peer)h(ASs)e(that)h
(generate)i(demand)g(that)e(follo)-28 b(ws)349 b(the)26664
34325 y(aforementioned)302 b(po)-28 b(wer)-22 b(-la)-17
b(w)301 b(lik)-11 b(e)299 b(pro\002le.)h(W)-89 b(e)300
b(seek)g(to)g(identify)f(the)26664 35653 y(peer)388 b(ASes)g(for)g(b)
-22 b(uilding)388 b(service)h(f)-11 b(acilities.)26664
37044 y Fw(B.)553 b(Distrib)-22 b(uted)388 b(UKM)g(on)g(the)g(AS-le)-17
b(vel)390 b(Dataset)27771 38768 y Fy(The)395 b(plots)f(on)i(the)e
(left-hand-side)i(of)e(Figure)h(10)h(sho)-28 b(w)395
b(the)g(cost)26664 40096 y(of)625 b(dUKM\(1\),)h(dUKM\(2\),)h(and)g
(the)f(centralized)i(UKM,)e(under)26664 41425 y(the)681
b(AS-le)-28 b(v)-17 b(el)683 b(graph.)f(Clearly)-72 b(,)681
b(e)-28 b(v)-17 b(en)683 b(for)e(small)f(v)-28 b(alues)682
b(of)f Fu(r)31 b Fy(,)26664 42753 y(the)502 b(performance)i(of)d(our)h
(distrib)-22 b(uted)502 b(approaches)j(track)d(closely)26664
44082 y(that)566 b(of)f(the)i(centralized)g(approach.)h(Re)-17
b(g)-6 b(arding)569 b(the)e(number)g(of)26664 45410 y(iterations)272
b(needed)j(for)d(con)-44 b(v)-17 b(er)d(gence,)276 b(the)d(same)g
(observ)-28 b(ations)274 b(apply)26664 46738 y(as)268
b(with)g(the)g(synthetic)h(topologies,)g Fw(i.e)-17 b(.)p
Fy(,)268 b(the)-17 b(y)269 b(increase)g(with)f(smaller)26664
48067 y(radii.)511 b(The)j(substantial)e(bene\002t)i(from)e(kno)-28
b(wledge)516 b(of)c(only)h(local)26664 49395 y(neighborhood)441
b(topologies)e(\(\223neighbors)h(of)d(neighbor\224\))j(has)e(been)26664
50723 y(observ)-17 b(ed)436 b(for)e(a)g(number)i(of)e(applications,)i
(including)g([18])e(which)26664 52052 y(has)393 b(also)f(in)-44
b(v)-17 b(estig)-6 b(ated)395 b(and)f(quanti\002ed)h(implementation)f
(o)-17 b(v)g(erhead)26664 53380 y(in)387 b(an)i(Internet)f(setting.)
26664 54770 y Fw(C.)553 b(Distrib)-22 b(uted)388 b(UFL)g(on)h(the)f
(AS-le)-17 b(vel)389 b(Dataset)27771 56495 y Fy(T)-89
b(able)624 b(I)f(presents)g(the)g(performance)j(of)d(dUFL)h(on)f(the)h
(AS-)26664 57823 y(le)-28 b(v)-17 b(el)549 b(dataset.)f(Ag)-6
b(ain,)549 b(it)d(is)h(v)-17 b(eri\002ed)549 b(that)f(dUFL)h(is)e(v)-17
b(ery)548 b(close)26664 59152 y(in)323 b(performance)i(to)e(UFL,)g(e)
-28 b(v)-17 b(en)326 b(for)c(small)h(v)-28 b(alues)324
b(of)f Fu(r)354 b Fy(\(within)323 b(4\045)26664 60480
y(for)387 b Fu(r)338 b Ft(=)308 b(2)p Fy(,)388 b(under)h(both)f(e)-17
b(xamined)391 b(f)-11 b(acility)387 b(cost)h(models\).)35412
62670 y(V)56 b(I)g(I)g(.)606 b(R)56 b Fz(E)g(L)g(A)-43
b(T)56 b(E)g(D)326 b Fy(W)46 b Fz(O)56 b(R)e(K)27771
64429 y Fy(There)374 b(is)e(a)h(huge)h(literature)f(on)g(f)-11
b(acility)373 b(location)h(theory)-72 b(.)374 b(Initial)26664
65757 y(results)404 b(are)h(surv)-17 b(e)g(yed)407 b(in)e(the)h(book)g
(by)g(Mirchandani)h(and)f(Francis)26664 67085 y([2].)460
b(A)h(lar)-20 b(ge)461 b(number)i(of)e(subsequent)i(w)-11
b(orks)461 b(focused)h(on)g(de)-28 b(v)-17 b(el-)26664
68414 y(oping)495 b(centralized)h(approximation)h(algorithms)d([14],)f
([15)q(],)g([16)q(],)26664 69742 y([17].)h(Cameron)i(et)e(al.)g(The)h
(authors)g(of)f([24)q(])g(ha)-22 b(v)-17 b(e)496 b(proposed)g(an)26664
71070 y(alternati)-28 b(v)-17 b(e)397 b(approach)i(for)c(approximating)
k(f)-11 b(acility)395 b(location)i(prob-)26664 72399
y(lems)446 b(based)i(on)g(a)e(continuous)j(\223high-density\224)h
(model.)d(Recently)-72 b(,)p eop end
%%Page: 9 9
TeXDict begin 9 8 bop -2003 -1956 26782 45 v -2025 -959
45 997 v 3961 -959 V 4183 -959 V 4183 -959 V 4869 -1258
a Fz(cost)311 b(ratio)f(dUFL\(1\)/UFL)p 14248 -959 V
14469 -959 V 14469 -959 V 1551 w(cost)g(ratio)g(dUFL\(2\)/UFL)p
24535 -959 V 24756 -959 V -2003 -915 26782 45 v -2025
81 45 997 v 3961 81 V 4183 81 V 4869 -218 a(mean)p 7429
81 V 2770 w(median)p 14248 81 V 14469 81 V 2992 w(mean)p
17716 81 V 2770 w(median)p 24535 81 V 24756 81 V -2003
125 26782 45 v -2025 1122 45 997 v -1339 823 a(de)-13
b(gree-based)p 3961 1122 V 4183 1122 V 1734 w(1.22)p
7429 1122 V 3483 w(1.20)p 14248 1122 V 14469 1122 V 3704
w(1.04)p 17716 1122 V 3483 w(1.03)p 24535 1122 V 24756
1122 V -2003 1166 26782 45 v -2025 2162 45 997 v -436
1863 a(uniform)p 3961 2162 V 4183 2162 V 2635 w(1.01)p
7429 2162 V 3483 w(1.01)p 14248 2162 V 14469 2162 V 3704
w(1.01)p 17716 2162 V 3483 w(1.01)p 24535 2162 V 24756
2162 V -2003 2206 26782 45 v 9700 4126 a(T)-82 b(ABLE)310
b(I)-747 5455 y Fs(C)38 b Fa(O)g(S)g(T)232 b(R)38 b(A)-31
b(T)38 b(I)g(O)233 b(B)38 b(E)g(T)g(W)g(E)g(E)g(N)232
b(D)38 b Fs(U)g(F)g(L)g(\()19 b Fo(r)43 b Fs(\))236 b
Fa(A)38 b(N)g(D)232 b Fs(U)38 b(F)g(L)234 b Fa(I)38 b(N)233
b(T)38 b(H)g(E)231 b Fs(A)38 b(S)g(-)g Fa(L)g(E)g(V)g(E)g(L)234
b(T)27 b(O)38 b(P)g(O)g(L)g(O)g(G)g(Y)-52 b Fs(.)-2560
9036 y Fy(generalizations)606 b(of)e(the)g(classical)g(centralized)h(f)
-11 b(acility)604 b(location)-2560 10364 y(problem)564
b(ha)-22 b(v)-17 b(e)565 b(appeared)g(in)e([25],)f([26)q(].)g(The)h
(\002rst)f(mention)i(of)-2560 11693 y(distrib)-22 b(uted)606
b(f)-11 b(acility)606 b(location)i(seems)e(to)g(ha)-22
b(v)-17 b(e)608 b(been)g(from)e(Jain)-2560 13021 y(and)640
b(V)-123 b(azirani)640 b([17])e(while)h(commenting)i(on)f(their)e
(primal-dual)-2560 14349 y(approximation)616 b(method,)f(b)-22
b(ut)613 b(the)-17 b(y)615 b(do)f(not)g(pursue)g(the)g(matter)-2560
15678 y(further)-61 b(.)339 b(T)-89 b(o)341 b(the)f(best)g(of)g(our)g
(kno)-28 b(wledge,)343 b(the)d(only)h(w)-11 b(ork)340
b(in)g(which)-2560 17006 y(distrib)-22 b(uted)548 b(f)-11
b(acility)547 b(location)i(has)f(been)h(the)f(focal)g(point)g(seems)
-2560 18335 y(to)477 b(be)i(the)f(recent)g(w)-11 b(ork)478
b(of)f(Moscibroda)j(and)e(W)-89 b(attenhofer)479 b([27)q(].)-2560
19663 y(This)341 b(w)-11 b(ork,)342 b(ho)-28 b(we)g(v)-17
b(er)-44 b(,)344 b(is)c(mostly)h(focused)i(on)f(deri)-28
b(ving)343 b(w)-11 b(orst-case)-2560 20991 y(performance)277
b(bounds)f(for)f(distrib)-22 b(uted)275 b(f)-11 b(acility)274
b(location.)i(It)e(is)g(based)-2560 22320 y(on)364 b(primal-dual)f
(techniques)i(that)f(are)f(amenable)i(to)e(such)h(analysis,)-2560
23648 y(b)-22 b(ut)704 b(which)g(are)g(too)g(complicated)i(for)d
(practical)i(implementa-)-2560 24976 y(tion)518 b(purposes,)h(as)f
(compared)i(to)e(our)h(w)-11 b(ork.)518 b(Furthermore,)h([27)q(])-2560
26305 y(does)442 b(not)g(include)g(an)-17 b(y)443 b(e)-17
b(xperimental)444 b(results)c(or)h(implementation)-2560
27633 y(guidelines)398 b(of)f(practical)h(purposes.)g(Oik)-11
b(onomou)399 b(and)f(Sta)-22 b(vrakakis)-2560 28961 y([28)q(])520
b(ha)-22 b(v)-17 b(e)522 b(proposed)h(a)e(fully)f(distrib)-22
b(uted)521 b(approach)i(for)d(service)-2560 30290 y(migration)538
b(\227)e(their)h(results,)e(ho)-28 b(we)g(v)-17 b(er)-44
b(,)540 b(are)d(limited)g(to)g(a)g(single)-2560 31618
y(f)-11 b(acility)391 b(\(representing)i(a)e(unique)j(service)e
(point\))f(and)i(assume)f(tree)-2560 32946 y(topologies.)289
b(F)-17 b(or)288 b(e)-17 b(xamples)290 b(of)d(application)j(oriented)f
(approaches)h(to)-2560 34275 y(distrib)-22 b(uted)330
b(service)g(deplo)-11 b(yment)332 b(the)e(reader)h(is)e(advised)i(to)f
(look)g(at)-2560 35603 y(Y)-111 b(amamoto)263 b(and)f(Leduc)h([29)q(])d
(\(deplo)-11 b(yment)263 b(of)e(multicast)g(re\003ectors\))-2560
36931 y(and)435 b(Rabino)-17 b(vich)438 b(and)e(Agg)-6
b(arw)-11 b(al)436 b([30)q(])d(\(deplo)-11 b(yment)437
b(of)d(mirrored)-2560 38260 y(web-content\).)469 b(Both)f(of)f(these)h
(w)-11 b(orks)467 b(are)h(strongly)g(tied)f(to)g(their)-2560
39588 y(speci\002c)304 b(applications)g(and)f(do)g(not)g(ha)-22
b(v)-17 b(e)304 b(the)f(underlying)i(generality)-2560
40916 y(of)-28 b(fered)306 b(by)g(the)g(distrib)-22 b(uted)305
b(f)-11 b(acility)305 b(location)i(approach)h(adopted)f(in)-2560
42245 y(our)388 b(w)-11 b(ork.)6435 44731 y(V)56 b(I)g(I)g(I)g(.)606
b(C)56 b Fz(O)g(N)g(C)e(L)i(U)g(S)g(I)g(O)g(N)g(S)-1453
46698 y Fy(W)-89 b(e)282 b(ha)-22 b(v)-17 b(e)283 b(described)g(a)f
(distrib)-22 b(uted)282 b(approach)i(for)d(the)h(problem)g(of)-2560
48027 y(placing)g(service)f(f)-11 b(acilities)280 b(in)g(lar)-20
b(ge-scale)282 b(netw)-11 b(orks.)281 b(W)-89 b(e)281
b(o)-17 b(v)g(ercome)-2560 49355 y(the)592 b(scalability)g(limitations)
e(of)i(classic)f(centralized)i(approaches)-2560 50683
y(by)545 b(re-optimizing)h(the)f(locations)h(and)g(the)f(number)i(of)d
(f)-11 b(acilities)-2560 52012 y(through)423 b(local)e(optimizations)i
(which)f(are)g(re\002ned)h(in)e(se)-28 b(v)-17 b(eral)422
b(iter)-22 b(-)-2560 53340 y(ations.)496 b(Re-optimizations)i(are)e
(based)h(on)g(e)-17 b(xact)498 b(topological)g(and)-2560
54668 y(demand)597 b(information)e(from)f(nodes)i(in)e(the)h(immediate)
h(vicinity)-2560 55997 y(of)497 b(a)g(f)-11 b(acility)-72
b(,)496 b(assisted)h(by)h(concise)g(approximate)h(representation)-2560
57325 y(of)428 b(demand)i(information)f(from)f(neighboring)j(nodes)e
(in)f(the)h(wider)-2560 58653 y(domain)513 b(of)f(the)g(f)-11
b(acility)-72 b(.)511 b(Using)g(e)-17 b(xtensi)-28 b(v)-17
b(e)515 b(synthetic)d(and)h(trace-)-2560 59982 y(dri)-28
b(v)-17 b(en)579 b(simulations)f(we)g(demonstrate)h(that)f(our)g
(distrib)-22 b(uted)578 b(ap-)-2560 61310 y(proach)348
b(is)d(able)j(to)e(scale)h(by)g(utilization)f(limited)g(local)h
(information)-2560 62638 y(without)314 b(making)i(serious)d
(performance)k(sacri\002ces)d(as)g(compared)i(to)-2560
63967 y(centralized)390 b(optimal)e(solutions.)8289 66453
y(R)56 b Fz(E)g(F)g(E)g(R)e(E)i(N)g(C)e(E)i(S)-2117 68387
y([1])553 b(C.)337 b(Gkantsidis,)i(T)-66 b(.)339 b(Karagiannis,)g(P)-98
b(.)338 b(Rodriguez,)f(and)g(M.)h(V)-114 b(ojno)-13 b(vic,)337
b(\223Planet)-531 69383 y(scale)372 b(softw)-9 b(are)371
b(updates,)-62 b(\224)372 b(in)e Fn(Pr)-40 b(oc.)372
b(of)e(A)-27 b(CM)371 b(SIGCOMM)f('06)p Fz(,)g(Pisa,)i(Italy)-58
b(,)-531 70379 y(2006.)-2117 71403 y([2])553 b(P)-98
b(.)284 b(Mirchandani)f(and)g(R.)h(Francis,)g(\223Discrete)i(location)d
(theory)-58 b(.)c(\224)798 b(John)283 b(W)-35 b(ile)-13
b(y)-531 72399 y(and)309 b(Sons,)i(1990.)27106 -672 y([3])554
b(P)-98 b(.)338 b(Erd)30999 -676 y(\250)30925 -672 y(os)g(and)f(A.)i(R)
35505 -676 y(\264)35456 -672 y(en)-13 b(yi,)338 b(\223On)g(random)f
(graphs)h(I,)-62 b(\224)338 b Fn(Publ.)h(Math.)e(Debr)-33
b(ecen)p Fz(,)28693 325 y(v)-18 b(ol.)310 b(6,)g(pp.)g(290\226297,)f
(1959.)27106 1474 y([4])554 b(A.-L.)390 b(Bar)32328 1470
y(\264)32279 1474 y(abasi)h(and)e(R.)h(Albert,)g(\223Emer)-16
b(gence)391 b(of)e(scaling)h(in)g(random)f(net-)28693
2470 y(w)-9 b(orks,)-62 b(\224)311 b Fn(Science)p Fz(,)f(v)-18
b(ol.)311 b(286,)e(no.)h(5439,)g(pp.)g(509\226512,)f(1999.)27106
3620 y([5])554 b(L.)211 b(Subramanian,)h(S.)g(Ag)l(arw)-9
b(al,)212 b(J.)g(Re)-13 b(xford,)210 b(and)h(R.)g(H.)h(Katz,)h
(\223Characterizing)28693 4616 y(the)341 b(internet)h(hierarch)l(y)g
(from)f(multiple)h(v)-22 b(antage)341 b(points,)-62 b(\224)343
b(in)f Fn(Pr)-40 b(oc.)342 b(of)g(IEEE)28693 5612 y(Infocom)309
b('02)p Fz(,)h(Ne)-22 b(w)311 b(Y)-97 b(ork)309 b(City)-58
b(,)311 b(NY)-114 b(,)311 b(USA,)g(2002.)27106 6762 y([6])554
b(http://update.microsoft.com.)27106 7911 y([7])g(D.)465
b(K)-31 b(osti)31954 7907 y(\264)31905 7911 y(c,)466
b(A.)g(Rodriguez,)e(J.)i(Albrecht,)f(and)g(A.)g(V)-98
b(ahdat,)465 b(\223Bullet:)h(high)28693 8908 y(bandwidth)410
b(data)h(dissemination)h(using)e(an)h(o)-13 b(v)g(erlay)410
b(mesh,)-62 b(\224)412 b(in)e Fn(SOSP)h('03:)28693 9904
y(Pr)-40 b(oceedings)378 b(of)g(the)g(nineteenth)g(A)-27
b(CM)378 b(symposium)h(on)f(Oper)-13 b(ating)378 b(systems)28693
10900 y(principles)p Fz(,)311 b(2003,)f(pp.)f(282\226297.)27106
12050 y([8])554 b(http://www)-58 b(.planet-lab)-35 b(.or)-16
b(g.)27106 13199 y([9])554 b(http://www)-58 b
(.geni.net/GDD/GDD-06-08.pdf.)26664 14348 y([10])553
b(http://www)-58 b(.caida.or)-16 b(g/tools/measurement/skitter/.)26664
15498 y([11])553 b(J.)332 b(P)-13 b(an,)333 b(Y)-114
b(.)332 b(T)-66 b(.)333 b(Hou,)g(and)f(B.)g(Li,)g(\223)-71
b(An)333 b(o)-13 b(v)g(ervie)-22 b(w)331 b(dns-based)i(serv)-13
b(er)332 b(selection)28693 16494 y(in)376 b(content)h(distrib)-18
b(ution)377 b(netw)-9 b(orks,)-62 b(\224)378 b Fn(Computer)f(Networks)p
Fz(,)h(v)-18 b(ol.)377 b(43,)g(no.)g(6,)28693 17490 y(2003.)26664
18640 y([12])553 b(V)-114 b(.)440 b(Lenders,)h(M.)g(May)-58
b(,)442 b(and)e(B.)g(Plattner)-35 b(,)441 b(\223Density-based)h(vs.)f
(proximity-)28693 19636 y(based)326 b(an)-13 b(ycast)328
b(routing)d(for)i(mobile)f(netw)-9 b(orks,)-62 b(\224)328
b(in)e Fn(Pr)-40 b(oc.)328 b(of)e(IEEE)h(Infocom)28693
20632 y('06)p Fz(,)309 b(Barcelona,)i(Spain,)f(2006.)26664
21782 y([13])553 b(O.)298 b(Kari)-22 b(v)297 b(and)g(S.)h(Hakimi,)g
(\223)-71 b(An)298 b(algorithmic)f(approach)g(to)g(netw)-9
b(ork)298 b(location)28693 22778 y(problems,)338 b(part)h(II:)g
(p-medians,)-62 b(\224)339 b Fn(SIAM)f(J)-22 b(ournal)338
b(on)g(Applied)h(Mathematics)p Fz(,)28693 23774 y(v)-18
b(ol.)310 b(37,)g(pp.)g(539\226560,)f(1979.)26664 24924
y([14])553 b(M.)280 b(Charikar)-35 b(,)280 b(S.)g(Guha,)h(D.)g(B.)f
(Shmo)-9 b(ys,)281 b(and)e(E.)i(T)-71 b(ardos,)281 b(\223)-71
b(A)280 b(constant)h(f)-9 b(actor)28693 25920 y(approximation)351
b(algorithm)h(for)g(the)g(k-median)g(problem,)-62 b(\224)353
b(in)f Fn(Pr)-40 b(oc.)353 b(of)f(A)-27 b(CM)28693 26916
y(ST)-16 b(OC)310 b('99)p Fz(,)g(Atlanta,)h(GA,)g(USA,)h(1999,)d(pp.)h
(1\22610.)26664 28066 y([15])553 b(M.)287 b(R.)f(K)-31
b(orupolu,)286 b(C.)h(G.)g(Plaxton,)g(and)g(R.)f(Rajaraman,)h(\223)-71
b(Analysis)289 b(of)d(a)h(local)28693 29062 y(search)321
b(heuristic)g(for)f(f)-9 b(acility)322 b(location)f(problems,)-62
b(\224)321 b(in)g Fn(Pr)-40 b(oc.)321 b(of)g(A)-27 b(CM-SIAM)28693
30058 y(SOD)c(A)310 b('98)p Fz(,)g(San)g(Francisco,)i(CA,)e(USA,)h
(1998,)f(pp.)g(1\22610.)26664 31208 y([16])553 b(V)-114
b(.)353 b(Arya,)h(N.)g(Gar)-16 b(g,)353 b(R.)g(Khandekar)-35
b(,)353 b(K.)h(Munag)l(ala,)f(and)g(V)-114 b(.)354 b(P)-13
b(andit,)353 b(\223Local)28693 32204 y(search)345 b(heuristic)h(for)f
(k-median)f(and)h(f)-9 b(acility)346 b(location)f(problems,)-62
b(\224)346 b(in)f Fn(Pr)-40 b(oc.)28693 33200 y(of)309
b(A)-27 b(CM)310 b(ST)-16 b(OC)310 b('01)p Fz(,)g(Hersonissos,)j
(Greece,)e(2001,)e(pp.)h(21\22629.)26664 34350 y([17])553
b(K.)342 b(Jain)g(and)f(V)-114 b(.)342 b(V)-114 b(.)343
b(V)-98 b(azirani,)342 b(\223Primal-dual)h(approximation)e(algorithms)h
(for)28693 35346 y(metric)259 b(f)-9 b(acility)259 b(location)g(and)g
(k-median)f(problems,)-62 b(\224)260 b(in)e Fn(Pr)-40
b(oc)260 b(of)e(IEEE)h(FOCS)28693 36342 y('99)p Fz(,)309
b(Ne)-22 b(w)311 b(Y)-97 b(ork)309 b(City)-58 b(,)311
b(NY)-114 b(,)311 b(USA,)g(1999.)26664 37492 y([18])553
b(M.)267 b(Naor)h(and)f(U.)h(W)-35 b(ieder)g(,)267 b(\223Kno)-22
b(w)268 b(th)l(y)e(neighbor')-49 b(s)267 b(neighbor:)g(Better)h
(routing)28693 38488 y(for)350 b(skip-graphs)i(and)f(small)h(w)-9
b(orlds.)-62 b(\224)353 b(in)e Fn(Pr)-40 b(oc.)353 b(of)e(IPTPS)p
Fz(,)h(2004,)f(pp.)g(269\226)28693 39484 y(277.)26664
40634 y([19])553 b(A.)225 b(Medina,)h(A.)f(Lakhina,)h(I.)f(Matta,)h
(and)f(J.)h(Byers,)f(\223BRITE:)f(An)h(Approach)g(to)28693
41630 y(Uni)-22 b(v)-13 b(ersal)269 b(T)-71 b(opology)269
b(Generation,)-62 b(\224)270 b(in)f Fn(Pr)-40 b(oc.)270
b(of)f(MASCO)-35 b(TS)269 b('01)p Fz(,)g(Cincinnati,)28693
42626 y(OH,)311 b(Aug)f(2001,)f(pp.)h(346\226354.)26664
43776 y([20])553 b(B.)300 b(M.)h(W)-71 b(axman,)301 b(\223Routing)e(of)
h(multipoint)h(connections,)-62 b(\224)301 b Fn(IEEE)f(J)-22
b(ournal)301 b(on)28693 44772 y(Selected)290 b(Ar)-33
b(eas)290 b(in)f(Communications)p Fz(,)h(v)-18 b(ol.)290
b(6,)g(no.)f(9,)g(pp.)h(1617\2261622,)e(1988.)26664 45922
y([21])553 b(S.)434 b(Jin)g(and)g(A.)g(Besta)-18 b(vros,)435
b(\223Small-W)-71 b(orld)435 b(Internet)f(T)-71 b(opologies:)434
b(Possible)28693 46918 y(Causes)366 b(and)g(Implications)h(on)f
(Scalability)h(of)f(End-System)h(Multicast,)-62 b(\224)368
b(CS)28693 47914 y(Department,)399 b(Boston)g(Uni)-22
b(v)-13 b(ersity)-58 b(,)400 b(T)-62 b(ech.)400 b(Rep.)e(B)-9
b(UCS-TR-2002-004,)398 b(Jan-)28693 48910 y(uary)309
b(30)h(2002.)26664 50060 y([22])553 b(\227\227,)375 b(\223Small-w)-9
b(orld)377 b(characteristics)i(of)d(internet)g(topologies)h(and)f
(implica-)28693 51056 y(tions)250 b(on)f(multicast)j(scaling,)-62
b(\224)251 b Fn(Computer)f(Networks)p Fz(,)h(v)-18 b(ol.)250
b(50,)g(no.)g(5,)g(pp.)g(648\226)28693 52052 y(666,)309
b(2006.)26664 53202 y([23])553 b(http://www)-58 b(.cc.g)l(atech.edu/)p
FE(\273)p Fz(mihail/ASdata.html.)26664 54351 y([24])553
b(C.)365 b(W)-81 b(.)365 b(Cameron,)g(S.)g(H.)h(Lo)-22
b(w)-58 b(,)366 b(and)f(D.)h(X.)g(W)-71 b(ei,)366 b(\223High-density)g
(model)f(for)28693 55348 y(serv)-13 b(er)356 b(allocation)i(and)e
(placement,)-62 b(\224)358 b(in)e Fn(Pr)-40 b(oc.)358
b(of)f(A)-27 b(CM)356 b(SIGMETRICS)g('02)p Fz(,)28693
56344 y(Ne)-22 b(w)310 b(Y)-97 b(ork,)310 b(NY)-114 b(,)311
b(USA,)g(2002,)f(pp.)g(152\226159.)26664 57493 y([25])553
b(M.)325 b(Mahdian)f(and)h(M.)g(P)-13 b(al,)325 b(\223Uni)-22
b(v)-13 b(ersal)326 b(f)-9 b(acility)325 b(location,)-62
b(\224)326 b(in)e Fn(Pr)-40 b(oc.)326 b(of)e(ESA)28693
58490 y('03)p Fz(,)309 b(Budapest,)i(Hung)l(ary)-58 b(,)310
b(2003,)f(pp.)h(409\226421.)26664 59639 y([26])553 b(N.)405
b(Gar)-16 b(g,)405 b(R.)g(Khandekar)-35 b(,)405 b(and)f(V)-114
b(.)406 b(P)-13 b(andit,)405 b(\223Impro)-13 b(v)g(ed)403
b(approximation)i(for)28693 60635 y(uni)-22 b(v)-13 b(ersal)280
b(f)-9 b(acility)281 b(location,)-62 b(\224)281 b(in)g
Fn(Pr)-40 b(oc)281 b(of)f(A)-27 b(CM-SIAM)279 b(SOD)-31
b(A)281 b('05)p Fz(,)f(2005,)g(pp.)28693 61632 y(959\226960.)26664
62781 y([27])553 b(T)-66 b(.)403 b(Moscibroda)g(and)f(R.)h(W)-71
b(attenhofer)-35 b(,)402 b(\223F)-13 b(acility)404 b(location:)f
(distrib)-18 b(uted)403 b(ap-)28693 63777 y(proximation,)-62
b(\224)300 b(in)g Fn(Pr)-40 b(oc)301 b(of)f(A)-27 b(CM)300
b(PODC)g('05)p Fz(,)g(Las)h(V)-98 b(e)-13 b(g)l(as,)301
b(NV)-114 b(,)301 b(USA,)h(2005,)28693 64774 y(pp.)309
b(108\226117.)26664 65923 y([28])553 b(K.)229 b(Oik)-9
b(onomou)228 b(and)h(I.)g(Sta)-18 b(vrakakis,)231 b(\223Service)f
(migration:)f(The)g(tree)g(topology)28693 66919 y(case,)-62
b(\224)311 b(in)f Fn(Pr)-40 b(oc)311 b(of)f(Med-Hoc-Net)f('06)p
Fz(,)h(Lipari,)h(Italy)-58 b(,)311 b(2006.)26664 68069
y([29])553 b(L.)387 b(Y)-89 b(amamoto)389 b(and)e(G.)h(Leduc,)g(\223)
-71 b(Autonomous)387 b(re\003ectors)i(o)-13 b(v)g(er)386
b(acti)-22 b(v)-13 b(e)388 b(net-)28693 69065 y(w)-9
b(orks:)401 b(to)-22 b(w)-9 b(ards)401 b(seamless)h(group)e
(communication,)-62 b(\224)401 b Fn(AISB)p Fz(,)f(v)-18
b(ol.)401 b(1,)g(no.)f(1,)28693 70061 y(pp.)309 b(125\226146,)g(2001.)
26664 71211 y([30])553 b(M.)333 b(Rabino)-13 b(vich)332
b(and)h(A.)h(Agg)l(arw)-9 b(al,)334 b(\223RaDaR:)g(A)f(scalable)i
(architecture)f(for)28693 72207 y(a)310 b(global)g(web)g(hosting)g
(service,)-62 b(\224)311 b(in)f Fn(Pr)-40 b(oc.)311 b(of)f(WWW)f('99)p
Fz(,)h(1999.)p eop end
%%Page: 10 10
TeXDict begin 10 9 bop 8577 -672 a Fy(A)56 b Fz(P)g(P)g(E)g(N)g(D)g(I)g
(X)325 b Fy(I)633 657 y(D)56 b Fz(E)g(R)e(I)i(V)-64 b(A)-43
b(T)56 b(I)g(O)g(N)324 b(O)56 b(F)331 b(A)56 b(N)331
b Fy(U)56 b Fz(P)g(P)g(E)g(R)327 b Fy(B)56 b Fz(O)g(U)g(N)g(D)328
b(F)56 b(O)g(R)301 b Ft(\242)20410 823 y Fo(i)20779 657
y Ft(\()p Fu(r)31 b Ft(\))-1453 2456 y Fy(F)-17 b(or)559
b(the)h(rest)e(a)h(tw)-11 b(o-dimensional)560 b(space)h(is)d
(considered)i(o)-17 b(v)g(er)-2560 3784 y(which)269 b(nodes)g(are)g
(scattered)g(in)f(a)g(uniform)g(and)i(continuous)g(manner)-61
b(.)-2560 5113 y(The)296 b Fu(r)31 b Fy(-ball)294 b(is)g(considered)j
(as)e(a)g(circle)g(with)f(radius)h Fu(r)326 b Fy(and)296
b(the)f(entire)-2560 6441 y(domain)389 b(as)f(a)g(circle)g(with)f
(radius)h Fu(R)396 b Fy(\(see)387 b(Fig.)h(4\).)-1453
7790 y(Suppose)374 b(that)f(a)f(node)i Fu(u)307 b Fq(2)h
Fu(U)10833 7956 y Fo(i)11573 7790 y Fy(is)372 b(serv)-17
b(ed)373 b(by)g(its)e(closest)h(f)-11 b(acility)-2560
9118 y(node)383 b Fu(v)510 9284 y Fo(i)878 9118 y Fy(.)f(This)f(case)i
(is)e(depicted)i(in)f(Fig.)g(4)g(where)h Fu(u)e Fy(is)g(located)i(at)
-2560 10446 y(point)460 b Fu(A)f Fy(and)h(the)g(corresponding)i(f)-11
b(acility)458 b(node)j Fu(v)18856 10612 y Fo(i)19683
10446 y Fy(is)d(located)j(at)-2560 11775 y(point)298
b Fu(C)79 b Fy(.)298 b(Note)g(that)f(line)h Fu(AC)377
b Fy(intersects)297 b(with)h(the)g(periphery)h(\(skin\))-2560
13103 y(of)395 b(the)h Fu(r)31 b Fy(-ball)395 b(at)g(a)h(particular)g
(point)g(denoted)h(by)f Fu(B)56 b Fy(.)394 b(Clearly)-72
b(,)396 b(line)-2560 14432 y Fu(AC)384 b Fy(corresponds)306
b(to)e(the)h(shortest)f(distance)h(between)i(points)e
Fu(A)f Fy(and)-2560 15760 y Fu(C)429 b Fy(\(that)350
b(correspond)j(to)d(nodes)h Fu(u)f Fy(and)i Fu(v)13921
15926 y Fo(i)14289 15760 y Fy(,)d(respecti)-28 b(v)-17
b(ely\).)352 b(Denoting)-2560 17088 y(as)338 b Fu(x)g
Fy(the)h(length)g(of)f Fu(AB)56 b Fy(,)337 b Fq(j)p Fu(AB)56
b Fq(j)339 b Fy(\(the)f(distance)i(of)e(node)i Fu(u)e
Fy(from)g(the)-2560 18417 y(skin)362 b(of)g(the)h Fu(r)31
b Fy(-ball\))362 b(we)h(can)g(write)f Fq(j)p Fu(AC)79
b Fq(j)309 b Ft(=)e Fu(x)199 b Ft(+)g Fu(r)31 b Fy(.)362
b(Line)h Fu(AC)441 b Fy(may)-2560 19745 y(be)361 b(re)-17
b(g)-6 b(arded)362 b(as)e(the)g(path)h(o)-17 b(v)g(er)362
b(which)f(node)g Fu(u)e Fy(uses)h(the)h(resources)-2560
21073 y(of)387 b(the)i(f)-11 b(acility)387 b(located)i(at)f(node)h
Fu(v)11849 21239 y Fo(i)12217 21073 y Fy(.)-1453 22422
y(Suppose)485 b(that)d(a)h(node)h Fu(u)9165 22588 y Fo(j)10114
22422 y Fq(2)f Fu(V)11981 22588 y Fo(i)12831 22422 y
Fy(is)e(considered)k(as)d(a)h(possible)-2560 23750 y(alternati)-28
b(v)-17 b(e)444 b(f)-11 b(acility)441 b(location.)j(Let)e
Fu(D)473 b Fy(be)443 b(the)f(point)h(denoting)h(the)-2560
25079 y(location)405 b(of)f Fu(v)3273 25245 y Fo(j)4142
25079 y Fy(and)h(let)f Fu(y)443 b Fy(denote)406 b(the)e(distance)h
(between)h(node)f Fu(v)24967 25245 y Fo(i)-2560 26407
y Fy(and)535 b(node)g Fu(v)2794 26573 y Fo(j)3794 26407
y Fy(\(i.e.,)d(the)i(length)h(of)e Fu(C)79 b(D)31 b Fy(,)534
b Fq(j)p Fu(C)79 b(D)31 b Fq(j)p Fy(\).)534 b(The)h(mapping)-2560
27735 y(error)-44 b(,)426 b Ft(\242)1172 27901 y Fo(i)1541
27735 y Ft(\()p Fu(r)-31 b(;)184 b(j)r(;)g(u)p Ft(\))382
b(=)e Fq(j)p Fu(AC)79 b Fq(j)276 b Ft(+)f Fq(j)p Fu(C)79
b(D)31 b Fq(j)277 b(\241)d(j)p Fu(AD)31 b Fq(j)p Fy(,)428
b(is)e(al)-11 b(w)g(ays)427 b(positi)-28 b(v)-17 b(e)-2560
29064 y(since)353 b Fq(j)p Fu(AC)79 b Fq(j)180 b Ft(+)g
Fq(j)p Fu(C)79 b(D)31 b Fq(j)311 b Fu(>)c Fq(j)p Fu(AD)31
b Fq(j)354 b Fy(\()p Fu(AC)79 b Fy(,)352 b Fu(C)79 b(D)383
b Fy(and)354 b Fu(AD)383 b Fy(correspond)354 b(to)-2560
30392 y(edges)395 b(of)f(the)h(same)g(triangle\))f(when)i(the)e(angle)i
(between)g Fu(AC)474 b Fy(and)-2560 31721 y Fu(C)79 b(D)31
b Fy(,)6 31428 y Ft(^)-139 31721 y Fu(\301)307 b Fq(6)p
Ft(=)g(0)327 b Fy(and)4946 31428 y Ft(^)4801 31721 y
Fu(\301)307 b Fq(6)p Ft(=)g Fu(\274)40 b Fy(.)326 b(The)i(mapping)h
(error)d(becomes)j(zero)e(only)-2560 33049 y(in)388 b(the)g(e)-17
b(xceptional)391 b(cases)8771 32757 y Ft(^)8626 33049
y Fu(\301)307 b Ft(=)g(0)388 b Fy(and)13833 32757 y Ft(^)13688
33049 y Fu(\301)307 b Ft(=)g Fu(\274)40 b Fy(.)-1453
34398 y(Let)552 b Ft(\242)1496 34564 y Fo(i)1865 34398
y Ft(\()p Fu(r)-31 b(;)184 b(j)63 b Ft(\))554 b Fy(be)e(the)g
(summation)h(of)e Ft(\242)16124 34564 y Fo(i)16493 34398
y Ft(\()p Fu(r)-31 b(;)184 b(j)r(;)g(u)p Ft(\))p Fy(,)554
b Fq(8)p Fu(u)610 b Fq(2)h Fu(U)24690 34564 y Fo(i)25059
34398 y Fy(.)-2560 35726 y(Since)382 b(we)f(ha)-22 b(v)-17
b(e)383 b(assumed)f(the)f(netw)-11 b(ork)382 b(area)g(as)f(a)g(tw)-11
b(o-dimension)-2560 37054 y(continuous)307 b(space,)f(all)f(nodes)h
Fu(u)h Fq(2)h Fu(U)12685 37220 y Fo(i)13358 37054 y Fy(correspond)f(to)
e(the)g(ring)g(area)-2560 38383 y Fu(U)-1804 38549 y
Fo(i)-1436 38383 y Fy(,)376 b(depicted)j(in)d(Fig.)g(4.)h(Consequently)
-72 b(,)379 b Ft(\242)15508 38549 y Fo(i)15877 38383
y Ft(\()p Fu(r)-31 b(;)184 b(j)63 b Ft(\))379 b Fy(is)c(gi)-28
b(v)-17 b(en)379 b(by)e(the)-2560 39711 y(follo)-28 b(wing)389
b(inte)-17 b(gral,)4823 42295 y Ft(\242)5745 42461 y
Fo(i)6114 42295 y Ft(\()p Fu(r)-31 b(;)184 b(j)63 b Ft(\))310
b(=)9931 40788 y Fm(Z)10546 43304 y Fo(U)11149 43415
y Fk(i)11739 42295 y Ft(\242)12661 42461 y Fo(i)13030
42295 y Ft(\()p Fu(r)-31 b(;)184 b(j)r(;)g(u)p Ft(\))p
Fu(du:)5542 b Fy(\(11\))-1453 45103 y(Let)323 b Ft(\242)1267
45269 y Fo(i)1636 45103 y Ft(\()p Fu(r)31 b Ft(\))324
b Fy(denote)h(the)f(total)f(mapping)i(error)-44 b(,)322
b(or)h(the)h(summation)-2560 46431 y(of)387 b Ft(\242)-329
46597 y Fo(i)40 46431 y Ft(\()p Fu(r)-31 b(;)184 b(j)63
b Ft(\))391 b Fy(for)c(all)g(nodes)i Fu(j)371 b Fq(2)307
b Fu(V)11429 46597 y Fo(i)11798 46431 y Fy(.)387 b(Therefore,)6019
49052 y Ft(\242)6941 49218 y Fo(i)7310 49052 y Ft(\()p
Fu(r)31 b Ft(\))309 b(=)10177 47546 y Fm(Z)10792 50061
y Fo(V)11315 50172 y Fk(i)11906 49052 y Ft(\242)12828
49218 y Fo(i)13197 49052 y Ft(\()p Fu(r)-31 b(;)184 b(j)63
b Ft(\))p Fu(d)-123 b(j)r(:)6738 b Fy(\(12\))-1453 51785
y(In)262 b(Appendix)k(II)261 b(we)i(deri)-28 b(v)-17
b(e)265 b(the)e(follo)-28 b(wing)263 b(analytical)i(e)-17
b(xpression)-2560 53113 y(for)387 b Ft(\242)40 53279
y Fo(i)409 53113 y Ft(\()p Fu(r)-31 b(;)184 b(j)r(;)g(u)p
Ft(\))391 b Fy(as)c(a)h(function)h(of)e(parameters)i
Fu(x)p Fy(,)e Fu(y)40 b Fy(,)386 b Fu(r)419 b Fy(and)22612
52821 y Ft(^)22467 53113 y Fu(\301)p Fy(:)-577 55741
y Ft(\242)345 55907 y Fo(i)714 55741 y Ft(\()p Fu(r)-31
b(;)184 b(j)r(;)g(u)p Ft(\))311 b(=)1107 b Fu(x)246 b
Ft(+)8380 54316 y Fm(q)p 9487 54316 8989 45 v 1425 x
Fu(r)10017 55421 y Fp(2)10760 55741 y Ft(+)g Fu(y)12450
55421 y Fp(2)13192 55741 y Fq(\241)g Ft(2)p Fu(y)40 b(r)216
b Ft(cos)17962 55449 y(^)17816 55741 y Fu(\301)6395 57747
y Fq(\241)7256 56353 y Fm(q)p 8363 56353 14682 45 v 1394
x Ft(\()p Fu(x)246 b Ft(+)g Fu(r)31 b Ft(\))11739 57427
y Fp(2)12482 57747 y Ft(+)246 b Fu(y)14172 57427 y Fp(2)14914
57747 y Fq(\241)g Ft(2)p Fu(y)40 b Ft(\()p Fu(x)246 b
Ft(+)g Fu(r)31 b Ft(\))184 b(cos)22530 57455 y(^)22385
57747 y Fu(\301)o(:)23491 59056 y Fy(\(13\))-1453 60405
y Ft(\242)-531 60571 y Fo(i)-162 60405 y Ft(\()p Fu(r)-31
b(;)184 b(j)r(;)g(u)p Ft(\))623 b Fy(as)d(it)g(is)f(gi)-28
b(v)-17 b(en)623 b(by)e(Eq.)f(\(13\))h(is)e(dif)-28 b(\002cult)621
b(to)f(be)-2560 61733 y(analyzed.)273 b(In)d(addition,)h(an)f
(analytical)i(e)-17 b(xpression)272 b(re)-17 b(g)-6 b(arding)272
b Ft(\242)23575 61899 y Fo(i)23944 61733 y Ft(\()p Fu(r)31
b Ft(\))-2560 63061 y Fy(is)667 b(not)i(easy)g(to)f(be)i(deri)-28
b(v)-17 b(ed)670 b(since)f(it)e(is)h(hard)h(to)f(obtain)i(the)-2560
64390 y(corresponding)538 b(inte)-17 b(grals.)537 b(Therefore,)g(in)e
(the)i(sequel)g(we)f(obtain)-2560 65718 y(an)370 b(upper)h(bound)h(for)
c Ft(\242)7462 65884 y Fo(i)7832 65718 y Ft(\()p Fu(r)31
b Ft(\))370 b Fy(by)g(using)g(a)g(simple)f(upper)i(bound)h(for)-2560
67047 y Ft(\242)-1638 67213 y Fo(i)-1269 67047 y Ft(\()p
Fu(r)-31 b(;)184 b(j)r(;)g(u)p Ft(\))390 b Fy(as)e(e)-17
b(xplained)391 b(bello)-28 b(w)-72 b(.)-1453 68405 y(It)340
b(is)h(easy)h(to)f(see)h(that)g Fu(r)8441 68003 y Fp(2)9098
68405 y Ft(+)160 b Fu(y)10702 68003 y Fp(2)11358 68405
y Fq(\241)g Ft(2)p Fu(y)40 b(r)216 b Ft(cos)16042 68112
y(^)15897 68405 y Fu(\301)307 b Fq(\267)g Fu(r)18562
68003 y Fp(2)19219 68405 y Ft(+)160 b Fu(y)20823 68003
y Fp(2)21480 68405 y Ft(+)g(2)p Fu(y)40 b(r)338 b Ft(=)-2560
69733 y(\()p Fu(r)198 b Ft(+)167 b Fu(y)40 b Ft(\))608
69331 y Fp(2)1105 69733 y Fy(,)344 b(since)i Fq(\241)p
Ft(1)307 b Fq(\267)h Ft(cos)9048 69441 y(^)8903 69733
y Fu(\301)f Fq(\267)g Ft(1)p Fy(.)345 b(Also,)f Ft(\()p
Fu(x)167 b Ft(+)g Fu(r)31 b Ft(\))18143 69331 y Fp(2)18807
69733 y Ft(+)167 b Fu(y)20418 69331 y Fp(2)21081 69733
y Fq(\241)g Ft(2)p Fu(y)40 b Ft(\()p Fu(x)167 b Ft(+)-2560
71070 y Fu(r)31 b Ft(\))184 b(cos)397 70778 y(^)252 71070
y Fu(\301)396 b Fq(\270)g Ft(\()p Fu(x)282 b Ft(+)f Fu(r)31
b Ft(\))6012 70669 y Fp(2)6791 71070 y Ft(+)282 b Fu(y)8517
70669 y Fp(2)9294 71070 y Fq(\241)g Ft(2)p Fu(y)40 b
Ft(\()p Fu(x)281 b Ft(+)h Fu(r)31 b Ft(\))397 b(=)f(\()p
Fu(x)282 b Ft(+)f Fu(r)313 b Fq(\241)282 b Fu(y)40 b
Ft(\))22129 70669 y Fp(2)23061 71070 y Fy(\(note)-2560
72399 y(that)388 b Fu(y)347 b Fq(\267)307 b Fu(r)31 b
Fy(\).)27771 -672 y(Based)451 b(on)f(Eq.)g(\(13\),)g(it)f(is)g
(concluded)k(that)d Ft(\242)47293 -506 y Fo(i)47662 -672
y Ft(\()p Fu(r)-31 b(;)184 b(j)r(;)g(u)p Ft(\))426 b
Fq(\267)c Fu(x)292 b Ft(+)26664 -290 y Fm(p)p 27771 -290
3824 45 v 947 x Ft(\()p Fu(r)277 b Ft(+)246 b Fu(y)40
b Ft(\))31097 337 y Fp(2)31653 657 y Fq(\241)32573 -290
y Fm(p)p 33681 -290 5809 45 v 33681 657 a Ft(\()p Fu(x)246
b Ft(+)g Fu(r)277 b Fq(\241)246 b Fu(y)40 b Ft(\))38993
337 y Fp(2)39797 657 y Ft(=)307 b Fu(x)59 b Ft(+)g Fu(r)90
b Ft(+)59 b Fu(y)99 b Fq(\241)59 b Fu(x)g Fq(\241)g Fu(r)90
b Ft(+)59 b Fu(y)40 b Fy(.)290 b(Therefore,)26664 1985
y Ft(\242)27586 2151 y Fo(i)27955 1985 y Ft(\()p Fu(r)-31
b(;)184 b(j)r(;)g(u)p Ft(\))310 b Fq(\267)e Ft(2)p Fu(y)40
b Fy(.)387 b(Gi)-28 b(v)-17 b(en)389 b(that)f Fu(y)347
b Fq(\267)308 b Fu(r)31 b Fy(,)36861 4061 y Ft(\242)37783
4227 y Fo(i)38152 4061 y Ft(\()p Fu(r)-31 b(;)184 b(j)r(;)g(u)p
Ft(\))310 b Fq(\267)e Ft(2)p Fu(r)-31 b(:)8354 b Fy(\(14\))27771
6136 y(In)306 b(order)i(to)f(deri)-28 b(v)-17 b(e)308
b Ft(\242)36760 6302 y Fo(i)37129 6136 y Ft(\()p Fu(r)-31
b(;)184 b(j)63 b Ft(\))p Fy(,)309 b(according)h(to)d(Eq.)g(\(11\),)f
(an)i(analyt-)26664 7465 y(ical)296 b(e)-17 b(xpression)298
b(has)e(to)g(be)h(deri)-28 b(v)-17 b(ed)299 b(for)c(inte)-17
b(gral)46660 6573 y Fm(R)47183 7858 y Fo(U)47786 7969
y Fk(i)48376 7465 y Ft(\242)49298 7631 y Fo(i)49667 7465
y Ft(\()p Fu(r)-31 b(;)184 b(j)r(;)g(u)p Ft(\))p Fu(du)p
Fy(.)26664 8861 y(Gi)-28 b(v)-17 b(en)720 b(that)f Ft(0)921
b Fq(\267)g Ft(\242)36600 9027 y Fo(i)36969 8861 y Ft(\()p
Fu(r)-31 b(;)184 b(j)r(;)g(u)p Ft(\))924 b Fq(\267)c
Ft(2)p Fu(r)31 b Fy(,)45155 7969 y Fm(R)45678 9254 y
Fo(U)46281 9365 y Fk(i)46872 8861 y Ft(\242)47794 9027
y Fo(i)48163 8861 y Ft(\()p Fu(r)-31 b(;)184 b(j)r(;)g(u)p
Ft(\))p Fu(du)923 b Fq(\267)26664 9365 y Fm(R)27186 10650
y Fo(U)27789 10761 y Fk(i)28380 10257 y Ft(2)p Fu(r)31
b(du)p Fy(.)532 b Fu(R)541 b Fy(corresponds)534 b(to)e(the)h(radius)g
(of)g(the)g Fu(U)49357 10423 y Fo(i)50078 10257 y Fq([)353
b Fu(V)51815 10423 y Fo(i)52716 10257 y Fy(area)26664
11585 y(\(note)388 b(that)g Fu(R)315 b Fq(\270)308 b
Fu(r)31 b Fy(\).)387 b(Ev)-17 b(entually)-72 b(,)34733
13660 y Ft(\242)35655 13826 y Fo(i)36024 13660 y Ft(\()p
Fu(r)-31 b(;)184 b(j)63 b Ft(\))311 b Fq(\267)c Ft(2)p
Fu(\274)40 b(r)31 b Ft(\()p Fu(R)42875 13203 y Fp(2)43618
13660 y Fq(\241)246 b Fu(r)45255 13203 y Fp(2)45751 13660
y Ft(\))p Fu(;)6227 b Fy(\(15\))26664 15736 y(since)388
b(the)g(area)h(of)e(the)h(ring)g Fu(U)39273 15902 y Fo(i)40029
15736 y Fy(is)e Fu(\274)40 b Ft(\()p Fu(R)43105 15334
y Fp(2)43847 15736 y Fq(\241)246 b Fu(r)45484 15334 y
Fp(2)45981 15736 y Ft(\))p Fy(.)27771 17064 y(In)401
b(order)i(to)e(deri)-28 b(v)-17 b(e)404 b Ft(\242)37140
17230 y Fo(i)37509 17064 y Ft(\()p Fu(r)31 b Ft(\))p
Fy(,)403 b(according)h(to)e(Eq.)g(\(12\),)g(an)g(analyt-)26664
18393 y(ical)469 b(e)-17 b(xpression)470 b(has)f(to)g(be)h(deri)-28
b(v)-17 b(ed)471 b(for)d(inte)-17 b(gral)48042 17501
y Fm(R)48565 18786 y Fo(V)49088 18897 y Fk(i)49678 18393
y Ft(\242)50600 18559 y Fo(i)50969 18393 y Ft(\()p Fu(r)-31
b(;)184 b(j)63 b Ft(\))p Fu(d)-123 b(j)63 b Fy(.)26664
19798 y(Gi)-28 b(v)-17 b(en)480 b(that)f Ft(0)d Fq(\267)g
Ft(\242)35230 19964 y Fo(i)35599 19798 y Ft(\()p Fu(r)-31
b(;)184 b(j)63 b Ft(\))478 b Fq(\267)e Ft(2)p Fu(\274)40
b(r)31 b Ft(\()p Fu(R)42786 19396 y Fp(2)43596 19798
y Fq(\241)313 b Fu(r)45300 19396 y Fp(2)45797 19798 y
Ft(\))p Fy(,)46982 18906 y Fm(R)47505 20192 y Fo(V)48028
20303 y Fk(i)48618 19798 y Ft(\242)49540 19964 y Fo(i)49909
19798 y Ft(\()p Fu(r)-31 b(;)184 b(j)63 b Ft(\))p Fu(d)-123
b(j)542 b Fq(\267)26664 20312 y Fm(R)27186 21597 y Fo(V)27709
21708 y Fk(i)28300 21203 y Ft(2)p Fu(\274)40 b(r)31 b
Ft(\()p Fu(R)31334 20802 y Fp(2)32076 21203 y Fq(\241)246
b Fu(r)33713 20802 y Fp(2)34210 21203 y Ft(\))p Fu(d)-123
b(j)63 b Fy(.)388 b(Ev)-17 b(entually)-72 b(,)34712 23411
y Ft(\242)35634 23577 y Fo(i)36003 23411 y Ft(\()p Fu(r)31
b Ft(\))308 b Fq(\267)g Ft(2)p Fu(\274)40094 22954 y
Fp(2)40591 23411 y Fu(r)41121 22954 y Fp(3)41617 23411
y Ft(\()p Fu(R)42897 22954 y Fp(2)43639 23411 y Fq(\241)246
b Fu(r)45276 22954 y Fp(2)45773 23411 y Ft(\))p Fu(;)6205
b Fy(\(16\))26664 25487 y(since)388 b(the)g Fu(r)31 b
Fy(-ball)388 b(area)g(is)f Fu(\274)40 b(r)38570 25085
y Fp(2)39066 25487 y Fy(.)37589 27562 y(A)56 b Fz(P)g(P)g(E)g(N)g(D)g
(I)g(X)325 b Fy(I)56 b(I)28547 28891 y(D)g Fz(E)g(R)e(I)i(V)-64
b(A)-43 b(T)56 b(I)g(O)g(N)324 b(O)56 b(F)331 b(A)56
b(N)330 b Fy(A)56 b Fz(N)26 b(A)56 b(L)-34 b(Y)56 b(T)g(I)g(C)e(A)i(L)
324 b Fy(E)56 b Fz(X)g(P)g(R)e(E)i(S)g(S)g(I)g(O)g(N)324
b(F)56 b(O)g(R)38263 30219 y Ft(\242)39185 30385 y Fo(i)39554
30219 y Ft(\()p Fu(r)-31 b(;)184 b(j)r(;)g(u)p Ft(\))27771
31905 y Fy(When)292 b(one)g(of)e(the)i(angles)f(of)g(a)g(triangle)g(\()
44749 31613 y Ft(^)44604 31905 y Fu(\301)p Fy(\))f(is)g(kno)-28
b(wn)293 b(as)d(well)h(as)26664 33234 y(the)334 b(length)h(of)f(both)g
(adjacent)i(edges)f(\()p Fu(r)365 b Fy(and)335 b Fu(y)40
b Fy(\),)332 b(then)j(the)f(length)h(of)26664 34562 y(the)359
b(third)g(edge)i(is)e(possible)g(to)h(be)g(deri)-28 b(v)-17
b(ed)361 b(as)e(a)h(funtion)g(of)51733 34270 y Ft(^)51588
34562 y Fu(\301)o(;)184 b(r)-31 b(;)184 b(y)40 b Fy(.)26664
35890 y(T)-89 b(w)-11 b(o)409 b(dif)-28 b(ferent)409
b(cases)g(may)g(be)h(distinguished)f(with)g(respect)g(to)f(the)26664
37219 y(triangle')-61 b(s)387 b(particular)h(form,)g(as)f(depicted)j
(in)d(Fig.)h(11.)27328 45884 y @beginspecial 123 @llx
170 @lly 639 @urx 407 @ury 1182 @rwi @setspecial
%%BeginDocument: costas_triangle_a.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Microsoft PowerPoint - dfl)
%%Version: 1 4
%%Creator: Adobe Acrobat 6.0
%%CreationDate: 10:47:14 07/30/06
%%For: (okon)
%%DocumentData: Clean7Bit
%%BoundingBox: 123 170 639 407
%%HiResBoundingBox: 122.973343 170.270767 638.515381 406.757935
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L1 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr SEPS ttf hb Printer/PostScript Color Management 0


%%BeginResource: file Pscript_T42Hdr PSVER
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.18 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.18 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset l2compat 6.0 1
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
/getrampcolor {
cvi
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/sssetbackground { L1setcolor } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset sep_ops 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/undefineRes {
null exch
defineRes
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource Times-Bold
[/N13/Times-Bold 1 TZ

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 1205 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<?adobe-xap-filters esc="CRLF"?>
<x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-13, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
<rdf:Description rdf:about='uuid:9222234c-df12-49d5-a6c2-e2899f99dff7' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='Acrobat Distiller 6.0 (Windows)'></rdf:Description>
<rdf:Description rdf:about='uuid:9222234c-df12-49d5-a6c2-e2899f99dff7' xmlns:xap='http://ns.adobe.com/xap/1.0/' xap:CreateDate='2006-07-30T10:46:39+03:00' xap:CreatorTool='PScript5.dll Version 5.2.2' xap:ModifyDate='2006-07-30T10:46:39+03:00'></rdf:Description>
<rdf:Description rdf:about='uuid:9222234c-df12-49d5-a6c2-e2899f99dff7' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:4284a3df-c63c-4263-a4d7-4d88fcebb012'/>
<rdf:Description rdf:about='uuid:9222234c-df12-49d5-a6c2-e2899f99dff7' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:creator><rdf:Seq><rdf:li>okon</rdf:li></rdf:Seq></dc:creator><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Microsoft PowerPoint - dfl</rdf:li></rdf:Alt></dc:title></rdf:Description>
</rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
123 170 516 236 rectclip
[ 0 -1 1 0 -47.29742 529.73128 ] concat
/N11 [/DeviceRGB] /ColorSpace defineRes pop

%ADOBeginSubsetFont: DKJKFN+Symbol-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (DKJKFN+Symbol)
%%Title: (DKJKFN+Symbol Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /DKJKFN+Symbol def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {0 -220 1113 1005} def
/FontInfo 4 dict dup begin
/FSType 0 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 192 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 1 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B7C3C9ED920C533BFCEF627DC3963E487931C80D1235BDD70
699E096A6312D> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /DKJKFN+Symbol-Identity-H /Identity-H 0 [/DKJKFN+Symbol] ct_ComposeFont pop end end
%ADOEndSubsetFont
%%BeginResource: encoding
% Identity-H
%PDF_BeginEncoding: N14 (DKJKFN+Symbol-Identity-H)
/N14 (DKJKFN+Symbol-Identity-H) /Identity-H [ (DKJKFN+Symbol) ]
 /NoSubstitution [ /Serif ] 0 TZzero
%%EndResource
122.973343 170.270767 236.487167 515.542038 re
W
n
q
n
567.440002 61.039997 -540.0 719.999981 re
27.439999 61.039997 m
eoclip
n
n
27.439999 61.039997 540.000004 719.999981 re
1.0 1.0 1.0 setrgbcolor
f
Q
1 j
2.25 w
n
302.959991 211.279999 m
155.600006 409.759979 l
302.959991 647.839966 m
155.600006 409.759979 l
302.959991 647.839966 m
302.959991 211.279999 l
0.003922 0.003922 0.003922 setrgbcolor
S
0.13725 0.12549 0.12941  setrgbcolor
142.640289 405.680298 m
/N13 [0.0 18.0 -18.0 0.0 0.0 0.0] Tf
(A) show
312.799683 178.880295 m
(BC)
[481.919495 482.909363 ] pdfys
n
286.160004 233.839996 m
287.359985 239.119995 289.040009 244.400009 291.919983 245.360001 c
294.800018 246.319992 298.880005 242.959991 302.959991 239.600006 c
0.003922 0.003922 0.003922  setrgbcolor
S
q
n
274.880005 258.079987 18.480011 14.160004 re
W
n
0.0 0.0 0.0  setrgbcolor
288.800293 258.080292 m
%ADOBeginSubsetFont: DKJKFN+Symbol-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/DKJKFN+Symbol 1 GetGlyphDirectory
77 <001C60D8A8C9B7C054198D45FEF9419E93715E9EB53B7BFAE0973B62586E
6F466E946290AAD0CB0A3D0EE59FDB7B0F61A73131F19D9AA1249C6BD302CE4E
02AC20919959037CB0D038F8045A5836D4A30347C39D1F0601B26DCAB0D2D2A5
584537CB5B7D362AEA48BBE6B8425F5C4FF1DD2B140F796B0E483632BD82E4D4
0B473229BC2E94452A0546F0DEB273B5A310A60F806DD9849426753A58C3AA8A
6E5642991EAB0F4ADDFED90420640D67BE737091740EAA53F3F04A4DC85CF870
987413662B8149CD7F8B8C99075265CEF411D42A50CAAC751641> |
!
end
end end
%ADOEndSubsetFont
/N14 [0.0 21.045807 -21.045807 7.198105 0.0 0.0] Tf
(\000M) show
Q
0.13725 0.12549 0.12941  setrgbcolor
216.320297 286.640289 m
(r) show
352.400299 382.88089 m
(y) show
n
302.959991 409.759979 m
155.600006 409.759979 l
0.003922 0.003922 0.003922  setrgbcolor
S
1 J
0 j
8.0 M
n
291.919983 409.759979 11.040009 16.799988 re
S
0.13725 0.12549 0.12941  setrgbcolor
323.600281 405.680298 m
(D) show
324.080872 320.480896 m
(y) show
329.1203 329.600281 m
/N13 [0.0 12.0 -12.0 0.0 0.0 0.0] Tf
(1) show
324.080292 513.200317 m
/N13 [0.0 18.0 -18.0 0.0 0.0 0.0] Tf
(y) show
329.1203 522.320313 m
/N13 [0.0 12.0 -12.0 0.0 0.0 0.0] Tf
(2) show
n
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%DocumentNeededResources:
%%+ font Times-Bold
%%EOF

%%EndDocument
 @endspecial 14465 w @beginspecial 116 @llx 275 @lly
551 @urx 510 @ury 1182 @rwi @setspecial
%%BeginDocument: costas_triangle_b.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Microsoft PowerPoint - dfl)
%%Version: 1 4
%%Creator: Adobe Acrobat 6.0
%%CreationDate: 10:48:07 07/30/06
%%For: (okon)
%%DocumentData: Clean7Bit
%%BoundingBox: 116 275 551 510
%%HiResBoundingBox: 116.216568 275.000793 550.677322 510.136612
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L1 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr SEPS ttf hb Printer/PostScript Color Management 0


%%BeginResource: file Pscript_T42Hdr PSVER
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.18 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.18 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset l2compat 6.0 1
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
/getrampcolor {
cvi
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/sssetbackground { L1setcolor } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset sep_ops 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/undefineRes {
null exch
defineRes
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource Times-Bold
[/N13/Times-Bold 1 TZ

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 1205 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<?adobe-xap-filters esc="CRLF"?>
<x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-13, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
<rdf:Description rdf:about='uuid:1d760122-0ce2-40c6-8f9f-00d6dafaadee' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='Acrobat Distiller 6.0 (Windows)'></rdf:Description>
<rdf:Description rdf:about='uuid:1d760122-0ce2-40c6-8f9f-00d6dafaadee' xmlns:xap='http://ns.adobe.com/xap/1.0/' xap:CreateDate='2006-07-30T10:47:42+03:00' xap:CreatorTool='PScript5.dll Version 5.2.2' xap:ModifyDate='2006-07-30T10:47:42+03:00'></rdf:Description>
<rdf:Description rdf:about='uuid:1d760122-0ce2-40c6-8f9f-00d6dafaadee' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:85476245-a9f5-4d46-a3ec-54443f3ac41b'/>
<rdf:Description rdf:about='uuid:1d760122-0ce2-40c6-8f9f-00d6dafaadee' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:creator><rdf:Seq><rdf:li>okon</rdf:li></rdf:Seq></dc:creator><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Microsoft PowerPoint - dfl</rdf:li></rdf:Alt></dc:title></rdf:Description>
</rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
116 275 434 235 rectclip
[ 0 -1 1 0 -158.78423 626.35318 ] concat
/N11 [/DeviceRGB] /ColorSpace defineRes pop

%ADOBeginSubsetFont: DLJANB+Symbol-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (DLJANB+Symbol)
%%Title: (DLJANB+Symbol Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /DLJANB+Symbol def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {0 -220 1113 1005} def
/FontInfo 4 dict dup begin
/FSType 0 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 192 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 1 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B7C3C9ED920C533BFCEF627DC3963E487931C80D1235BDD70
699E096A6312D> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /DLJANB+Symbol-Identity-H /Identity-H 0 [/DLJANB+Symbol] ct_ComposeFont pop end end
%ADOEndSubsetFont
%%BeginResource: encoding
% Identity-H
%PDF_BeginEncoding: N14 (DLJANB+Symbol-Identity-H)
/N14 (DLJANB+Symbol-Identity-H) /Identity-H [ (DLJANB+Symbol) ]
 /NoSubstitution [ /Serif ] 0 TZzero
%%EndResource
116.216568 275.000793 235.135818 434.460754 re
W
n
q
n
567.440002 61.039997 -540.0 719.999981 re
27.439999 61.039997 m
eoclip
n
n
27.439999 61.039997 540.000004 719.999981 re
1.0 1.0 1.0 setrgbcolor
f
Q
1 j
2.25 w
n
302.959991 438.079987 m
155.600006 319.039978 l
302.959991 647.839966 m
155.600006 319.039978 l
302.959991 647.839966 m
302.959991 438.079987 l
0.003922 0.003922 0.003922 setrgbcolor
S
0.13725 0.12549 0.12941  setrgbcolor
142.640289 320.480286 m
/N13 [0.0 18.0 -18.0 0.0 0.0 0.0] Tf
(A) show
324.080292 428.240875 m
(B) show
312.799683 660.800903 m
(C) show
q
n
269.119995 445.039978 18.480011 14.160004 re
W
n
0.0 0.0 0.0  setrgbcolor
283.040283 445.040283 m
%ADOBeginSubsetFont: DLJANB+Symbol-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/DLJANB+Symbol 1 GetGlyphDirectory
77 <001C60D8A8C9B7C054198D45FEF9419E93715E9EB53B7BFAE0973B62586E
6F466E946290AAD0CB0A3D0EE59FDB7B0F61A73131F19D9AA1249C6BD302CE4E
02AC20919959037CB0D038F8045A5836D4A30347C39D1F0601B26DCAB0D2D2A5
584537CB5B7D362AEA48BBE6B8425F5C4FF1DD2B140F796B0E483632BD82E4D4
0B473229BC2E94452A0546F0DEB273B5A310A60F806DD9849426753A58C3AA8A
6E5642991EAB0F4ADDFED90420640D67BE737091740EAA53F3F04A4DC85CF870
987413662B8149CD7F8B8C99075265CEF411D42A50CAAC751641> |
!
end
end end
%ADOEndSubsetFont
/N14 [0.0 21.045807 -21.045807 7.198105 0.0 0.0] Tf
(\000M) show
Q
227.600296 382.88028 m
(r) show
324.080292 541.760864 m
(y) show
324.080292 297.920288 m
(D) show
n
291.919983 432.319977 m
290.720001 436.639984 290.0 440.720001 291.919983 443.600006 c
293.600006 446.47998 298.399994 447.919983 302.959991 449.359985 c
0.003922 0.003922 0.003922  setrgbcolor
S
[9.0 6.75 ] 0.0 d
n
302.959991 438.079987 m
302.959991 324.559998 l
155.600006 319.039978 m
302.959991 324.559998 l
S
0.13725 0.12549 0.12941  setrgbcolor
329.840302 371.600281 m
(y\222)
[9.1206 6.114466 ] pdfys
1 J
0 j
8.0 M
[] 0.0 d
n
291.919983 324.559998 11.040009 17.040009 re
0.003922 0.003922 0.003922  setrgbcolor
S
0 J
1 j
10.0 M
n
302.47998 416.0 m
297.919983 413.600006 292.880005 411.200012 290.23999 412.639984 c
287.600006 414.079987 287.359985 419.359985 286.880005 424.639984 c
S
q
n
273.919983 388.160004 23.76001 13.920013 re
W
n
0.0 0.0 0.0  setrgbcolor
293.1203 388.160278 m
%ADOBeginSubsetFont: DLJANB+Symbol-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_GlyphDirProcs begin
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
/DLJANB+Symbol 1 GetGlyphDirectory
45 <001C60D8A8C9B66A6BA5E0A482D9CA37F40443F655B8C6A4588AE3497963
49995E61DE2E261DCA3C33127FA33297A2FBC139C1D885A16D331E15C1D2133F
0B9370EE070B4E0DC40E9C862247157601F52663E20EC732852EA9FC77643D31
ACDDACE1FC413F3A533EA1EB3001DE365355696322FD9B126C3B0CF8DA28324F
77C04DFC7E792F8E7E9738995CD4D2AD697F2A116AB1F65614B22E898FAD3077
D0AD59D3F93DD57C59B7D0D6F09878848FC97857A2A093837344E94AA6B427F7
1EA53A72E8E76164628026A07D1E37ED55681A8A9E1E94FEF14713639F5BA59A
F764502AB4D37130E87BAEB3A921831D16ABC999D5F327467D5316F7DD95E8DB
1003A9DBD3D21F3152CC67B36EB2E3A57B573B9D3AD31EBEB7BCE98DD0BBAE49
3702C1B16A16D7C42EE31ECE39DC2F442DBA99D747C4444C8973> |
!
end
end end
%ADOEndSubsetFont
/N14 [0.0 20.982193 -20.982193 7.175507 0.0 0.0] Tf
(\000-) show
Q
n
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%DocumentNeededResources:
%%+ font Times-Bold
%%EOF

%%EndDocument
 @endspecial 33512 47212 a(a.)13689 b(b)-44 b(.)36814
49543 y Fz(Fig.)311 b(11.)930 b(T)-31 b(riangles.)27771
52152 y Fy(F)-17 b(or)619 b(the)h(case)g(depicted)h(in)e(Fig.)g(11.a,)h
Ft(cos)47210 51860 y(^)47065 52152 y Fu(\301)735 b Ft(=)50190
51658 y Fo(y)50639 51769 y Fj(1)p 50190 51897 881 45
v 50413 52534 a Fo(r)51204 52152 y Fy(.)618 b(Since)26664
53594 y Fu(y)930 b Ft(=)891 b Fu(y)30432 53760 y Fp(1)31407
53594 y Ft(+)480 b Fu(y)33291 53760 y Fp(2)33787 53594
y Fy(,)702 b Fu(y)35309 53760 y Fp(2)36696 53594 y Ft(=)891
b Fu(y)519 b Fq(\241)479 b Fu(y)41393 53760 y Fp(1)42780
53594 y Ft(=)891 b Fu(y)519 b Fq(\241)479 b Fu(r)215
b Ft(cos)49460 53302 y(^)49315 53594 y Fu(\301)p Fy(.)702
b(Further)-22 b(-)26664 54923 y(more,)687 b Ft(sin)31591
54631 y(^)31446 54923 y Fu(\301)861 b Ft(=)34823 54487
y Fo(AD)p 34823 54668 1414 45 v 35312 55304 a(r)36369
54923 y Fy(,)686 b Fu(AD)893 b Ft(=)862 b Fu(r)216 b
Ft(sin)44098 54631 y(^)43952 54923 y Fu(\301)p Fy(.)687
b(It)f(holds)h Fq(j)p Fu(AC)79 b Fq(j)52338 54521 y Fp(2)53698
54923 y Ft(=)26664 56355 y Fq(j)p Fu(AD)31 b Fq(j)29055
55954 y Fp(2)30129 56355 y Ft(+)577 b Fu(y)32150 55954
y Fp(2)32110 56630 y(2)32646 56355 y Fy(,)833 b(or)g
Fq(j)p Fu(AC)79 b Fq(j)1136 b Ft(=)40955 55393 y Fm(p)p
42062 55393 5321 45 v 962 x Fq(j)p Fu(AD)31 b Fq(j)44453
56036 y Fp(2)45197 56355 y Ft(+)246 b Fu(y)46887 55974
y Fp(2)46847 56651 y(2)47383 56355 y Fy(,)833 b(or)h
Fq(j)p Fu(AC)79 b Fq(j)1135 b Ft(=)26664 56766 y Fm(q)p
27771 56766 17260 45 v 1424 x Fu(r)28301 57870 y Fp(2)28982
58190 y Ft(sin)30341 57725 y Fp(2)31167 57898 y Ft(^)31022
58190 y Fu(\301)246 b Ft(+)g Fu(y)33618 57870 y Fp(2)34360
58190 y Ft(+)g Fu(r)35997 57870 y Fp(2)36678 58190 y
Ft(cos)38160 57870 y Fp(2)38986 57898 y Ft(^)38841 58190
y Fu(\301)g Fq(\241)g Ft(2)p Fu(y)40 b(r)215 b Ft(cos)44516
57898 y(^)44371 58190 y Fu(\301)o Fy(.)387 b(Ev)-17 b(entually)-72
b(,)33514 61028 y Fq(j)p Fu(AC)79 b Fq(j)309 b Ft(=)37306
59550 y Fm(q)p 38413 59550 8989 45 v 1478 x Fu(r)38943
60709 y Fp(2)39685 61028 y Ft(+)246 b Fu(y)41375 60709
y Fp(2)42117 61028 y Fq(\241)g Ft(2)p Fu(y)40 b(r)216
b Ft(cos)46887 60736 y(^)46741 61028 y Fu(\301:)5007
b Fy(\(17\))27771 63104 y(The)694 b(same)g(result)e(is)h(deri)-28
b(v)-17 b(ed)695 b(also)e(for)g(the)h(case)g(depicted)26664
64432 y(in)619 b(Fig.)h(11.b,)h(where)36765 64140 y Ft(^)36675
64432 y Fu(\265)768 b Ft(=)737 b Fu(\274)457 b Fq(\241)42074
64140 y Ft(^)41928 64432 y Fu(\301)p Fy(.)619 b(F)-17
b(or)621 b(this)e(case,)h Fq(j)p Fu(AC)79 b Fq(j)739
b Ft(=)26664 64823 y Fm(p)p 27771 64823 8428 45 v 947
x Fq(j)p Fu(AD)31 b Fq(j)30162 65450 y Fp(2)30906 65770
y Ft(+)246 b(\()p Fu(y)286 b Ft(+)245 b Fu(y)34961 65450
y Fl(0)35271 65770 y Ft(\))35701 65450 y Fp(2)36199 65770
y Fy(.)594 b(Ho)-28 b(we)g(v)-17 b(er)-44 b(,)597 b Fq(j)p
Fu(AD)31 b Fq(j)693 b Ft(=)e Fu(r)215 b Ft(sin)48867
65478 y(^)48776 65770 y Fu(\265)625 b Fy(and)596 b Fu(y)52697
65368 y Fl(0)53698 65770 y Ft(=)26664 67168 y Fu(r)215
b Ft(cos)29136 66876 y(^)29045 67168 y Fu(\265)30 b Fy(.)510
b(Since,)g Ft(sin)35262 66876 y(^)35171 67168 y Fu(\265)564
b Ft(=)533 b(sin)39338 66876 y(^)39193 67168 y Fu(\301)509
b Fy(and)i Ft(cos)44227 66876 y(^)44136 67168 y Fu(\265)564
b Ft(=)533 b Fq(\241)184 b Ft(cos)49472 66876 y(^)49327
67168 y Fu(\301)o Fy(,)509 b Fq(j)p Fu(AD)31 b Fq(j)535
b Ft(=)26664 68506 y Fu(r)215 b Ft(sin)29067 68214 y(^)28922
68506 y Fu(\301)396 b Fy(and)i Fu(y)32556 68104 y Fl(0)33191
68506 y Ft(=)324 b Fq(\241)p Fu(r)216 b Ft(cos)37764
68214 y(^)37619 68506 y Fu(\301)o Fy(.)396 b(Ev)-17 b(entually)-72
b(,)400 b(Eq.)d(\(17\))g(holds)g(for)g(this)26664 69834
y(case)388 b(as)g(well.)p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
